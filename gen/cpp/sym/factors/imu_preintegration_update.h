// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     cpp_templates/function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * Symbolic function to perform the full update of incorporating a new IMU measurement
 * into the state of a preintegrated IMU factor.
 */
template <typename Scalar>
void ImuPreintegrationUpdate(
    const Eigen::Matrix<Scalar, 9, 1>& state, const Eigen::Matrix<Scalar, 9, 9>& state_cov,
    const Eigen::Matrix<Scalar, 9, 3>& state_D_accel_bias,
    const Eigen::Matrix<Scalar, 9, 3>& state_D_gyro_bias,
    const Eigen::Matrix<Scalar, 3, 1>& accel_bias, const Eigen::Matrix<Scalar, 3, 1>& gyro_bias,
    const Eigen::Matrix<Scalar, 3, 3>& accel_cov, const Eigen::Matrix<Scalar, 3, 3>& gyro_cov,
    const Eigen::Matrix<Scalar, 3, 1>& accel, const Eigen::Matrix<Scalar, 3, 1>& gyro,
    const Scalar dt, const Scalar epsilon, Eigen::Matrix<Scalar, 9, 1>* const new_state = nullptr,
    Eigen::Matrix<Scalar, 9, 9>* const new_state_cov = nullptr,
    Eigen::Matrix<Scalar, 9, 3>* const new_state_D_accel_bias = nullptr,
    Eigen::Matrix<Scalar, 9, 3>* const new_state_D_gyro_bias = nullptr) {
  // Total ops: 2659

  // Input arrays

  // Intermediate terms (740)
  const Scalar _tmp0 = gyro(0, 0) - gyro_bias(0, 0);
  const Scalar _tmp1 = std::pow(dt, Scalar(2));
  const Scalar _tmp2 = gyro(1, 0) - gyro_bias(1, 0);
  const Scalar _tmp3 = std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = std::pow(_tmp0, Scalar(2));
  const Scalar _tmp5 = gyro(2, 0) - gyro_bias(2, 0);
  const Scalar _tmp6 = std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = std::pow(epsilon, Scalar(2));
  const Scalar _tmp8 = _tmp1 * _tmp3 + _tmp1 * _tmp4 + _tmp1 * _tmp6 + _tmp7;
  const Scalar _tmp9 = std::sqrt(_tmp8);
  const Scalar _tmp10 = Scalar(1.0) / (_tmp9);
  const Scalar _tmp11 = std::pow(state(0, 0), Scalar(2));
  const Scalar _tmp12 = std::pow(state(2, 0), Scalar(2));
  const Scalar _tmp13 = std::pow(state(1, 0), Scalar(2));
  const Scalar _tmp14 = _tmp11 + _tmp12 + _tmp13 + _tmp7;
  const Scalar _tmp15 = std::sqrt(_tmp14);
  const Scalar _tmp16 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp17 = std::cos(_tmp16);
  const Scalar _tmp18 = (Scalar(1) / Scalar(2)) * _tmp9;
  const Scalar _tmp19 = std::sin(_tmp18);
  const Scalar _tmp20 = _tmp17 * _tmp19;
  const Scalar _tmp21 = _tmp10 * _tmp20;
  const Scalar _tmp22 = _tmp21 * dt;
  const Scalar _tmp23 = _tmp0 * _tmp22;
  const Scalar _tmp24 = Scalar(1.0) / (_tmp15);
  const Scalar _tmp25 = std::sin(_tmp16);
  const Scalar _tmp26 = _tmp24 * _tmp25;
  const Scalar _tmp27 = _tmp19 * _tmp26;
  const Scalar _tmp28 = _tmp10 * dt;
  const Scalar _tmp29 = _tmp27 * _tmp28;
  const Scalar _tmp30 = _tmp29 * state(2, 0);
  const Scalar _tmp31 = _tmp2 * _tmp30;
  const Scalar _tmp32 = std::cos(_tmp18);
  const Scalar _tmp33 = _tmp25 * _tmp32;
  const Scalar _tmp34 = _tmp24 * _tmp33;
  const Scalar _tmp35 = _tmp34 * state(0, 0);
  const Scalar _tmp36 = _tmp27 * state(1, 0);
  const Scalar _tmp37 = _tmp28 * _tmp36;
  const Scalar _tmp38 = _tmp37 * _tmp5;
  const Scalar _tmp39 = _tmp23 - _tmp31 + _tmp35 + _tmp38;
  const Scalar _tmp40 = _tmp17 * _tmp32;
  const Scalar _tmp41 = _tmp30 * _tmp5;
  const Scalar _tmp42 = _tmp0 * _tmp29;
  const Scalar _tmp43 = _tmp42 * state(0, 0);
  const Scalar _tmp44 = _tmp2 * _tmp37;
  const Scalar _tmp45 = _tmp41 + _tmp43 + _tmp44;
  const Scalar _tmp46 = _tmp40 - _tmp45;
  const Scalar _tmp47 = std::fabs(_tmp46);
  const Scalar _tmp48 = 1 - epsilon;
  const Scalar _tmp49 = std::min<Scalar>(_tmp47, _tmp48);
  const Scalar _tmp50 = 1 - std::pow(_tmp49, Scalar(2));
  const Scalar _tmp51 = std::acos(_tmp49);
  const Scalar _tmp52 = (((_tmp46) > 0) - ((_tmp46) < 0));
  const Scalar _tmp53 = 2 * std::min<Scalar>(0, _tmp52) + 1;
  const Scalar _tmp54 = 2 * _tmp53;
  const Scalar _tmp55 = _tmp51 * _tmp54 / std::sqrt(_tmp50);
  const Scalar _tmp56 = _tmp29 * _tmp5;
  const Scalar _tmp57 = _tmp56 * state(0, 0);
  const Scalar _tmp58 = _tmp2 * _tmp22;
  const Scalar _tmp59 = _tmp0 * _tmp30;
  const Scalar _tmp60 = _tmp34 * state(1, 0);
  const Scalar _tmp61 = -_tmp57 + _tmp58 + _tmp59 + _tmp60;
  const Scalar _tmp62 = _tmp22 * _tmp5;
  const Scalar _tmp63 = _tmp2 * _tmp29;
  const Scalar _tmp64 = _tmp63 * state(0, 0);
  const Scalar _tmp65 = _tmp34 * state(2, 0);
  const Scalar _tmp66 = _tmp0 * _tmp37;
  const Scalar _tmp67 = _tmp62 + _tmp64 + _tmp65 - _tmp66;
  const Scalar _tmp68 = std::pow(_tmp25, Scalar(2));
  const Scalar _tmp69 = Scalar(1.0) / (_tmp14);
  const Scalar _tmp70 = _tmp13 * _tmp69;
  const Scalar _tmp71 = _tmp68 * _tmp70;
  const Scalar _tmp72 = -2 * _tmp71;
  const Scalar _tmp73 = _tmp12 * _tmp69;
  const Scalar _tmp74 = _tmp68 * _tmp73;
  const Scalar _tmp75 = 1 - 2 * _tmp74;
  const Scalar _tmp76 = _tmp72 + _tmp75;
  const Scalar _tmp77 = accel(0, 0) - accel_bias(0, 0);
  const Scalar _tmp78 = _tmp68 * _tmp69;
  const Scalar _tmp79 = 2 * state(1, 0);
  const Scalar _tmp80 = _tmp78 * _tmp79;
  const Scalar _tmp81 = _tmp80 * state(0, 0);
  const Scalar _tmp82 = 2 * _tmp17;
  const Scalar _tmp83 = _tmp26 * _tmp82;
  const Scalar _tmp84 = _tmp83 * state(2, 0);
  const Scalar _tmp85 = _tmp81 - _tmp84;
  const Scalar _tmp86 = accel(1, 0) - accel_bias(1, 0);
  const Scalar _tmp87 = 2 * _tmp78;
  const Scalar _tmp88 = _tmp87 * state(2, 0);
  const Scalar _tmp89 = _tmp88 * state(0, 0);
  const Scalar _tmp90 = _tmp17 * _tmp79;
  const Scalar _tmp91 = _tmp26 * _tmp90;
  const Scalar _tmp92 = _tmp89 + _tmp91;
  const Scalar _tmp93 = accel(2, 0) - accel_bias(2, 0);
  const Scalar _tmp94 = dt * (_tmp76 * _tmp77 + _tmp85 * _tmp86 + _tmp92 * _tmp93);
  const Scalar _tmp95 = Scalar(0.5) * std::fabs(dt);
  const Scalar _tmp96 = _tmp11 * _tmp69;
  const Scalar _tmp97 = _tmp68 * _tmp96;
  const Scalar _tmp98 = -2 * _tmp97;
  const Scalar _tmp99 = _tmp75 + _tmp98;
  const Scalar _tmp100 = _tmp81 + _tmp84;
  const Scalar _tmp101 = _tmp80 * state(2, 0);
  const Scalar _tmp102 = _tmp83 * state(0, 0);
  const Scalar _tmp103 = _tmp101 - _tmp102;
  const Scalar _tmp104 = dt * (_tmp100 * _tmp77 + _tmp103 * _tmp93 + _tmp86 * _tmp99);
  const Scalar _tmp105 = _tmp72 + _tmp98 + 1;
  const Scalar _tmp106 = _tmp89 - _tmp91;
  const Scalar _tmp107 = _tmp101 + _tmp102;
  const Scalar _tmp108 = dt * (_tmp105 * _tmp93 + _tmp106 * _tmp77 + _tmp107 * _tmp86);
  const Scalar _tmp109 = _tmp39 * _tmp53;
  const Scalar _tmp110 = _tmp2 * _tmp5;
  const Scalar _tmp111 = [&]() {
    const Scalar base = dt;
    return base * base * base;
  }();
  const Scalar _tmp112 = std::pow(_tmp8, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp113 = _tmp112 * _tmp27;
  const Scalar _tmp114 = _tmp113 * state(2, 0);
  const Scalar _tmp115 = _tmp111 * _tmp114;
  const Scalar _tmp116 = _tmp110 * _tmp115;
  const Scalar _tmp117 = Scalar(1.0) / (_tmp8);
  const Scalar _tmp118 = (Scalar(1) / Scalar(2)) * _tmp65;
  const Scalar _tmp119 = _tmp117 * _tmp118;
  const Scalar _tmp120 = _tmp111 * _tmp119;
  const Scalar _tmp121 = _tmp110 * _tmp120;
  const Scalar _tmp122 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp123 = _tmp122 * _tmp21;
  const Scalar _tmp124 = _tmp112 * _tmp36;
  const Scalar _tmp125 = _tmp111 * _tmp3;
  const Scalar _tmp126 = (Scalar(1) / Scalar(2)) * _tmp60;
  const Scalar _tmp127 = _tmp117 * _tmp126;
  const Scalar _tmp128 = (Scalar(1) / Scalar(2)) * _tmp35;
  const Scalar _tmp129 = _tmp117 * _tmp128;
  const Scalar _tmp130 = _tmp0 * _tmp2;
  const Scalar _tmp131 = _tmp111 * _tmp130;
  const Scalar _tmp132 = _tmp113 * state(0, 0);
  const Scalar _tmp133 = _tmp129 * _tmp131 - _tmp131 * _tmp132;
  const Scalar _tmp134 = -_tmp116 + _tmp121 + _tmp123 * _tmp2 - _tmp124 * _tmp125 +
                         _tmp125 * _tmp127 + _tmp133 + _tmp37;
  const Scalar _tmp135 = -_tmp40 + _tmp45;
  const Scalar _tmp136 = std::fabs(_tmp135);
  const Scalar _tmp137 = std::min<Scalar>(_tmp136, _tmp48);
  const Scalar _tmp138 = std::acos(_tmp137);
  const Scalar _tmp139 = 1 - std::pow(_tmp137, Scalar(2));
  const Scalar _tmp140 = ((((-_tmp136 + _tmp48) > 0) - ((-_tmp136 + _tmp48) < 0)) + 1) *
                         (((_tmp135) > 0) - ((_tmp135) < 0));
  const Scalar _tmp141 = _tmp137 * _tmp138 * _tmp140 / (_tmp139 * std::sqrt(_tmp139));
  const Scalar _tmp142 = _tmp134 * _tmp141;
  const Scalar _tmp143 = _tmp10 * _tmp122;
  const Scalar _tmp144 = _tmp27 * state(0, 0);
  const Scalar _tmp145 = _tmp143 * _tmp144;
  const Scalar _tmp146 = _tmp111 * _tmp127;
  const Scalar _tmp147 = _tmp111 * _tmp124;
  const Scalar _tmp148 = _tmp110 * _tmp146 - _tmp110 * _tmp147;
  const Scalar _tmp149 = _tmp112 * _tmp20;
  const Scalar _tmp150 = _tmp111 * _tmp149;
  const Scalar _tmp151 = (Scalar(1) / Scalar(2)) * _tmp40;
  const Scalar _tmp152 = _tmp117 * _tmp151;
  const Scalar _tmp153 = _tmp111 * _tmp152;
  const Scalar _tmp154 = -_tmp130 * _tmp150 + _tmp130 * _tmp153;
  const Scalar _tmp155 = _tmp138 * _tmp54 / std::sqrt(_tmp139);
  const Scalar _tmp156 = _tmp140 / _tmp139;
  const Scalar _tmp157 = _tmp109 * _tmp156;
  const Scalar _tmp158 = _tmp109 * _tmp142 - _tmp134 * _tmp157 +
                         _tmp155 * (_tmp114 * _tmp125 - _tmp119 * _tmp125 - _tmp145 * _tmp2 +
                                    _tmp148 + _tmp154 - _tmp30);
  const Scalar _tmp159 = _tmp111 * _tmp6;
  const Scalar _tmp160 = _tmp111 * _tmp132;
  const Scalar _tmp161 = _tmp0 * _tmp5;
  const Scalar _tmp162 = _tmp160 * _tmp161;
  const Scalar _tmp163 = _tmp111 * _tmp129;
  const Scalar _tmp164 = _tmp161 * _tmp163;
  const Scalar _tmp165 = _tmp113 * _tmp159;
  const Scalar _tmp166 = _tmp119 * _tmp159 + _tmp123 * _tmp5 + _tmp148 - _tmp162 + _tmp164 -
                         _tmp165 * state(2, 0) + _tmp30;
  const Scalar _tmp167 = _tmp141 * _tmp166;
  const Scalar _tmp168 = _tmp143 * _tmp5;
  const Scalar _tmp169 = _tmp153 * _tmp5;
  const Scalar _tmp170 = _tmp150 * _tmp5;
  const Scalar _tmp171 = _tmp0 * _tmp169 - _tmp0 * _tmp170;
  const Scalar _tmp172 = _tmp109 * _tmp167 +
                         _tmp155 * (_tmp116 - _tmp121 - _tmp124 * _tmp159 + _tmp127 * _tmp159 -
                                    _tmp144 * _tmp168 + _tmp171 + _tmp37) -
                         _tmp157 * _tmp166;
  const Scalar _tmp173 = Scalar(1.0) / (dt);
  const Scalar _tmp174 = _tmp172 * _tmp173;
  const Scalar _tmp175 = _tmp130 * _tmp147;
  const Scalar _tmp176 = _tmp111 * _tmp4;
  const Scalar _tmp177 = _tmp127 * _tmp131;
  const Scalar _tmp178 = _tmp29 * state(0, 0);
  const Scalar _tmp179 = -_tmp115 * _tmp161 + _tmp120 * _tmp161;
  const Scalar _tmp180 = _tmp0 * _tmp123 + _tmp129 * _tmp176 - _tmp132 * _tmp176 - _tmp175 +
                         _tmp177 + _tmp178 + _tmp179;
  const Scalar _tmp181 = _tmp141 * _tmp180;
  const Scalar _tmp182 = _tmp119 * _tmp131;
  const Scalar _tmp183 = _tmp146 * _tmp161;
  const Scalar _tmp184 = _tmp147 * _tmp161;
  const Scalar _tmp185 = _tmp114 * _tmp131;
  const Scalar _tmp186 = _tmp109 * _tmp181 +
                         _tmp155 * (-_tmp0 * _tmp145 - _tmp150 * _tmp4 + _tmp152 * _tmp176 -
                                    _tmp182 + _tmp183 - _tmp184 + _tmp185 + _tmp22) -
                         _tmp157 * _tmp180;
  const Scalar _tmp187 = _tmp173 * _tmp186;
  const Scalar _tmp188 = _tmp158 * _tmp173;
  const Scalar _tmp189 =
      _tmp174 * gyro_cov(2, 1) + _tmp187 * gyro_cov(0, 1) + _tmp188 * gyro_cov(1, 1);
  const Scalar _tmp190 =
      _tmp174 * gyro_cov(2, 2) + _tmp187 * gyro_cov(0, 2) + _tmp188 * gyro_cov(1, 2);
  const Scalar _tmp191 =
      _tmp174 * gyro_cov(2, 0) + _tmp187 * gyro_cov(0, 0) + _tmp188 * gyro_cov(1, 0);
  const Scalar _tmp192 = -_tmp42;
  const Scalar _tmp193 = std::pow(_tmp14, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp194 = _tmp193 * _tmp25;
  const Scalar _tmp195 = _tmp19 * _tmp194 * _tmp28;
  const Scalar _tmp196 = _tmp11 * _tmp195;
  const Scalar _tmp197 = state(0, 0) * state(1, 0);
  const Scalar _tmp198 = _tmp195 * _tmp2;
  const Scalar _tmp199 = _tmp197 * _tmp198;
  const Scalar _tmp200 = (Scalar(1) / Scalar(2)) * _tmp69;
  const Scalar _tmp201 = _tmp200 * _tmp58;
  const Scalar _tmp202 = _tmp197 * _tmp201;
  const Scalar _tmp203 = (Scalar(1) / Scalar(2)) * _tmp96;
  const Scalar _tmp204 = state(0, 0) * state(2, 0);
  const Scalar _tmp205 = _tmp200 * _tmp62;
  const Scalar _tmp206 = _tmp195 * _tmp204;
  const Scalar _tmp207 = -_tmp204 * _tmp205 + _tmp206 * _tmp5;
  const Scalar _tmp208 =
      _tmp0 * _tmp196 - _tmp128 + _tmp192 + _tmp199 - _tmp202 - _tmp203 * _tmp23 + _tmp207;
  const Scalar _tmp209 = _tmp52 * ((((-_tmp47 + _tmp48) > 0) - ((-_tmp47 + _tmp48) < 0)) + 1);
  const Scalar _tmp210 = _tmp209 * _tmp49 * _tmp51 / (_tmp50 * std::sqrt(_tmp50));
  const Scalar _tmp211 = _tmp109 * _tmp210;
  const Scalar _tmp212 = _tmp198 * _tmp204;
  const Scalar _tmp213 = _tmp197 * _tmp205;
  const Scalar _tmp214 = _tmp195 * _tmp197;
  const Scalar _tmp215 = _tmp214 * _tmp5;
  const Scalar _tmp216 = _tmp201 * _tmp204;
  const Scalar _tmp217 = _tmp193 * _tmp33;
  const Scalar _tmp218 = _tmp209 / _tmp50;
  const Scalar _tmp219 = _tmp208 * _tmp218;
  const Scalar _tmp220 = -_tmp109 * _tmp219 + _tmp208 * _tmp211 +
                         _tmp55 * (-_tmp11 * _tmp217 + _tmp151 * _tmp96 + _tmp212 + _tmp213 -
                                   _tmp215 - _tmp216 + _tmp34 - Scalar(1) / Scalar(2) * _tmp43);
  const Scalar _tmp221 = _tmp13 * _tmp195;
  const Scalar _tmp222 = (Scalar(1) / Scalar(2)) * _tmp70;
  const Scalar _tmp223 = state(1, 0) * state(2, 0);
  const Scalar _tmp224 = _tmp200 * _tmp223;
  const Scalar _tmp225 = _tmp198 * _tmp223 - _tmp224 * _tmp58;
  const Scalar _tmp226 = _tmp151 * _tmp69;
  const Scalar _tmp227 = -_tmp197 * _tmp217 + _tmp197 * _tmp226;
  const Scalar _tmp228 = -_tmp63;
  const Scalar _tmp229 = _tmp195 * _tmp223;
  const Scalar _tmp230 = _tmp229 * _tmp5;
  const Scalar _tmp231 = _tmp224 * _tmp62;
  const Scalar _tmp232 = _tmp200 * _tmp23;
  const Scalar _tmp233 = _tmp0 * _tmp214 - _tmp197 * _tmp232;
  const Scalar _tmp234 =
      -_tmp126 + _tmp13 * _tmp198 - _tmp222 * _tmp58 + _tmp228 + _tmp230 - _tmp231 + _tmp233;
  const Scalar _tmp235 = _tmp210 * _tmp234;
  const Scalar _tmp236 = _tmp218 * _tmp234;
  const Scalar _tmp237 = _tmp109 * _tmp235 - _tmp109 * _tmp236 +
                         _tmp55 * (-_tmp221 * _tmp5 + _tmp222 * _tmp62 + _tmp225 + _tmp227 +
                                   _tmp56 - Scalar(1) / Scalar(2) * _tmp66);
  const Scalar _tmp238 = _tmp0 * _tmp206;
  const Scalar _tmp239 = _tmp12 * _tmp195;
  const Scalar _tmp240 = _tmp204 * _tmp232;
  const Scalar _tmp241 = -_tmp56;
  const Scalar _tmp242 = (Scalar(1) / Scalar(2)) * _tmp73;
  const Scalar _tmp243 =
      -_tmp118 + _tmp225 + _tmp238 + _tmp239 * _tmp5 - _tmp240 + _tmp241 - _tmp242 * _tmp62;
  const Scalar _tmp244 = _tmp218 * _tmp243;
  const Scalar _tmp245 = -_tmp204 * _tmp217 + _tmp204 * _tmp226;
  const Scalar _tmp246 = -_tmp109 * _tmp244 + _tmp211 * _tmp243 +
                         _tmp55 * (_tmp12 * _tmp198 + _tmp228 - _tmp230 + _tmp231 -
                                   _tmp242 * _tmp58 + _tmp245 - Scalar(1) / Scalar(2) * _tmp59);
  const Scalar _tmp247 =
      _tmp220 * state_cov(0, 0) + _tmp237 * state_cov(1, 0) + _tmp246 * state_cov(2, 0);
  const Scalar _tmp248 =
      _tmp220 * state_cov(0, 1) + _tmp237 * state_cov(1, 1) + _tmp246 * state_cov(2, 1);
  const Scalar _tmp249 =
      _tmp220 * state_cov(0, 2) + _tmp237 * state_cov(1, 2) + _tmp246 * state_cov(2, 2);
  const Scalar _tmp250 = _tmp53 * _tmp61;
  const Scalar _tmp251 = _tmp156 * _tmp250;
  const Scalar _tmp252 = _tmp143 * _tmp36;
  const Scalar _tmp253 = _tmp155 * (-_tmp0 * _tmp252 - _tmp114 * _tmp176 + _tmp119 * _tmp176 +
                                    _tmp154 + _tmp162 - _tmp164 + _tmp30) -
                         _tmp180 * _tmp251 + _tmp181 * _tmp250;
  const Scalar _tmp254 = _tmp173 * _tmp253;
  const Scalar _tmp255 = _tmp169 * _tmp2 - _tmp170 * _tmp2;
  const Scalar _tmp256 = _tmp155 * (-_tmp129 * _tmp159 + _tmp165 * state(0, 0) - _tmp168 * _tmp36 -
                                    _tmp178 + _tmp179 + _tmp255) -
                         _tmp166 * _tmp251 + _tmp167 * _tmp250;
  const Scalar _tmp257 = _tmp173 * _tmp256;
  const Scalar _tmp258 = _tmp110 * _tmp160;
  const Scalar _tmp259 = _tmp110 * _tmp163;
  const Scalar _tmp260 = -_tmp134 * _tmp251 + _tmp142 * _tmp250 +
                         _tmp155 * (-_tmp150 * _tmp3 + _tmp153 * _tmp3 + _tmp182 - _tmp185 -
                                    _tmp2 * _tmp252 + _tmp22 + _tmp258 - _tmp259);
  const Scalar _tmp261 = _tmp173 * _tmp260;
  const Scalar _tmp262 =
      _tmp254 * gyro_cov(0, 0) + _tmp257 * gyro_cov(2, 0) + _tmp261 * gyro_cov(1, 0);
  const Scalar _tmp263 =
      _tmp254 * gyro_cov(0, 1) + _tmp257 * gyro_cov(2, 1) + _tmp261 * gyro_cov(1, 1);
  const Scalar _tmp264 = -_tmp217 * _tmp223 + _tmp223 * _tmp226;
  const Scalar _tmp265 = _tmp210 * _tmp243;
  const Scalar _tmp266 = -_tmp244 * _tmp250 + _tmp250 * _tmp265 +
                         _tmp55 * (-_tmp0 * _tmp239 + _tmp207 + _tmp23 * _tmp242 + _tmp264 -
                                   Scalar(1) / Scalar(2) * _tmp31 + _tmp42);
  const Scalar _tmp267 = _tmp208 * _tmp210;
  const Scalar _tmp268 = -_tmp219 * _tmp250 + _tmp250 * _tmp267 +
                         _tmp55 * (_tmp196 * _tmp5 - _tmp203 * _tmp62 + _tmp227 - _tmp238 +
                                   _tmp240 + _tmp241 - Scalar(1) / Scalar(2) * _tmp64);
  const Scalar _tmp269 = _tmp0 * _tmp229;
  const Scalar _tmp270 = _tmp224 * _tmp23;
  const Scalar _tmp271 = _tmp235 * _tmp250 - _tmp236 * _tmp250 +
                         _tmp55 * (-_tmp13 * _tmp217 + _tmp151 * _tmp70 - _tmp213 + _tmp215 -
                                   _tmp269 + _tmp270 + _tmp34 - Scalar(1) / Scalar(2) * _tmp44);
  const Scalar _tmp272 =
      _tmp266 * state_cov(2, 1) + _tmp268 * state_cov(0, 1) + _tmp271 * state_cov(1, 1);
  const Scalar _tmp273 =
      _tmp254 * gyro_cov(0, 2) + _tmp257 * gyro_cov(2, 2) + _tmp261 * gyro_cov(1, 2);
  const Scalar _tmp274 =
      _tmp266 * state_cov(2, 0) + _tmp268 * state_cov(0, 0) + _tmp271 * state_cov(1, 0);
  const Scalar _tmp275 =
      _tmp266 * state_cov(2, 2) + _tmp268 * state_cov(0, 2) + _tmp271 * state_cov(1, 2);
  const Scalar _tmp276 = _tmp27 * state(2, 0);
  const Scalar _tmp277 = _tmp53 * _tmp67;
  const Scalar _tmp278 = _tmp156 * _tmp277;
  const Scalar _tmp279 = _tmp155 * (-_tmp149 * _tmp159 + _tmp152 * _tmp159 - _tmp168 * _tmp276 -
                                    _tmp183 + _tmp184 + _tmp22 - _tmp258 + _tmp259) -
                         _tmp166 * _tmp278 + _tmp167 * _tmp277;
  const Scalar _tmp280 = _tmp173 * _tmp279;
  const Scalar _tmp281 = _tmp143 * _tmp276;
  const Scalar _tmp282 = _tmp155 * (-_tmp0 * _tmp281 + _tmp124 * _tmp176 - _tmp127 * _tmp176 +
                                    _tmp133 + _tmp171 - _tmp37) -
                         _tmp180 * _tmp278 + _tmp181 * _tmp277;
  const Scalar _tmp283 = _tmp173 * _tmp282;
  const Scalar _tmp284 = -_tmp134 * _tmp278 + _tmp142 * _tmp277 +
                         _tmp155 * (_tmp125 * _tmp129 - _tmp125 * _tmp132 + _tmp175 - _tmp177 +
                                    _tmp178 - _tmp2 * _tmp281 + _tmp255);
  const Scalar _tmp285 = _tmp173 * _tmp284;
  const Scalar _tmp286 =
      _tmp280 * gyro_cov(2, 1) + _tmp283 * gyro_cov(0, 1) + _tmp285 * gyro_cov(1, 1);
  const Scalar _tmp287 =
      _tmp280 * gyro_cov(2, 2) + _tmp283 * gyro_cov(0, 2) + _tmp285 * gyro_cov(1, 2);
  const Scalar _tmp288 = _tmp235 * _tmp277 - _tmp236 * _tmp277 +
                         _tmp55 * (_tmp0 * _tmp221 + _tmp192 - _tmp199 + _tmp202 -
                                   _tmp222 * _tmp23 + _tmp264 - Scalar(1) / Scalar(2) * _tmp38);
  const Scalar _tmp289 = -_tmp244 * _tmp277 + _tmp265 * _tmp277 +
                         _tmp55 * (-_tmp12 * _tmp217 + _tmp151 * _tmp73 - _tmp212 + _tmp216 +
                                   _tmp269 - _tmp270 + _tmp34 - Scalar(1) / Scalar(2) * _tmp41);
  const Scalar _tmp290 = -_tmp219 * _tmp277 + _tmp267 * _tmp277 +
                         _tmp55 * (-_tmp11 * _tmp198 + _tmp203 * _tmp58 + _tmp233 + _tmp245 -
                                   Scalar(1) / Scalar(2) * _tmp57 + _tmp63);
  const Scalar _tmp291 =
      _tmp288 * state_cov(1, 0) + _tmp289 * state_cov(2, 0) + _tmp290 * state_cov(0, 0);
  const Scalar _tmp292 =
      _tmp288 * state_cov(1, 2) + _tmp289 * state_cov(2, 2) + _tmp290 * state_cov(0, 2);
  const Scalar _tmp293 =
      _tmp288 * state_cov(1, 1) + _tmp289 * state_cov(2, 1) + _tmp290 * state_cov(0, 1);
  const Scalar _tmp294 =
      _tmp280 * gyro_cov(2, 0) + _tmp283 * gyro_cov(0, 0) + _tmp285 * gyro_cov(1, 0);
  const Scalar _tmp295 = _tmp194 * _tmp82;
  const Scalar _tmp296 = _tmp13 * _tmp295;
  const Scalar _tmp297 = _tmp296 * state(2, 0);
  const Scalar _tmp298 = 4 * _tmp68 / std::pow(_tmp14, Scalar(2));
  const Scalar _tmp299 = _tmp13 * _tmp298;
  const Scalar _tmp300 = _tmp299 * state(2, 0);
  const Scalar _tmp301 = -_tmp297 + _tmp300;
  const Scalar _tmp302 = 4 * _tmp78;
  const Scalar _tmp303 = [&]() {
    const Scalar base = state(2, 0);
    return base * base * base;
  }();
  const Scalar _tmp304 = -_tmp295 * _tmp303 + _tmp298 * _tmp303 - _tmp302 * state(2, 0);
  const Scalar _tmp305 = _tmp12 * _tmp298 * state(0, 0);
  const Scalar _tmp306 = _tmp87 * state(0, 0);
  const Scalar _tmp307 = _tmp12 * _tmp295;
  const Scalar _tmp308 = _tmp307 * state(0, 0);
  const Scalar _tmp309 = -_tmp305 + _tmp306 + _tmp308;
  const Scalar _tmp310 = _tmp194 * _tmp90;
  const Scalar _tmp311 = _tmp310 * state(2, 0);
  const Scalar _tmp312 = _tmp223 * _tmp78;
  const Scalar _tmp313 = std::pow(_tmp17, Scalar(2));
  const Scalar _tmp314 = _tmp313 * _tmp69;
  const Scalar _tmp315 = _tmp223 * _tmp314;
  const Scalar _tmp316 = -_tmp311 - _tmp312 + _tmp315;
  const Scalar _tmp317 = _tmp313 * _tmp73;
  const Scalar _tmp318 = _tmp298 * state(2, 0);
  const Scalar _tmp319 = -_tmp197 * _tmp318 + _tmp204 * _tmp310;
  const Scalar _tmp320 = _tmp319 - _tmp83;
  const Scalar _tmp321 =
      dt * (_tmp77 * (_tmp301 + _tmp304) + _tmp86 * (_tmp307 - _tmp317 + _tmp320 + _tmp74) +
            _tmp93 * (_tmp309 + _tmp316));
  const Scalar _tmp322 = _tmp321 * state_cov(2, 1);
  const Scalar _tmp323 = _tmp311 + _tmp312 - _tmp315;
  const Scalar _tmp324 = _tmp296 * state(0, 0);
  const Scalar _tmp325 = _tmp299 * state(0, 0);
  const Scalar _tmp326 = _tmp306 + _tmp324 - _tmp325;
  const Scalar _tmp327 = _tmp12 * _tmp310;
  const Scalar _tmp328 = _tmp298 * state(1, 0);
  const Scalar _tmp329 = _tmp12 * _tmp328;
  const Scalar _tmp330 = -_tmp327 + _tmp329;
  const Scalar _tmp331 = [&]() {
    const Scalar base = state(1, 0);
    return base * base * base;
  }();
  const Scalar _tmp332 = -_tmp295 * _tmp331 + _tmp298 * _tmp331 - _tmp302 * state(1, 0);
  const Scalar _tmp333 = _tmp313 * _tmp70;
  const Scalar _tmp334 = _tmp319 + _tmp83;
  const Scalar _tmp335 = _tmp77 * (_tmp330 + _tmp332) + _tmp86 * (_tmp323 + _tmp326) +
                         _tmp93 * (-_tmp296 + _tmp333 + _tmp334 - _tmp71);
  const Scalar _tmp336 = _tmp335 * dt;
  const Scalar _tmp337 = _tmp336 * state_cov(1, 1);
  const Scalar _tmp338 = _tmp305 - _tmp308;
  const Scalar _tmp339 = -_tmp324 + _tmp325;
  const Scalar _tmp340 = _tmp310 * state(0, 0);
  const Scalar _tmp341 = _tmp197 * _tmp78;
  const Scalar _tmp342 = _tmp197 * _tmp314;
  const Scalar _tmp343 = -_tmp340 - _tmp341 + _tmp342;
  const Scalar _tmp344 = _tmp11 * _tmp318;
  const Scalar _tmp345 = _tmp11 * _tmp295;
  const Scalar _tmp346 = _tmp345 * state(2, 0);
  const Scalar _tmp347 = -_tmp344 + _tmp346 + _tmp88;
  const Scalar _tmp348 = _tmp204 * _tmp78;
  const Scalar _tmp349 = _tmp204 * _tmp314;
  const Scalar _tmp350 = _tmp204 * _tmp295;
  const Scalar _tmp351 = _tmp348 - _tmp349 + _tmp350;
  const Scalar _tmp352 = _tmp11 * _tmp310;
  const Scalar _tmp353 = _tmp11 * _tmp328;
  const Scalar _tmp354 = _tmp352 - _tmp353 + _tmp80;
  const Scalar _tmp355 = dt * (_tmp77 * (_tmp338 + _tmp339) + _tmp86 * (_tmp351 + _tmp354) +
                               _tmp93 * (_tmp343 + _tmp347));
  const Scalar _tmp356 = _tmp355 * state_cov(0, 1);
  const Scalar _tmp357 = _tmp322 * _tmp95 + _tmp337 * _tmp95 + _tmp356 * _tmp95 +
                         dt * state_cov(6, 1) + state_cov(3, 1);
  const Scalar _tmp358 = _tmp321 * state_cov(2, 0);
  const Scalar _tmp359 = _tmp336 * state_cov(1, 0);
  const Scalar _tmp360 = _tmp355 * state_cov(0, 0);
  const Scalar _tmp361 = _tmp358 * _tmp95 + _tmp359 * _tmp95 + _tmp360 * _tmp95 +
                         dt * state_cov(6, 0) + state_cov(3, 0);
  const Scalar _tmp362 = _tmp321 * state_cov(2, 2);
  const Scalar _tmp363 = _tmp336 * state_cov(1, 2);
  const Scalar _tmp364 = _tmp355 * state_cov(0, 2);
  const Scalar _tmp365 = _tmp362 * _tmp95 + _tmp363 * _tmp95 + _tmp364 * _tmp95 +
                         dt * state_cov(6, 2) + state_cov(3, 2);
  const Scalar _tmp366 = -_tmp352 + _tmp353;
  const Scalar _tmp367 = _tmp297 - _tmp300 + _tmp88;
  const Scalar _tmp368 = _tmp340 + _tmp341 - _tmp342;
  const Scalar _tmp369 = dt * (_tmp77 * (_tmp316 + _tmp326) + _tmp86 * (_tmp330 + _tmp366) +
                               _tmp93 * (_tmp367 + _tmp368));
  const Scalar _tmp370 = _tmp369 * state_cov(1, 0);
  const Scalar _tmp371 = [&]() {
    const Scalar base = state(0, 0);
    return base * base * base;
  }();
  const Scalar _tmp372 = -_tmp295 * _tmp371 + _tmp298 * _tmp371 - _tmp302 * state(0, 0);
  const Scalar _tmp373 = -_tmp348 + _tmp349 - _tmp350;
  const Scalar _tmp374 = _tmp313 * _tmp96;
  const Scalar _tmp375 = dt * (_tmp77 * (_tmp354 + _tmp373) + _tmp86 * (_tmp338 + _tmp372) +
                               _tmp93 * (_tmp320 + _tmp345 - _tmp374 + _tmp97));
  const Scalar _tmp376 = _tmp375 * state_cov(0, 0);
  const Scalar _tmp377 = _tmp327 - _tmp329 + _tmp80;
  const Scalar _tmp378 = _tmp344 - _tmp346;
  const Scalar _tmp379 = dt * (_tmp77 * (-_tmp307 + _tmp317 + _tmp334 - _tmp74) +
                               _tmp86 * (_tmp304 + _tmp378) + _tmp93 * (_tmp351 + _tmp377));
  const Scalar _tmp380 = _tmp379 * state_cov(2, 0);
  const Scalar _tmp381 = _tmp370 * _tmp95 + _tmp376 * _tmp95 + _tmp380 * _tmp95 +
                         dt * state_cov(7, 0) + state_cov(4, 0);
  const Scalar _tmp382 = _tmp369 * state_cov(1, 1);
  const Scalar _tmp383 = _tmp375 * state_cov(0, 1);
  const Scalar _tmp384 = _tmp379 * state_cov(2, 1);
  const Scalar _tmp385 = _tmp382 * _tmp95 + _tmp383 * _tmp95 + _tmp384 * _tmp95 +
                         dt * state_cov(7, 1) + state_cov(4, 1);
  const Scalar _tmp386 = _tmp369 * state_cov(1, 2);
  const Scalar _tmp387 = _tmp375 * state_cov(0, 2);
  const Scalar _tmp388 = _tmp379 * state_cov(2, 2);
  const Scalar _tmp389 = _tmp386 * _tmp95 + _tmp387 * _tmp95 + _tmp388 * _tmp95 +
                         dt * state_cov(7, 2) + state_cov(4, 2);
  const Scalar _tmp390 =
      dt * (_tmp77 * (_tmp347 + _tmp368) + _tmp86 * (_tmp334 - _tmp345 + _tmp374 - _tmp97) +
            _tmp93 * (_tmp339 + _tmp372));
  const Scalar _tmp391 = _tmp390 * state_cov(0, 0);
  const Scalar _tmp392 = _tmp77 * (_tmp296 + _tmp320 - _tmp333 + _tmp71) +
                         _tmp86 * (_tmp343 + _tmp367) + _tmp93 * (_tmp332 + _tmp366);
  const Scalar _tmp393 = _tmp392 * dt;
  const Scalar _tmp394 = _tmp393 * state_cov(1, 0);
  const Scalar _tmp395 = dt * (_tmp77 * (_tmp309 + _tmp323) + _tmp86 * (_tmp373 + _tmp377) +
                               _tmp93 * (_tmp301 + _tmp378));
  const Scalar _tmp396 = _tmp395 * state_cov(2, 0);
  const Scalar _tmp397 = _tmp391 * _tmp95 + _tmp394 * _tmp95 + _tmp396 * _tmp95 +
                         dt * state_cov(8, 0) + state_cov(5, 0);
  const Scalar _tmp398 = _tmp390 * state_cov(0, 1);
  const Scalar _tmp399 = _tmp393 * state_cov(1, 1);
  const Scalar _tmp400 = _tmp395 * state_cov(2, 1);
  const Scalar _tmp401 = _tmp398 * _tmp95 + _tmp399 * _tmp95 + _tmp400 * _tmp95 +
                         dt * state_cov(8, 1) + state_cov(5, 1);
  const Scalar _tmp402 = _tmp390 * state_cov(0, 2);
  const Scalar _tmp403 = _tmp393 * state_cov(1, 2);
  const Scalar _tmp404 = _tmp395 * state_cov(2, 2);
  const Scalar _tmp405 = _tmp402 * _tmp95 + _tmp403 * _tmp95 + _tmp404 * _tmp95 +
                         dt * state_cov(8, 2) + state_cov(5, 2);
  const Scalar _tmp406 = _tmp322 + _tmp337 + _tmp356 + state_cov(6, 1);
  const Scalar _tmp407 = _tmp362 + _tmp363 + _tmp364 + state_cov(6, 2);
  const Scalar _tmp408 = _tmp358 + _tmp359 + _tmp360 + state_cov(6, 0);
  const Scalar _tmp409 = _tmp370 + _tmp376 + _tmp380 + state_cov(7, 0);
  const Scalar _tmp410 = _tmp386 + _tmp387 + _tmp388 + state_cov(7, 2);
  const Scalar _tmp411 = _tmp382 + _tmp383 + _tmp384 + state_cov(7, 1);
  const Scalar _tmp412 = _tmp398 + _tmp399 + _tmp400 + state_cov(8, 1);
  const Scalar _tmp413 = _tmp402 + _tmp403 + _tmp404 + state_cov(8, 2);
  const Scalar _tmp414 = _tmp391 + _tmp394 + _tmp396 + state_cov(8, 0);
  const Scalar _tmp415 =
      _tmp220 * state_cov(0, 6) + _tmp237 * state_cov(1, 6) + _tmp246 * state_cov(2, 6);
  const Scalar _tmp416 = _tmp247 * _tmp355;
  const Scalar _tmp417 = _tmp248 * _tmp336;
  const Scalar _tmp418 = _tmp249 * _tmp321;
  const Scalar _tmp419 =
      _tmp266 * state_cov(2, 6) + _tmp268 * state_cov(0, 6) + _tmp271 * state_cov(1, 6);
  const Scalar _tmp420 = _tmp272 * dt;
  const Scalar _tmp421 = _tmp335 * _tmp420;
  const Scalar _tmp422 = _tmp275 * _tmp321;
  const Scalar _tmp423 = _tmp274 * _tmp355;
  const Scalar _tmp424 = _tmp291 * _tmp355;
  const Scalar _tmp425 = _tmp292 * _tmp321;
  const Scalar _tmp426 = _tmp293 * _tmp336;
  const Scalar _tmp427 =
      _tmp288 * state_cov(1, 6) + _tmp289 * state_cov(2, 6) + _tmp290 * state_cov(0, 6);
  const Scalar _tmp428 = _tmp321 * _tmp365;
  const Scalar _tmp429 = _tmp92 * accel_cov(2, 2);
  const Scalar _tmp430 = _tmp85 * accel_cov(1, 2);
  const Scalar _tmp431 = _tmp76 * accel_cov(0, 2);
  const Scalar _tmp432 = _tmp429 * _tmp95 + _tmp430 * _tmp95 + _tmp431 * _tmp95;
  const Scalar _tmp433 = _tmp92 * dt;
  const Scalar _tmp434 = _tmp432 * _tmp433;
  const Scalar _tmp435 = _tmp321 * state_cov(2, 3);
  const Scalar _tmp436 = _tmp92 * accel_cov(2, 1);
  const Scalar _tmp437 = _tmp85 * accel_cov(1, 1);
  const Scalar _tmp438 = _tmp76 * accel_cov(0, 1);
  const Scalar _tmp439 = _tmp436 * _tmp95 + _tmp437 * _tmp95 + _tmp438 * _tmp95;
  const Scalar _tmp440 = _tmp85 * dt;
  const Scalar _tmp441 = _tmp439 * _tmp440;
  const Scalar _tmp442 = _tmp92 * accel_cov(2, 0);
  const Scalar _tmp443 = _tmp85 * accel_cov(1, 0);
  const Scalar _tmp444 = _tmp76 * accel_cov(0, 0);
  const Scalar _tmp445 = _tmp442 * _tmp95 + _tmp443 * _tmp95 + _tmp444 * _tmp95;
  const Scalar _tmp446 = _tmp76 * dt;
  const Scalar _tmp447 = _tmp445 * _tmp446;
  const Scalar _tmp448 = _tmp336 * state_cov(1, 3);
  const Scalar _tmp449 = _tmp355 * _tmp361;
  const Scalar _tmp450 = _tmp336 * _tmp357;
  const Scalar _tmp451 = _tmp321 * state_cov(2, 6);
  const Scalar _tmp452 = _tmp336 * state_cov(1, 6);
  const Scalar _tmp453 = _tmp355 * state_cov(0, 6);
  const Scalar _tmp454 = _tmp451 * _tmp95 + _tmp452 * _tmp95 + _tmp453 * _tmp95 +
                         dt * state_cov(6, 6) + state_cov(3, 6);
  const Scalar _tmp455 = _tmp355 * state_cov(0, 3);
  const Scalar _tmp456 = _tmp355 * _tmp381;
  const Scalar _tmp457 = _tmp369 * state_cov(1, 3);
  const Scalar _tmp458 = _tmp336 * _tmp385;
  const Scalar _tmp459 = _tmp321 * _tmp389;
  const Scalar _tmp460 = _tmp99 * accel_cov(1, 2);
  const Scalar _tmp461 = _tmp100 * accel_cov(0, 2);
  const Scalar _tmp462 = _tmp103 * accel_cov(2, 2);
  const Scalar _tmp463 = _tmp460 * _tmp95 + _tmp461 * _tmp95 + _tmp462 * _tmp95;
  const Scalar _tmp464 = _tmp433 * _tmp463;
  const Scalar _tmp465 = _tmp375 * state_cov(0, 3);
  const Scalar _tmp466 = _tmp99 * accel_cov(1, 0);
  const Scalar _tmp467 = _tmp100 * accel_cov(0, 0);
  const Scalar _tmp468 = _tmp103 * accel_cov(2, 0);
  const Scalar _tmp469 = _tmp466 * _tmp95 + _tmp467 * _tmp95 + _tmp468 * _tmp95;
  const Scalar _tmp470 = _tmp446 * _tmp469;
  const Scalar _tmp471 = _tmp379 * state_cov(2, 3);
  const Scalar _tmp472 = _tmp99 * accel_cov(1, 1);
  const Scalar _tmp473 = _tmp100 * accel_cov(0, 1);
  const Scalar _tmp474 = _tmp103 * accel_cov(2, 1);
  const Scalar _tmp475 = _tmp472 * _tmp95 + _tmp473 * _tmp95 + _tmp474 * _tmp95;
  const Scalar _tmp476 = _tmp440 * _tmp475;
  const Scalar _tmp477 = _tmp369 * state_cov(1, 6);
  const Scalar _tmp478 = _tmp375 * state_cov(0, 6);
  const Scalar _tmp479 = _tmp379 * state_cov(2, 6);
  const Scalar _tmp480 = _tmp477 * _tmp95 + _tmp478 * _tmp95 + _tmp479 * _tmp95 +
                         dt * state_cov(7, 6) + state_cov(4, 6);
  const Scalar _tmp481 = _tmp355 * _tmp397;
  const Scalar _tmp482 = _tmp336 * _tmp401;
  const Scalar _tmp483 = _tmp390 * state_cov(0, 3);
  const Scalar _tmp484 = _tmp106 * accel_cov(0, 2);
  const Scalar _tmp485 = _tmp105 * accel_cov(2, 2);
  const Scalar _tmp486 = _tmp107 * accel_cov(1, 2);
  const Scalar _tmp487 = _tmp484 * _tmp95 + _tmp485 * _tmp95 + _tmp486 * _tmp95;
  const Scalar _tmp488 = _tmp433 * _tmp487;
  const Scalar _tmp489 = _tmp106 * accel_cov(0, 1);
  const Scalar _tmp490 = _tmp105 * accel_cov(2, 1);
  const Scalar _tmp491 = _tmp107 * accel_cov(1, 1);
  const Scalar _tmp492 = _tmp489 * _tmp95 + _tmp490 * _tmp95 + _tmp491 * _tmp95;
  const Scalar _tmp493 = _tmp440 * _tmp492;
  const Scalar _tmp494 = _tmp393 * state_cov(1, 3);
  const Scalar _tmp495 = _tmp321 * _tmp405;
  const Scalar _tmp496 = _tmp395 * state_cov(2, 3);
  const Scalar _tmp497 = _tmp390 * state_cov(0, 6);
  const Scalar _tmp498 = _tmp393 * state_cov(1, 6);
  const Scalar _tmp499 = _tmp395 * state_cov(2, 6);
  const Scalar _tmp500 = _tmp497 * _tmp95 + _tmp498 * _tmp95 + _tmp499 * _tmp95 +
                         dt * state_cov(8, 6) + state_cov(5, 6);
  const Scalar _tmp501 = _tmp106 * accel_cov(0, 0);
  const Scalar _tmp502 = _tmp105 * accel_cov(2, 0);
  const Scalar _tmp503 = _tmp107 * accel_cov(1, 0);
  const Scalar _tmp504 = _tmp501 * _tmp95 + _tmp502 * _tmp95 + _tmp503 * _tmp95;
  const Scalar _tmp505 = _tmp446 * _tmp504;
  const Scalar _tmp506 = _tmp451 + _tmp452 + _tmp453 + state_cov(6, 6);
  const Scalar _tmp507 = _tmp429 + _tmp430 + _tmp431;
  const Scalar _tmp508 = _tmp433 * _tmp507;
  const Scalar _tmp509 = _tmp321 * _tmp407;
  const Scalar _tmp510 = _tmp336 * _tmp406;
  const Scalar _tmp511 = _tmp355 * _tmp408;
  const Scalar _tmp512 = _tmp436 + _tmp437 + _tmp438;
  const Scalar _tmp513 = _tmp440 * _tmp512;
  const Scalar _tmp514 = _tmp442 + _tmp443 + _tmp444;
  const Scalar _tmp515 = _tmp446 * _tmp514;
  const Scalar _tmp516 = _tmp336 * _tmp411;
  const Scalar _tmp517 = _tmp355 * _tmp409;
  const Scalar _tmp518 = _tmp472 + _tmp473 + _tmp474;
  const Scalar _tmp519 = _tmp440 * _tmp518;
  const Scalar _tmp520 = _tmp460 + _tmp461 + _tmp462;
  const Scalar _tmp521 = _tmp433 * _tmp520;
  const Scalar _tmp522 = _tmp466 + _tmp467 + _tmp468;
  const Scalar _tmp523 = _tmp446 * _tmp522;
  const Scalar _tmp524 = _tmp477 + _tmp478 + _tmp479 + state_cov(7, 6);
  const Scalar _tmp525 = _tmp321 * _tmp410;
  const Scalar _tmp526 = _tmp336 * _tmp412;
  const Scalar _tmp527 = _tmp497 + _tmp498 + _tmp499 + state_cov(8, 6);
  const Scalar _tmp528 = _tmp355 * _tmp414;
  const Scalar _tmp529 = _tmp501 + _tmp502 + _tmp503;
  const Scalar _tmp530 = _tmp446 * _tmp529;
  const Scalar _tmp531 = _tmp321 * _tmp413;
  const Scalar _tmp532 = _tmp484 + _tmp485 + _tmp486;
  const Scalar _tmp533 = _tmp433 * _tmp532;
  const Scalar _tmp534 = _tmp489 + _tmp490 + _tmp491;
  const Scalar _tmp535 = _tmp440 * _tmp534;
  const Scalar _tmp536 =
      _tmp220 * state_cov(0, 7) + _tmp237 * state_cov(1, 7) + _tmp246 * state_cov(2, 7);
  const Scalar _tmp537 = _tmp248 * _tmp369;
  const Scalar _tmp538 = _tmp249 * _tmp379;
  const Scalar _tmp539 = _tmp247 * _tmp375;
  const Scalar _tmp540 =
      _tmp266 * state_cov(2, 7) + _tmp268 * state_cov(0, 7) + _tmp271 * state_cov(1, 7);
  const Scalar _tmp541 = _tmp274 * _tmp375;
  const Scalar _tmp542 = _tmp272 * _tmp369;
  const Scalar _tmp543 = _tmp275 * _tmp379;
  const Scalar _tmp544 = _tmp292 * _tmp379;
  const Scalar _tmp545 = _tmp293 * _tmp369;
  const Scalar _tmp546 =
      _tmp288 * state_cov(1, 7) + _tmp289 * state_cov(2, 7) + _tmp290 * state_cov(0, 7);
  const Scalar _tmp547 = _tmp291 * _tmp375;
  const Scalar _tmp548 = _tmp365 * _tmp379;
  const Scalar _tmp549 = _tmp99 * dt;
  const Scalar _tmp550 = _tmp439 * _tmp549;
  const Scalar _tmp551 = _tmp357 * _tmp369;
  const Scalar _tmp552 = _tmp321 * state_cov(2, 4);
  const Scalar _tmp553 = _tmp100 * dt;
  const Scalar _tmp554 = _tmp445 * _tmp553;
  const Scalar _tmp555 = _tmp336 * state_cov(1, 4);
  const Scalar _tmp556 = _tmp361 * _tmp375;
  const Scalar _tmp557 = _tmp103 * dt;
  const Scalar _tmp558 = _tmp432 * _tmp557;
  const Scalar _tmp559 = _tmp321 * state_cov(2, 7);
  const Scalar _tmp560 = _tmp336 * state_cov(1, 7);
  const Scalar _tmp561 = _tmp355 * state_cov(0, 7);
  const Scalar _tmp562 = _tmp559 * _tmp95 + _tmp560 * _tmp95 + _tmp561 * _tmp95 +
                         dt * state_cov(6, 7) + state_cov(3, 7);
  const Scalar _tmp563 = _tmp355 * state_cov(0, 4);
  const Scalar _tmp564 = _tmp369 * state_cov(1, 4);
  const Scalar _tmp565 = _tmp375 * state_cov(0, 4);
  const Scalar _tmp566 = _tmp379 * _tmp389;
  const Scalar _tmp567 = _tmp379 * state_cov(2, 4);
  const Scalar _tmp568 = _tmp463 * _tmp557;
  const Scalar _tmp569 = _tmp469 * _tmp553;
  const Scalar _tmp570 = _tmp369 * state_cov(1, 7);
  const Scalar _tmp571 = _tmp375 * state_cov(0, 7);
  const Scalar _tmp572 = _tmp379 * state_cov(2, 7);
  const Scalar _tmp573 = _tmp570 * _tmp95 + _tmp571 * _tmp95 + _tmp572 * _tmp95 +
                         dt * state_cov(7, 7) + state_cov(4, 7);
  const Scalar _tmp574 = _tmp369 * _tmp385;
  const Scalar _tmp575 = _tmp475 * _tmp549;
  const Scalar _tmp576 = _tmp375 * _tmp381;
  const Scalar _tmp577 = _tmp390 * state_cov(0, 4);
  const Scalar _tmp578 = _tmp369 * _tmp401;
  const Scalar _tmp579 = _tmp492 * _tmp549;
  const Scalar _tmp580 = _tmp504 * _tmp553;
  const Scalar _tmp581 = _tmp379 * _tmp405;
  const Scalar _tmp582 = _tmp375 * _tmp397;
  const Scalar _tmp583 = _tmp393 * state_cov(1, 4);
  const Scalar _tmp584 = _tmp487 * _tmp557;
  const Scalar _tmp585 = _tmp395 * state_cov(2, 4);
  const Scalar _tmp586 = _tmp390 * state_cov(0, 7);
  const Scalar _tmp587 = _tmp393 * state_cov(1, 7);
  const Scalar _tmp588 = _tmp395 * state_cov(2, 7);
  const Scalar _tmp589 = _tmp586 * _tmp95 + _tmp587 * _tmp95 + _tmp588 * _tmp95 +
                         dt * state_cov(8, 7) + state_cov(5, 7);
  const Scalar _tmp590 = _tmp514 * _tmp553;
  const Scalar _tmp591 = _tmp512 * _tmp549;
  const Scalar _tmp592 = _tmp559 + _tmp560 + _tmp561 + state_cov(6, 7);
  const Scalar _tmp593 = _tmp375 * _tmp408;
  const Scalar _tmp594 = _tmp369 * _tmp406;
  const Scalar _tmp595 = _tmp507 * _tmp557;
  const Scalar _tmp596 = _tmp379 * _tmp407;
  const Scalar _tmp597 = _tmp379 * _tmp410;
  const Scalar _tmp598 = _tmp369 * _tmp411;
  const Scalar _tmp599 = _tmp522 * _tmp553;
  const Scalar _tmp600 = _tmp375 * _tmp409;
  const Scalar _tmp601 = _tmp520 * _tmp557;
  const Scalar _tmp602 = _tmp518 * _tmp549;
  const Scalar _tmp603 = _tmp570 + _tmp571 + _tmp572 + state_cov(7, 7);
  const Scalar _tmp604 = _tmp379 * _tmp413;
  const Scalar _tmp605 = _tmp532 * _tmp557;
  const Scalar _tmp606 = _tmp534 * _tmp549;
  const Scalar _tmp607 = _tmp586 + _tmp587 + _tmp588 + state_cov(8, 7);
  const Scalar _tmp608 = _tmp375 * _tmp414;
  const Scalar _tmp609 = _tmp529 * _tmp553;
  const Scalar _tmp610 = _tmp369 * _tmp412;
  const Scalar _tmp611 = _tmp247 * _tmp390;
  const Scalar _tmp612 =
      _tmp220 * state_cov(0, 8) + _tmp237 * state_cov(1, 8) + _tmp246 * state_cov(2, 8);
  const Scalar _tmp613 = _tmp249 * _tmp395;
  const Scalar _tmp614 = _tmp248 * _tmp393;
  const Scalar _tmp615 =
      _tmp266 * state_cov(2, 8) + _tmp268 * state_cov(0, 8) + _tmp271 * state_cov(1, 8);
  const Scalar _tmp616 = _tmp392 * _tmp420;
  const Scalar _tmp617 = _tmp275 * _tmp395;
  const Scalar _tmp618 = _tmp274 * _tmp390;
  const Scalar _tmp619 = _tmp293 * _tmp393;
  const Scalar _tmp620 =
      _tmp288 * state_cov(1, 8) + _tmp289 * state_cov(2, 8) + _tmp290 * state_cov(0, 8);
  const Scalar _tmp621 = _tmp292 * _tmp395;
  const Scalar _tmp622 = _tmp291 * _tmp390;
  const Scalar _tmp623 = _tmp105 * dt;
  const Scalar _tmp624 = _tmp432 * _tmp623;
  const Scalar _tmp625 = _tmp365 * _tmp395;
  const Scalar _tmp626 = _tmp357 * _tmp393;
  const Scalar _tmp627 = _tmp106 * dt;
  const Scalar _tmp628 = _tmp445 * _tmp627;
  const Scalar _tmp629 = _tmp321 * state_cov(2, 5);
  const Scalar _tmp630 = _tmp361 * _tmp390;
  const Scalar _tmp631 = _tmp336 * state_cov(1, 5);
  const Scalar _tmp632 = _tmp107 * dt;
  const Scalar _tmp633 = _tmp439 * _tmp632;
  const Scalar _tmp634 = _tmp321 * state_cov(2, 8);
  const Scalar _tmp635 = _tmp336 * state_cov(1, 8);
  const Scalar _tmp636 = _tmp355 * state_cov(0, 8);
  const Scalar _tmp637 = _tmp634 * _tmp95 + _tmp635 * _tmp95 + _tmp636 * _tmp95 +
                         dt * state_cov(6, 8) + state_cov(3, 8);
  const Scalar _tmp638 = _tmp355 * state_cov(0, 5);
  const Scalar _tmp639 = _tmp385 * _tmp393;
  const Scalar _tmp640 = _tmp369 * state_cov(1, 5);
  const Scalar _tmp641 = _tmp469 * _tmp627;
  const Scalar _tmp642 = _tmp375 * state_cov(0, 5);
  const Scalar _tmp643 = _tmp389 * _tmp395;
  const Scalar _tmp644 = _tmp475 * _tmp632;
  const Scalar _tmp645 = _tmp379 * state_cov(2, 5);
  const Scalar _tmp646 = _tmp381 * _tmp390;
  const Scalar _tmp647 = _tmp463 * _tmp623;
  const Scalar _tmp648 = _tmp369 * state_cov(1, 8);
  const Scalar _tmp649 = _tmp375 * state_cov(0, 8);
  const Scalar _tmp650 = _tmp379 * state_cov(2, 8);
  const Scalar _tmp651 = _tmp648 * _tmp95 + _tmp649 * _tmp95 + _tmp650 * _tmp95 +
                         dt * state_cov(7, 8) + state_cov(4, 8);
  const Scalar _tmp652 = _tmp390 * state_cov(0, 5);
  const Scalar _tmp653 = _tmp504 * _tmp627;
  const Scalar _tmp654 = _tmp487 * _tmp623;
  const Scalar _tmp655 = _tmp395 * _tmp405;
  const Scalar _tmp656 = _tmp393 * _tmp401;
  const Scalar _tmp657 = _tmp393 * state_cov(1, 5);
  const Scalar _tmp658 = _tmp492 * _tmp632;
  const Scalar _tmp659 = _tmp395 * state_cov(2, 5);
  const Scalar _tmp660 = _tmp390 * state_cov(0, 8);
  const Scalar _tmp661 = _tmp393 * state_cov(1, 8);
  const Scalar _tmp662 = _tmp395 * state_cov(2, 8);
  const Scalar _tmp663 = _tmp660 * _tmp95 + _tmp661 * _tmp95 + _tmp662 * _tmp95 +
                         dt * state_cov(8, 8) + state_cov(5, 8);
  const Scalar _tmp664 = _tmp390 * _tmp397;
  const Scalar _tmp665 = _tmp514 * _tmp627;
  const Scalar _tmp666 = _tmp395 * _tmp407;
  const Scalar _tmp667 = _tmp634 + _tmp635 + _tmp636 + state_cov(6, 8);
  const Scalar _tmp668 = _tmp507 * _tmp623;
  const Scalar _tmp669 = _tmp512 * _tmp632;
  const Scalar _tmp670 = _tmp390 * _tmp408;
  const Scalar _tmp671 = _tmp393 * _tmp406;
  const Scalar _tmp672 = _tmp395 * _tmp410;
  const Scalar _tmp673 = _tmp393 * _tmp411;
  const Scalar _tmp674 = _tmp390 * _tmp409;
  const Scalar _tmp675 = _tmp520 * _tmp623;
  const Scalar _tmp676 = _tmp522 * _tmp627;
  const Scalar _tmp677 = _tmp518 * _tmp632;
  const Scalar _tmp678 = _tmp648 + _tmp649 + _tmp650 + state_cov(7, 8);
  const Scalar _tmp679 = _tmp393 * _tmp412;
  const Scalar _tmp680 = _tmp534 * _tmp632;
  const Scalar _tmp681 = _tmp532 * _tmp623;
  const Scalar _tmp682 = _tmp660 + _tmp661 + _tmp662 + state_cov(8, 8);
  const Scalar _tmp683 = _tmp529 * _tmp627;
  const Scalar _tmp684 = _tmp390 * _tmp414;
  const Scalar _tmp685 = _tmp395 * _tmp413;
  const Scalar _tmp686 = _tmp355 * state_D_accel_bias(0, 0);
  const Scalar _tmp687 = _tmp336 * state_D_accel_bias(1, 0);
  const Scalar _tmp688 = _tmp321 * state_D_accel_bias(2, 0);
  const Scalar _tmp689 = _tmp369 * state_D_accel_bias(1, 0);
  const Scalar _tmp690 = _tmp379 * state_D_accel_bias(2, 0);
  const Scalar _tmp691 = _tmp375 * state_D_accel_bias(0, 0);
  const Scalar _tmp692 = _tmp393 * state_D_accel_bias(1, 0);
  const Scalar _tmp693 = _tmp395 * state_D_accel_bias(2, 0);
  const Scalar _tmp694 = _tmp390 * state_D_accel_bias(0, 0);
  const Scalar _tmp695 = _tmp355 * state_D_accel_bias(0, 1);
  const Scalar _tmp696 = _tmp336 * state_D_accel_bias(1, 1);
  const Scalar _tmp697 = _tmp321 * state_D_accel_bias(2, 1);
  const Scalar _tmp698 = _tmp369 * state_D_accel_bias(1, 1);
  const Scalar _tmp699 = _tmp379 * state_D_accel_bias(2, 1);
  const Scalar _tmp700 = _tmp375 * state_D_accel_bias(0, 1);
  const Scalar _tmp701 = _tmp393 * state_D_accel_bias(1, 1);
  const Scalar _tmp702 = _tmp395 * state_D_accel_bias(2, 1);
  const Scalar _tmp703 = _tmp390 * state_D_accel_bias(0, 1);
  const Scalar _tmp704 = _tmp355 * state_D_accel_bias(0, 2);
  const Scalar _tmp705 = _tmp336 * state_D_accel_bias(1, 2);
  const Scalar _tmp706 = _tmp321 * state_D_accel_bias(2, 2);
  const Scalar _tmp707 = _tmp369 * state_D_accel_bias(1, 2);
  const Scalar _tmp708 = _tmp379 * state_D_accel_bias(2, 2);
  const Scalar _tmp709 = _tmp375 * state_D_accel_bias(0, 2);
  const Scalar _tmp710 = _tmp393 * state_D_accel_bias(1, 2);
  const Scalar _tmp711 = _tmp395 * state_D_accel_bias(2, 2);
  const Scalar _tmp712 = _tmp390 * state_D_accel_bias(0, 2);
  const Scalar _tmp713 = _tmp336 * state_D_gyro_bias(1, 0);
  const Scalar _tmp714 = _tmp321 * state_D_gyro_bias(2, 0);
  const Scalar _tmp715 = _tmp355 * state_D_gyro_bias(0, 0);
  const Scalar _tmp716 = _tmp375 * state_D_gyro_bias(0, 0);
  const Scalar _tmp717 = _tmp369 * state_D_gyro_bias(1, 0);
  const Scalar _tmp718 = _tmp379 * state_D_gyro_bias(2, 0);
  const Scalar _tmp719 = _tmp390 * state_D_gyro_bias(0, 0);
  const Scalar _tmp720 = _tmp395 * state_D_gyro_bias(2, 0);
  const Scalar _tmp721 = _tmp393 * state_D_gyro_bias(1, 0);
  const Scalar _tmp722 = _tmp336 * state_D_gyro_bias(1, 1);
  const Scalar _tmp723 = _tmp321 * state_D_gyro_bias(2, 1);
  const Scalar _tmp724 = _tmp355 * state_D_gyro_bias(0, 1);
  const Scalar _tmp725 = _tmp375 * state_D_gyro_bias(0, 1);
  const Scalar _tmp726 = _tmp369 * state_D_gyro_bias(1, 1);
  const Scalar _tmp727 = _tmp379 * state_D_gyro_bias(2, 1);
  const Scalar _tmp728 = _tmp390 * state_D_gyro_bias(0, 1);
  const Scalar _tmp729 = _tmp395 * state_D_gyro_bias(2, 1);
  const Scalar _tmp730 = _tmp393 * state_D_gyro_bias(1, 1);
  const Scalar _tmp731 = _tmp336 * state_D_gyro_bias(1, 2);
  const Scalar _tmp732 = _tmp321 * state_D_gyro_bias(2, 2);
  const Scalar _tmp733 = _tmp355 * state_D_gyro_bias(0, 2);
  const Scalar _tmp734 = _tmp375 * state_D_gyro_bias(0, 2);
  const Scalar _tmp735 = _tmp369 * state_D_gyro_bias(1, 2);
  const Scalar _tmp736 = _tmp379 * state_D_gyro_bias(2, 2);
  const Scalar _tmp737 = _tmp390 * state_D_gyro_bias(0, 2);
  const Scalar _tmp738 = _tmp395 * state_D_gyro_bias(2, 2);
  const Scalar _tmp739 = _tmp393 * state_D_gyro_bias(1, 2);

  // Output terms (4)
  if (new_state != nullptr) {
    Eigen::Matrix<Scalar, 9, 1>& _new_state = (*new_state);

    _new_state(0, 0) = _tmp39 * _tmp55;
    _new_state(1, 0) = _tmp55 * _tmp61;
    _new_state(2, 0) = _tmp55 * _tmp67;
    _new_state(3, 0) = _tmp94 * _tmp95 + dt * state(6, 0) + state(3, 0);
    _new_state(4, 0) = _tmp104 * _tmp95 + dt * state(7, 0) + state(4, 0);
    _new_state(5, 0) = _tmp108 * _tmp95 + dt * state(8, 0) + state(5, 0);
    _new_state(6, 0) = _tmp94 + state(6, 0);
    _new_state(7, 0) = _tmp104 + state(7, 0);
    _new_state(8, 0) = _tmp108 + state(8, 0);
  }

  if (new_state_cov != nullptr) {
    Eigen::Matrix<Scalar, 9, 9>& _new_state_cov = (*new_state_cov);

    _new_state_cov(0, 0) = _tmp158 * _tmp189 + _tmp172 * _tmp190 + _tmp186 * _tmp191 +
                           _tmp220 * _tmp247 + _tmp237 * _tmp248 + _tmp246 * _tmp249;
    _new_state_cov(1, 0) = _tmp158 * _tmp263 + _tmp172 * _tmp273 + _tmp186 * _tmp262 +
                           _tmp220 * _tmp274 + _tmp237 * _tmp272 + _tmp246 * _tmp275;
    _new_state_cov(2, 0) = _tmp158 * _tmp286 + _tmp172 * _tmp287 + _tmp186 * _tmp294 +
                           _tmp220 * _tmp291 + _tmp237 * _tmp293 + _tmp246 * _tmp292;
    _new_state_cov(3, 0) = _tmp220 * _tmp361 + _tmp237 * _tmp357 + _tmp246 * _tmp365;
    _new_state_cov(4, 0) = _tmp220 * _tmp381 + _tmp237 * _tmp385 + _tmp246 * _tmp389;
    _new_state_cov(5, 0) = _tmp220 * _tmp397 + _tmp237 * _tmp401 + _tmp246 * _tmp405;
    _new_state_cov(6, 0) = _tmp220 * _tmp408 + _tmp237 * _tmp406 + _tmp246 * _tmp407;
    _new_state_cov(7, 0) = _tmp220 * _tmp409 + _tmp237 * _tmp411 + _tmp246 * _tmp410;
    _new_state_cov(8, 0) = _tmp220 * _tmp414 + _tmp237 * _tmp412 + _tmp246 * _tmp413;
    _new_state_cov(0, 1) = _tmp189 * _tmp260 + _tmp190 * _tmp256 + _tmp191 * _tmp253 +
                           _tmp247 * _tmp268 + _tmp248 * _tmp271 + _tmp249 * _tmp266;
    _new_state_cov(1, 1) = _tmp253 * _tmp262 + _tmp256 * _tmp273 + _tmp260 * _tmp263 +
                           _tmp266 * _tmp275 + _tmp268 * _tmp274 + _tmp271 * _tmp272;
    _new_state_cov(2, 1) = _tmp253 * _tmp294 + _tmp256 * _tmp287 + _tmp260 * _tmp286 +
                           _tmp266 * _tmp292 + _tmp268 * _tmp291 + _tmp271 * _tmp293;
    _new_state_cov(3, 1) = _tmp266 * _tmp365 + _tmp268 * _tmp361 + _tmp271 * _tmp357;
    _new_state_cov(4, 1) = _tmp266 * _tmp389 + _tmp268 * _tmp381 + _tmp271 * _tmp385;
    _new_state_cov(5, 1) = _tmp266 * _tmp405 + _tmp268 * _tmp397 + _tmp271 * _tmp401;
    _new_state_cov(6, 1) = _tmp266 * _tmp407 + _tmp268 * _tmp408 + _tmp271 * _tmp406;
    _new_state_cov(7, 1) = _tmp266 * _tmp410 + _tmp268 * _tmp409 + _tmp271 * _tmp411;
    _new_state_cov(8, 1) = _tmp266 * _tmp413 + _tmp268 * _tmp414 + _tmp271 * _tmp412;
    _new_state_cov(0, 2) = _tmp189 * _tmp284 + _tmp190 * _tmp279 + _tmp191 * _tmp282 +
                           _tmp247 * _tmp290 + _tmp248 * _tmp288 + _tmp249 * _tmp289;
    _new_state_cov(1, 2) = _tmp262 * _tmp282 + _tmp263 * _tmp284 + _tmp272 * _tmp288 +
                           _tmp273 * _tmp279 + _tmp274 * _tmp290 + _tmp275 * _tmp289;
    _new_state_cov(2, 2) = _tmp279 * _tmp287 + _tmp282 * _tmp294 + _tmp284 * _tmp286 +
                           _tmp288 * _tmp293 + _tmp289 * _tmp292 + _tmp290 * _tmp291;
    _new_state_cov(3, 2) = _tmp288 * _tmp357 + _tmp289 * _tmp365 + _tmp290 * _tmp361;
    _new_state_cov(4, 2) = _tmp288 * _tmp385 + _tmp289 * _tmp389 + _tmp290 * _tmp381;
    _new_state_cov(5, 2) = _tmp288 * _tmp401 + _tmp289 * _tmp405 + _tmp290 * _tmp397;
    _new_state_cov(6, 2) = _tmp288 * _tmp406 + _tmp289 * _tmp407 + _tmp290 * _tmp408;
    _new_state_cov(7, 2) = _tmp288 * _tmp411 + _tmp289 * _tmp410 + _tmp290 * _tmp409;
    _new_state_cov(8, 2) = _tmp288 * _tmp412 + _tmp289 * _tmp413 + _tmp290 * _tmp414;
    _new_state_cov(0, 3) = _tmp220 * state_cov(0, 3) + _tmp237 * state_cov(1, 3) +
                           _tmp246 * state_cov(2, 3) + _tmp415 * dt + _tmp416 * _tmp95 +
                           _tmp417 * _tmp95 + _tmp418 * _tmp95;
    _new_state_cov(1, 3) = _tmp266 * state_cov(2, 3) + _tmp268 * state_cov(0, 3) +
                           _tmp271 * state_cov(1, 3) + _tmp419 * dt + _tmp421 * _tmp95 +
                           _tmp422 * _tmp95 + _tmp423 * _tmp95;
    _new_state_cov(2, 3) = _tmp288 * state_cov(1, 3) + _tmp289 * state_cov(2, 3) +
                           _tmp290 * state_cov(0, 3) + _tmp424 * _tmp95 + _tmp425 * _tmp95 +
                           _tmp426 * _tmp95 + _tmp427 * dt;
    _new_state_cov(3, 3) = _tmp428 * _tmp95 + _tmp434 * _tmp95 + _tmp435 * _tmp95 +
                           _tmp441 * _tmp95 + _tmp447 * _tmp95 + _tmp448 * _tmp95 +
                           _tmp449 * _tmp95 + _tmp450 * _tmp95 + _tmp454 * dt + _tmp455 * _tmp95 +
                           dt * state_cov(6, 3) + state_cov(3, 3);
    _new_state_cov(4, 3) = _tmp456 * _tmp95 + _tmp457 * _tmp95 + _tmp458 * _tmp95 +
                           _tmp459 * _tmp95 + _tmp464 * _tmp95 + _tmp465 * _tmp95 +
                           _tmp470 * _tmp95 + _tmp471 * _tmp95 + _tmp476 * _tmp95 + _tmp480 * dt +
                           dt * state_cov(7, 3) + state_cov(4, 3);
    _new_state_cov(5, 3) = _tmp481 * _tmp95 + _tmp482 * _tmp95 + _tmp483 * _tmp95 +
                           _tmp488 * _tmp95 + _tmp493 * _tmp95 + _tmp494 * _tmp95 +
                           _tmp495 * _tmp95 + _tmp496 * _tmp95 + _tmp500 * dt + _tmp505 * _tmp95 +
                           dt * state_cov(8, 3) + state_cov(5, 3);
    _new_state_cov(6, 3) = _tmp435 + _tmp448 + _tmp455 + _tmp506 * dt + _tmp508 * _tmp95 +
                           _tmp509 * _tmp95 + _tmp510 * _tmp95 + _tmp511 * _tmp95 +
                           _tmp513 * _tmp95 + _tmp515 * _tmp95 + state_cov(6, 3);
    _new_state_cov(7, 3) = _tmp457 + _tmp465 + _tmp471 + _tmp516 * _tmp95 + _tmp517 * _tmp95 +
                           _tmp519 * _tmp95 + _tmp521 * _tmp95 + _tmp523 * _tmp95 + _tmp524 * dt +
                           _tmp525 * _tmp95 + state_cov(7, 3);
    _new_state_cov(8, 3) = _tmp483 + _tmp494 + _tmp496 + _tmp526 * _tmp95 + _tmp527 * dt +
                           _tmp528 * _tmp95 + _tmp530 * _tmp95 + _tmp531 * _tmp95 +
                           _tmp533 * _tmp95 + _tmp535 * _tmp95 + state_cov(8, 3);
    _new_state_cov(0, 4) = _tmp220 * state_cov(0, 4) + _tmp237 * state_cov(1, 4) +
                           _tmp246 * state_cov(2, 4) + _tmp536 * dt + _tmp537 * _tmp95 +
                           _tmp538 * _tmp95 + _tmp539 * _tmp95;
    _new_state_cov(1, 4) = _tmp266 * state_cov(2, 4) + _tmp268 * state_cov(0, 4) +
                           _tmp271 * state_cov(1, 4) + _tmp540 * dt + _tmp541 * _tmp95 +
                           _tmp542 * _tmp95 + _tmp543 * _tmp95;
    _new_state_cov(2, 4) = _tmp288 * state_cov(1, 4) + _tmp289 * state_cov(2, 4) +
                           _tmp290 * state_cov(0, 4) + _tmp544 * _tmp95 + _tmp545 * _tmp95 +
                           _tmp546 * dt + _tmp547 * _tmp95;
    _new_state_cov(3, 4) = _tmp548 * _tmp95 + _tmp550 * _tmp95 + _tmp551 * _tmp95 +
                           _tmp552 * _tmp95 + _tmp554 * _tmp95 + _tmp555 * _tmp95 +
                           _tmp556 * _tmp95 + _tmp558 * _tmp95 + _tmp562 * dt + _tmp563 * _tmp95 +
                           dt * state_cov(6, 4) + state_cov(3, 4);
    _new_state_cov(4, 4) = _tmp564 * _tmp95 + _tmp565 * _tmp95 + _tmp566 * _tmp95 +
                           _tmp567 * _tmp95 + _tmp568 * _tmp95 + _tmp569 * _tmp95 + _tmp573 * dt +
                           _tmp574 * _tmp95 + _tmp575 * _tmp95 + _tmp576 * _tmp95 +
                           dt * state_cov(7, 4) + state_cov(4, 4);
    _new_state_cov(5, 4) = _tmp577 * _tmp95 + _tmp578 * _tmp95 + _tmp579 * _tmp95 +
                           _tmp580 * _tmp95 + _tmp581 * _tmp95 + _tmp582 * _tmp95 +
                           _tmp583 * _tmp95 + _tmp584 * _tmp95 + _tmp585 * _tmp95 + _tmp589 * dt +
                           dt * state_cov(8, 4) + state_cov(5, 4);
    _new_state_cov(6, 4) = _tmp552 + _tmp555 + _tmp563 + _tmp590 * _tmp95 + _tmp591 * _tmp95 +
                           _tmp592 * dt + _tmp593 * _tmp95 + _tmp594 * _tmp95 + _tmp595 * _tmp95 +
                           _tmp596 * _tmp95 + state_cov(6, 4);
    _new_state_cov(7, 4) = _tmp564 + _tmp565 + _tmp567 + _tmp597 * _tmp95 + _tmp598 * _tmp95 +
                           _tmp599 * _tmp95 + _tmp600 * _tmp95 + _tmp601 * _tmp95 +
                           _tmp602 * _tmp95 + _tmp603 * dt + state_cov(7, 4);
    _new_state_cov(8, 4) = _tmp577 + _tmp583 + _tmp585 + _tmp604 * _tmp95 + _tmp605 * _tmp95 +
                           _tmp606 * _tmp95 + _tmp607 * dt + _tmp608 * _tmp95 + _tmp609 * _tmp95 +
                           _tmp610 * _tmp95 + state_cov(8, 4);
    _new_state_cov(0, 5) = _tmp220 * state_cov(0, 5) + _tmp237 * state_cov(1, 5) +
                           _tmp246 * state_cov(2, 5) + _tmp611 * _tmp95 + _tmp612 * dt +
                           _tmp613 * _tmp95 + _tmp614 * _tmp95;
    _new_state_cov(1, 5) = _tmp266 * state_cov(2, 5) + _tmp268 * state_cov(0, 5) +
                           _tmp271 * state_cov(1, 5) + _tmp615 * dt + _tmp616 * _tmp95 +
                           _tmp617 * _tmp95 + _tmp618 * _tmp95;
    _new_state_cov(2, 5) = _tmp288 * state_cov(1, 5) + _tmp289 * state_cov(2, 5) +
                           _tmp290 * state_cov(0, 5) + _tmp619 * _tmp95 + _tmp620 * dt +
                           _tmp621 * _tmp95 + _tmp622 * _tmp95;
    _new_state_cov(3, 5) = _tmp624 * _tmp95 + _tmp625 * _tmp95 + _tmp626 * _tmp95 +
                           _tmp628 * _tmp95 + _tmp629 * _tmp95 + _tmp630 * _tmp95 +
                           _tmp631 * _tmp95 + _tmp633 * _tmp95 + _tmp637 * dt + _tmp638 * _tmp95 +
                           dt * state_cov(6, 5) + state_cov(3, 5);
    _new_state_cov(4, 5) = _tmp639 * _tmp95 + _tmp640 * _tmp95 + _tmp641 * _tmp95 +
                           _tmp642 * _tmp95 + _tmp643 * _tmp95 + _tmp644 * _tmp95 +
                           _tmp645 * _tmp95 + _tmp646 * _tmp95 + _tmp647 * _tmp95 + _tmp651 * dt +
                           dt * state_cov(7, 5) + state_cov(4, 5);
    _new_state_cov(5, 5) = _tmp652 * _tmp95 + _tmp653 * _tmp95 + _tmp654 * _tmp95 +
                           _tmp655 * _tmp95 + _tmp656 * _tmp95 + _tmp657 * _tmp95 +
                           _tmp658 * _tmp95 + _tmp659 * _tmp95 + _tmp663 * dt + _tmp664 * _tmp95 +
                           dt * state_cov(8, 5) + state_cov(5, 5);
    _new_state_cov(6, 5) = _tmp629 + _tmp631 + _tmp638 + _tmp665 * _tmp95 + _tmp666 * _tmp95 +
                           _tmp667 * dt + _tmp668 * _tmp95 + _tmp669 * _tmp95 + _tmp670 * _tmp95 +
                           _tmp671 * _tmp95 + state_cov(6, 5);
    _new_state_cov(7, 5) = _tmp640 + _tmp642 + _tmp645 + _tmp672 * _tmp95 + _tmp673 * _tmp95 +
                           _tmp674 * _tmp95 + _tmp675 * _tmp95 + _tmp676 * _tmp95 +
                           _tmp677 * _tmp95 + _tmp678 * dt + state_cov(7, 5);
    _new_state_cov(8, 5) = _tmp652 + _tmp657 + _tmp659 + _tmp679 * _tmp95 + _tmp680 * _tmp95 +
                           _tmp681 * _tmp95 + _tmp682 * dt + _tmp683 * _tmp95 + _tmp684 * _tmp95 +
                           _tmp685 * _tmp95 + state_cov(8, 5);
    _new_state_cov(0, 6) = _tmp415 + _tmp416 + _tmp417 + _tmp418;
    _new_state_cov(1, 6) = _tmp419 + _tmp421 + _tmp422 + _tmp423;
    _new_state_cov(2, 6) = _tmp424 + _tmp425 + _tmp426 + _tmp427;
    _new_state_cov(3, 6) = _tmp428 + _tmp434 + _tmp441 + _tmp447 + _tmp449 + _tmp450 + _tmp454;
    _new_state_cov(4, 6) = _tmp456 + _tmp458 + _tmp459 + _tmp464 + _tmp470 + _tmp476 + _tmp480;
    _new_state_cov(5, 6) = _tmp481 + _tmp482 + _tmp488 + _tmp493 + _tmp495 + _tmp500 + _tmp505;
    _new_state_cov(6, 6) = _tmp506 + _tmp508 + _tmp509 + _tmp510 + _tmp511 + _tmp513 + _tmp515;
    _new_state_cov(7, 6) = _tmp516 + _tmp517 + _tmp519 + _tmp521 + _tmp523 + _tmp524 + _tmp525;
    _new_state_cov(8, 6) = _tmp526 + _tmp527 + _tmp528 + _tmp530 + _tmp531 + _tmp533 + _tmp535;
    _new_state_cov(0, 7) = _tmp536 + _tmp537 + _tmp538 + _tmp539;
    _new_state_cov(1, 7) = _tmp540 + _tmp541 + _tmp542 + _tmp543;
    _new_state_cov(2, 7) = _tmp544 + _tmp545 + _tmp546 + _tmp547;
    _new_state_cov(3, 7) = _tmp548 + _tmp550 + _tmp551 + _tmp554 + _tmp556 + _tmp558 + _tmp562;
    _new_state_cov(4, 7) = _tmp566 + _tmp568 + _tmp569 + _tmp573 + _tmp574 + _tmp575 + _tmp576;
    _new_state_cov(5, 7) = _tmp578 + _tmp579 + _tmp580 + _tmp581 + _tmp582 + _tmp584 + _tmp589;
    _new_state_cov(6, 7) = _tmp590 + _tmp591 + _tmp592 + _tmp593 + _tmp594 + _tmp595 + _tmp596;
    _new_state_cov(7, 7) = _tmp597 + _tmp598 + _tmp599 + _tmp600 + _tmp601 + _tmp602 + _tmp603;
    _new_state_cov(8, 7) = _tmp604 + _tmp605 + _tmp606 + _tmp607 + _tmp608 + _tmp609 + _tmp610;
    _new_state_cov(0, 8) = _tmp611 + _tmp612 + _tmp613 + _tmp614;
    _new_state_cov(1, 8) = _tmp615 + _tmp616 + _tmp617 + _tmp618;
    _new_state_cov(2, 8) = _tmp619 + _tmp620 + _tmp621 + _tmp622;
    _new_state_cov(3, 8) = _tmp624 + _tmp625 + _tmp626 + _tmp628 + _tmp630 + _tmp633 + _tmp637;
    _new_state_cov(4, 8) = _tmp639 + _tmp641 + _tmp643 + _tmp644 + _tmp646 + _tmp647 + _tmp651;
    _new_state_cov(5, 8) = _tmp653 + _tmp654 + _tmp655 + _tmp656 + _tmp658 + _tmp663 + _tmp664;
    _new_state_cov(6, 8) = _tmp665 + _tmp666 + _tmp667 + _tmp668 + _tmp669 + _tmp670 + _tmp671;
    _new_state_cov(7, 8) = _tmp672 + _tmp673 + _tmp674 + _tmp675 + _tmp676 + _tmp677 + _tmp678;
    _new_state_cov(8, 8) = _tmp679 + _tmp680 + _tmp681 + _tmp682 + _tmp683 + _tmp684 + _tmp685;
  }

  if (new_state_D_accel_bias != nullptr) {
    Eigen::Matrix<Scalar, 9, 3>& _new_state_D_accel_bias = (*new_state_D_accel_bias);

    _new_state_D_accel_bias(0, 0) = _tmp220 * state_D_accel_bias(0, 0) +
                                    _tmp237 * state_D_accel_bias(1, 0) +
                                    _tmp246 * state_D_accel_bias(2, 0);
    _new_state_D_accel_bias(1, 0) = _tmp266 * state_D_accel_bias(2, 0) +
                                    _tmp268 * state_D_accel_bias(0, 0) +
                                    _tmp271 * state_D_accel_bias(1, 0);
    _new_state_D_accel_bias(2, 0) = _tmp288 * state_D_accel_bias(1, 0) +
                                    _tmp289 * state_D_accel_bias(2, 0) +
                                    _tmp290 * state_D_accel_bias(0, 0);
    _new_state_D_accel_bias(3, 0) = -_tmp446 * _tmp95 + _tmp686 * _tmp95 + _tmp687 * _tmp95 +
                                    _tmp688 * _tmp95 + dt * state_D_accel_bias(6, 0) +
                                    state_D_accel_bias(3, 0);
    _new_state_D_accel_bias(4, 0) = -_tmp553 * _tmp95 + _tmp689 * _tmp95 + _tmp690 * _tmp95 +
                                    _tmp691 * _tmp95 + dt * state_D_accel_bias(7, 0) +
                                    state_D_accel_bias(4, 0);
    _new_state_D_accel_bias(5, 0) = -_tmp627 * _tmp95 + _tmp692 * _tmp95 + _tmp693 * _tmp95 +
                                    _tmp694 * _tmp95 + dt * state_D_accel_bias(8, 0) +
                                    state_D_accel_bias(5, 0);
    _new_state_D_accel_bias(6, 0) =
        -_tmp446 + _tmp686 + _tmp687 + _tmp688 + state_D_accel_bias(6, 0);
    _new_state_D_accel_bias(7, 0) =
        -_tmp553 + _tmp689 + _tmp690 + _tmp691 + state_D_accel_bias(7, 0);
    _new_state_D_accel_bias(8, 0) =
        -_tmp627 + _tmp692 + _tmp693 + _tmp694 + state_D_accel_bias(8, 0);
    _new_state_D_accel_bias(0, 1) = _tmp220 * state_D_accel_bias(0, 1) +
                                    _tmp237 * state_D_accel_bias(1, 1) +
                                    _tmp246 * state_D_accel_bias(2, 1);
    _new_state_D_accel_bias(1, 1) = _tmp266 * state_D_accel_bias(2, 1) +
                                    _tmp268 * state_D_accel_bias(0, 1) +
                                    _tmp271 * state_D_accel_bias(1, 1);
    _new_state_D_accel_bias(2, 1) = _tmp288 * state_D_accel_bias(1, 1) +
                                    _tmp289 * state_D_accel_bias(2, 1) +
                                    _tmp290 * state_D_accel_bias(0, 1);
    _new_state_D_accel_bias(3, 1) = -_tmp440 * _tmp95 + _tmp695 * _tmp95 + _tmp696 * _tmp95 +
                                    _tmp697 * _tmp95 + dt * state_D_accel_bias(6, 1) +
                                    state_D_accel_bias(3, 1);
    _new_state_D_accel_bias(4, 1) = -_tmp549 * _tmp95 + _tmp698 * _tmp95 + _tmp699 * _tmp95 +
                                    _tmp700 * _tmp95 + dt * state_D_accel_bias(7, 1) +
                                    state_D_accel_bias(4, 1);
    _new_state_D_accel_bias(5, 1) = -_tmp632 * _tmp95 + _tmp701 * _tmp95 + _tmp702 * _tmp95 +
                                    _tmp703 * _tmp95 + dt * state_D_accel_bias(8, 1) +
                                    state_D_accel_bias(5, 1);
    _new_state_D_accel_bias(6, 1) =
        -_tmp440 + _tmp695 + _tmp696 + _tmp697 + state_D_accel_bias(6, 1);
    _new_state_D_accel_bias(7, 1) =
        -_tmp549 + _tmp698 + _tmp699 + _tmp700 + state_D_accel_bias(7, 1);
    _new_state_D_accel_bias(8, 1) =
        -_tmp632 + _tmp701 + _tmp702 + _tmp703 + state_D_accel_bias(8, 1);
    _new_state_D_accel_bias(0, 2) = _tmp220 * state_D_accel_bias(0, 2) +
                                    _tmp237 * state_D_accel_bias(1, 2) +
                                    _tmp246 * state_D_accel_bias(2, 2);
    _new_state_D_accel_bias(1, 2) = _tmp266 * state_D_accel_bias(2, 2) +
                                    _tmp268 * state_D_accel_bias(0, 2) +
                                    _tmp271 * state_D_accel_bias(1, 2);
    _new_state_D_accel_bias(2, 2) = _tmp288 * state_D_accel_bias(1, 2) +
                                    _tmp289 * state_D_accel_bias(2, 2) +
                                    _tmp290 * state_D_accel_bias(0, 2);
    _new_state_D_accel_bias(3, 2) = -_tmp433 * _tmp95 + _tmp704 * _tmp95 + _tmp705 * _tmp95 +
                                    _tmp706 * _tmp95 + dt * state_D_accel_bias(6, 2) +
                                    state_D_accel_bias(3, 2);
    _new_state_D_accel_bias(4, 2) = -_tmp557 * _tmp95 + _tmp707 * _tmp95 + _tmp708 * _tmp95 +
                                    _tmp709 * _tmp95 + dt * state_D_accel_bias(7, 2) +
                                    state_D_accel_bias(4, 2);
    _new_state_D_accel_bias(5, 2) = -_tmp623 * _tmp95 + _tmp710 * _tmp95 + _tmp711 * _tmp95 +
                                    _tmp712 * _tmp95 + dt * state_D_accel_bias(8, 2) +
                                    state_D_accel_bias(5, 2);
    _new_state_D_accel_bias(6, 2) =
        -_tmp433 + _tmp704 + _tmp705 + _tmp706 + state_D_accel_bias(6, 2);
    _new_state_D_accel_bias(7, 2) =
        -_tmp557 + _tmp707 + _tmp708 + _tmp709 + state_D_accel_bias(7, 2);
    _new_state_D_accel_bias(8, 2) =
        -_tmp623 + _tmp710 + _tmp711 + _tmp712 + state_D_accel_bias(8, 2);
  }

  if (new_state_D_gyro_bias != nullptr) {
    Eigen::Matrix<Scalar, 9, 3>& _new_state_D_gyro_bias = (*new_state_D_gyro_bias);

    _new_state_D_gyro_bias(0, 0) = -_tmp186 + _tmp220 * state_D_gyro_bias(0, 0) +
                                   _tmp237 * state_D_gyro_bias(1, 0) +
                                   _tmp246 * state_D_gyro_bias(2, 0);
    _new_state_D_gyro_bias(1, 0) = -_tmp253 + _tmp266 * state_D_gyro_bias(2, 0) +
                                   _tmp268 * state_D_gyro_bias(0, 0) +
                                   _tmp271 * state_D_gyro_bias(1, 0);
    _new_state_D_gyro_bias(2, 0) = -_tmp282 + _tmp288 * state_D_gyro_bias(1, 0) +
                                   _tmp289 * state_D_gyro_bias(2, 0) +
                                   _tmp290 * state_D_gyro_bias(0, 0);
    _new_state_D_gyro_bias(3, 0) = _tmp713 * _tmp95 + _tmp714 * _tmp95 + _tmp715 * _tmp95 +
                                   dt * state_D_gyro_bias(6, 0) + state_D_gyro_bias(3, 0);
    _new_state_D_gyro_bias(4, 0) = _tmp716 * _tmp95 + _tmp717 * _tmp95 + _tmp718 * _tmp95 +
                                   dt * state_D_gyro_bias(7, 0) + state_D_gyro_bias(4, 0);
    _new_state_D_gyro_bias(5, 0) = _tmp719 * _tmp95 + _tmp720 * _tmp95 + _tmp721 * _tmp95 +
                                   dt * state_D_gyro_bias(8, 0) + state_D_gyro_bias(5, 0);
    _new_state_D_gyro_bias(6, 0) = _tmp713 + _tmp714 + _tmp715 + state_D_gyro_bias(6, 0);
    _new_state_D_gyro_bias(7, 0) = _tmp716 + _tmp717 + _tmp718 + state_D_gyro_bias(7, 0);
    _new_state_D_gyro_bias(8, 0) = _tmp719 + _tmp720 + _tmp721 + state_D_gyro_bias(8, 0);
    _new_state_D_gyro_bias(0, 1) = -_tmp158 + _tmp220 * state_D_gyro_bias(0, 1) +
                                   _tmp237 * state_D_gyro_bias(1, 1) +
                                   _tmp246 * state_D_gyro_bias(2, 1);
    _new_state_D_gyro_bias(1, 1) = -_tmp260 + _tmp266 * state_D_gyro_bias(2, 1) +
                                   _tmp268 * state_D_gyro_bias(0, 1) +
                                   _tmp271 * state_D_gyro_bias(1, 1);
    _new_state_D_gyro_bias(2, 1) = -_tmp284 + _tmp288 * state_D_gyro_bias(1, 1) +
                                   _tmp289 * state_D_gyro_bias(2, 1) +
                                   _tmp290 * state_D_gyro_bias(0, 1);
    _new_state_D_gyro_bias(3, 1) = _tmp722 * _tmp95 + _tmp723 * _tmp95 + _tmp724 * _tmp95 +
                                   dt * state_D_gyro_bias(6, 1) + state_D_gyro_bias(3, 1);
    _new_state_D_gyro_bias(4, 1) = _tmp725 * _tmp95 + _tmp726 * _tmp95 + _tmp727 * _tmp95 +
                                   dt * state_D_gyro_bias(7, 1) + state_D_gyro_bias(4, 1);
    _new_state_D_gyro_bias(5, 1) = _tmp728 * _tmp95 + _tmp729 * _tmp95 + _tmp730 * _tmp95 +
                                   dt * state_D_gyro_bias(8, 1) + state_D_gyro_bias(5, 1);
    _new_state_D_gyro_bias(6, 1) = _tmp722 + _tmp723 + _tmp724 + state_D_gyro_bias(6, 1);
    _new_state_D_gyro_bias(7, 1) = _tmp725 + _tmp726 + _tmp727 + state_D_gyro_bias(7, 1);
    _new_state_D_gyro_bias(8, 1) = _tmp728 + _tmp729 + _tmp730 + state_D_gyro_bias(8, 1);
    _new_state_D_gyro_bias(0, 2) = -_tmp172 + _tmp220 * state_D_gyro_bias(0, 2) +
                                   _tmp237 * state_D_gyro_bias(1, 2) +
                                   _tmp246 * state_D_gyro_bias(2, 2);
    _new_state_D_gyro_bias(1, 2) = -_tmp256 + _tmp266 * state_D_gyro_bias(2, 2) +
                                   _tmp268 * state_D_gyro_bias(0, 2) +
                                   _tmp271 * state_D_gyro_bias(1, 2);
    _new_state_D_gyro_bias(2, 2) = -_tmp279 + _tmp288 * state_D_gyro_bias(1, 2) +
                                   _tmp289 * state_D_gyro_bias(2, 2) +
                                   _tmp290 * state_D_gyro_bias(0, 2);
    _new_state_D_gyro_bias(3, 2) = _tmp731 * _tmp95 + _tmp732 * _tmp95 + _tmp733 * _tmp95 +
                                   dt * state_D_gyro_bias(6, 2) + state_D_gyro_bias(3, 2);
    _new_state_D_gyro_bias(4, 2) = _tmp734 * _tmp95 + _tmp735 * _tmp95 + _tmp736 * _tmp95 +
                                   dt * state_D_gyro_bias(7, 2) + state_D_gyro_bias(4, 2);
    _new_state_D_gyro_bias(5, 2) = _tmp737 * _tmp95 + _tmp738 * _tmp95 + _tmp739 * _tmp95 +
                                   dt * state_D_gyro_bias(8, 2) + state_D_gyro_bias(5, 2);
    _new_state_D_gyro_bias(6, 2) = _tmp731 + _tmp732 + _tmp733 + state_D_gyro_bias(6, 2);
    _new_state_D_gyro_bias(7, 2) = _tmp734 + _tmp735 + _tmp736 + state_D_gyro_bias(7, 2);
    _new_state_D_gyro_bias(8, 2) = _tmp737 + _tmp738 + _tmp739 + state_D_gyro_bias(8, 2);
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
