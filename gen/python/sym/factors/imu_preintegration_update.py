# -----------------------------------------------------------------------------
# This file was autogenerated by symforce from template:
#     python_templates/function/FUNCTION.py.jinja
# Do NOT modify by hand.
# -----------------------------------------------------------------------------

import math  # pylint: disable=unused-import
import numpy  # pylint: disable=unused-import
import typing as T  # pylint: disable=unused-import

import sym  # pylint: disable=unused-import


# pylint: disable=too-many-locals,too-many-lines,too-many-statements,unused-argument


def imu_preintegration_update(
    state,
    state_cov,
    state_D_accel_bias,
    state_D_gyro_bias,
    accel_bias,
    gyro_bias,
    accel_cov,
    gyro_cov,
    accel,
    gyro,
    dt,
    epsilon,
):
    # type: (T.Sequence[float], numpy.ndarray, numpy.ndarray, numpy.ndarray, T.Sequence[float], T.Sequence[float], numpy.ndarray, numpy.ndarray, T.Sequence[float], T.Sequence[float], float, float) -> T.Tuple[T.List[float], numpy.ndarray, numpy.ndarray, numpy.ndarray]
    """
    Symbolic function to perform the full update of incorporating a new IMU measurement
    into the state of a preintegrated IMU factor.
    """

    # Total ops: 2659

    # Input arrays

    # Intermediate terms (740)
    _tmp0 = gyro[0, 0] - gyro_bias[0, 0]
    _tmp1 = dt**2
    _tmp2 = gyro[1, 0] - gyro_bias[1, 0]
    _tmp3 = _tmp2**2
    _tmp4 = _tmp0**2
    _tmp5 = gyro[2, 0] - gyro_bias[2, 0]
    _tmp6 = _tmp5**2
    _tmp7 = epsilon**2
    _tmp8 = _tmp1 * _tmp3 + _tmp1 * _tmp4 + _tmp1 * _tmp6 + _tmp7
    _tmp9 = math.sqrt(_tmp8)
    _tmp10 = _tmp9 ** (-1)
    _tmp11 = state[0, 0] ** 2
    _tmp12 = state[2, 0] ** 2
    _tmp13 = state[1, 0] ** 2
    _tmp14 = _tmp11 + _tmp12 + _tmp13 + _tmp7
    _tmp15 = math.sqrt(_tmp14)
    _tmp16 = (1.0 / 2.0) * _tmp15
    _tmp17 = math.cos(_tmp16)
    _tmp18 = (1.0 / 2.0) * _tmp9
    _tmp19 = math.sin(_tmp18)
    _tmp20 = _tmp17 * _tmp19
    _tmp21 = _tmp10 * _tmp20
    _tmp22 = _tmp21 * dt
    _tmp23 = _tmp0 * _tmp22
    _tmp24 = _tmp15 ** (-1)
    _tmp25 = math.sin(_tmp16)
    _tmp26 = _tmp24 * _tmp25
    _tmp27 = _tmp19 * _tmp26
    _tmp28 = _tmp10 * dt
    _tmp29 = _tmp27 * _tmp28
    _tmp30 = _tmp29 * state[2, 0]
    _tmp31 = _tmp2 * _tmp30
    _tmp32 = math.cos(_tmp18)
    _tmp33 = _tmp25 * _tmp32
    _tmp34 = _tmp24 * _tmp33
    _tmp35 = _tmp34 * state[0, 0]
    _tmp36 = _tmp27 * state[1, 0]
    _tmp37 = _tmp28 * _tmp36
    _tmp38 = _tmp37 * _tmp5
    _tmp39 = _tmp23 - _tmp31 + _tmp35 + _tmp38
    _tmp40 = _tmp17 * _tmp32
    _tmp41 = _tmp30 * _tmp5
    _tmp42 = _tmp0 * _tmp29
    _tmp43 = _tmp42 * state[0, 0]
    _tmp44 = _tmp2 * _tmp37
    _tmp45 = _tmp41 + _tmp43 + _tmp44
    _tmp46 = _tmp40 - _tmp45
    _tmp47 = abs(_tmp46)
    _tmp48 = 1 - epsilon
    _tmp49 = min(_tmp47, _tmp48)
    _tmp50 = 1 - _tmp49**2
    _tmp51 = math.acos(_tmp49)
    _tmp52 = 0.0 if _tmp46 == 0 else math.copysign(1, _tmp46)
    _tmp53 = 2 * min(0, _tmp52) + 1
    _tmp54 = 2 * _tmp53
    _tmp55 = _tmp51 * _tmp54 / math.sqrt(_tmp50)
    _tmp56 = _tmp29 * _tmp5
    _tmp57 = _tmp56 * state[0, 0]
    _tmp58 = _tmp2 * _tmp22
    _tmp59 = _tmp0 * _tmp30
    _tmp60 = _tmp34 * state[1, 0]
    _tmp61 = -_tmp57 + _tmp58 + _tmp59 + _tmp60
    _tmp62 = _tmp22 * _tmp5
    _tmp63 = _tmp2 * _tmp29
    _tmp64 = _tmp63 * state[0, 0]
    _tmp65 = _tmp34 * state[2, 0]
    _tmp66 = _tmp0 * _tmp37
    _tmp67 = _tmp62 + _tmp64 + _tmp65 - _tmp66
    _tmp68 = _tmp25**2
    _tmp69 = _tmp14 ** (-1)
    _tmp70 = _tmp13 * _tmp69
    _tmp71 = _tmp68 * _tmp70
    _tmp72 = -2 * _tmp71
    _tmp73 = _tmp12 * _tmp69
    _tmp74 = _tmp68 * _tmp73
    _tmp75 = 1 - 2 * _tmp74
    _tmp76 = _tmp72 + _tmp75
    _tmp77 = accel[0, 0] - accel_bias[0, 0]
    _tmp78 = _tmp68 * _tmp69
    _tmp79 = 2 * state[1, 0]
    _tmp80 = _tmp78 * _tmp79
    _tmp81 = _tmp80 * state[0, 0]
    _tmp82 = 2 * _tmp17
    _tmp83 = _tmp26 * _tmp82
    _tmp84 = _tmp83 * state[2, 0]
    _tmp85 = _tmp81 - _tmp84
    _tmp86 = accel[1, 0] - accel_bias[1, 0]
    _tmp87 = 2 * _tmp78
    _tmp88 = _tmp87 * state[2, 0]
    _tmp89 = _tmp88 * state[0, 0]
    _tmp90 = _tmp17 * _tmp79
    _tmp91 = _tmp26 * _tmp90
    _tmp92 = _tmp89 + _tmp91
    _tmp93 = accel[2, 0] - accel_bias[2, 0]
    _tmp94 = dt * (_tmp76 * _tmp77 + _tmp85 * _tmp86 + _tmp92 * _tmp93)
    _tmp95 = 0.5 * abs(dt)
    _tmp96 = _tmp11 * _tmp69
    _tmp97 = _tmp68 * _tmp96
    _tmp98 = -2 * _tmp97
    _tmp99 = _tmp75 + _tmp98
    _tmp100 = _tmp81 + _tmp84
    _tmp101 = _tmp80 * state[2, 0]
    _tmp102 = _tmp83 * state[0, 0]
    _tmp103 = _tmp101 - _tmp102
    _tmp104 = dt * (_tmp100 * _tmp77 + _tmp103 * _tmp93 + _tmp86 * _tmp99)
    _tmp105 = _tmp72 + _tmp98 + 1
    _tmp106 = _tmp89 - _tmp91
    _tmp107 = _tmp101 + _tmp102
    _tmp108 = dt * (_tmp105 * _tmp93 + _tmp106 * _tmp77 + _tmp107 * _tmp86)
    _tmp109 = _tmp39 * _tmp53
    _tmp110 = _tmp2 * _tmp5
    _tmp111 = dt**3
    _tmp112 = _tmp8 ** (-3.0 / 2.0)
    _tmp113 = _tmp112 * _tmp27
    _tmp114 = _tmp113 * state[2, 0]
    _tmp115 = _tmp111 * _tmp114
    _tmp116 = _tmp110 * _tmp115
    _tmp117 = _tmp8 ** (-1)
    _tmp118 = (1.0 / 2.0) * _tmp65
    _tmp119 = _tmp117 * _tmp118
    _tmp120 = _tmp111 * _tmp119
    _tmp121 = _tmp110 * _tmp120
    _tmp122 = (1.0 / 2.0) * _tmp1
    _tmp123 = _tmp122 * _tmp21
    _tmp124 = _tmp112 * _tmp36
    _tmp125 = _tmp111 * _tmp3
    _tmp126 = (1.0 / 2.0) * _tmp60
    _tmp127 = _tmp117 * _tmp126
    _tmp128 = (1.0 / 2.0) * _tmp35
    _tmp129 = _tmp117 * _tmp128
    _tmp130 = _tmp0 * _tmp2
    _tmp131 = _tmp111 * _tmp130
    _tmp132 = _tmp113 * state[0, 0]
    _tmp133 = _tmp129 * _tmp131 - _tmp131 * _tmp132
    _tmp134 = (
        -_tmp116
        + _tmp121
        + _tmp123 * _tmp2
        - _tmp124 * _tmp125
        + _tmp125 * _tmp127
        + _tmp133
        + _tmp37
    )
    _tmp135 = -_tmp40 + _tmp45
    _tmp136 = abs(_tmp135)
    _tmp137 = min(_tmp136, _tmp48)
    _tmp138 = math.acos(_tmp137)
    _tmp139 = 1 - _tmp137**2
    _tmp140 = ((0.0 if -_tmp136 + _tmp48 == 0 else math.copysign(1, -_tmp136 + _tmp48)) + 1) * (
        0.0 if _tmp135 == 0 else math.copysign(1, _tmp135)
    )
    _tmp141 = _tmp137 * _tmp138 * _tmp140 / _tmp139 ** (3.0 / 2.0)
    _tmp142 = _tmp134 * _tmp141
    _tmp143 = _tmp10 * _tmp122
    _tmp144 = _tmp27 * state[0, 0]
    _tmp145 = _tmp143 * _tmp144
    _tmp146 = _tmp111 * _tmp127
    _tmp147 = _tmp111 * _tmp124
    _tmp148 = _tmp110 * _tmp146 - _tmp110 * _tmp147
    _tmp149 = _tmp112 * _tmp20
    _tmp150 = _tmp111 * _tmp149
    _tmp151 = (1.0 / 2.0) * _tmp40
    _tmp152 = _tmp117 * _tmp151
    _tmp153 = _tmp111 * _tmp152
    _tmp154 = -_tmp130 * _tmp150 + _tmp130 * _tmp153
    _tmp155 = _tmp138 * _tmp54 / math.sqrt(_tmp139)
    _tmp156 = _tmp140 / _tmp139
    _tmp157 = _tmp109 * _tmp156
    _tmp158 = (
        _tmp109 * _tmp142
        - _tmp134 * _tmp157
        + _tmp155
        * (_tmp114 * _tmp125 - _tmp119 * _tmp125 - _tmp145 * _tmp2 + _tmp148 + _tmp154 - _tmp30)
    )
    _tmp159 = _tmp111 * _tmp6
    _tmp160 = _tmp111 * _tmp132
    _tmp161 = _tmp0 * _tmp5
    _tmp162 = _tmp160 * _tmp161
    _tmp163 = _tmp111 * _tmp129
    _tmp164 = _tmp161 * _tmp163
    _tmp165 = _tmp113 * _tmp159
    _tmp166 = (
        _tmp119 * _tmp159
        + _tmp123 * _tmp5
        + _tmp148
        - _tmp162
        + _tmp164
        - _tmp165 * state[2, 0]
        + _tmp30
    )
    _tmp167 = _tmp141 * _tmp166
    _tmp168 = _tmp143 * _tmp5
    _tmp169 = _tmp153 * _tmp5
    _tmp170 = _tmp150 * _tmp5
    _tmp171 = _tmp0 * _tmp169 - _tmp0 * _tmp170
    _tmp172 = (
        _tmp109 * _tmp167
        + _tmp155
        * (
            _tmp116
            - _tmp121
            - _tmp124 * _tmp159
            + _tmp127 * _tmp159
            - _tmp144 * _tmp168
            + _tmp171
            + _tmp37
        )
        - _tmp157 * _tmp166
    )
    _tmp173 = dt ** (-1)
    _tmp174 = _tmp172 * _tmp173
    _tmp175 = _tmp130 * _tmp147
    _tmp176 = _tmp111 * _tmp4
    _tmp177 = _tmp127 * _tmp131
    _tmp178 = _tmp29 * state[0, 0]
    _tmp179 = -_tmp115 * _tmp161 + _tmp120 * _tmp161
    _tmp180 = (
        _tmp0 * _tmp123
        + _tmp129 * _tmp176
        - _tmp132 * _tmp176
        - _tmp175
        + _tmp177
        + _tmp178
        + _tmp179
    )
    _tmp181 = _tmp141 * _tmp180
    _tmp182 = _tmp119 * _tmp131
    _tmp183 = _tmp146 * _tmp161
    _tmp184 = _tmp147 * _tmp161
    _tmp185 = _tmp114 * _tmp131
    _tmp186 = (
        _tmp109 * _tmp181
        + _tmp155
        * (
            -_tmp0 * _tmp145
            - _tmp150 * _tmp4
            + _tmp152 * _tmp176
            - _tmp182
            + _tmp183
            - _tmp184
            + _tmp185
            + _tmp22
        )
        - _tmp157 * _tmp180
    )
    _tmp187 = _tmp173 * _tmp186
    _tmp188 = _tmp158 * _tmp173
    _tmp189 = _tmp174 * gyro_cov[2, 1] + _tmp187 * gyro_cov[0, 1] + _tmp188 * gyro_cov[1, 1]
    _tmp190 = _tmp174 * gyro_cov[2, 2] + _tmp187 * gyro_cov[0, 2] + _tmp188 * gyro_cov[1, 2]
    _tmp191 = _tmp174 * gyro_cov[2, 0] + _tmp187 * gyro_cov[0, 0] + _tmp188 * gyro_cov[1, 0]
    _tmp192 = -_tmp42
    _tmp193 = _tmp14 ** (-3.0 / 2.0)
    _tmp194 = _tmp193 * _tmp25
    _tmp195 = _tmp19 * _tmp194 * _tmp28
    _tmp196 = _tmp11 * _tmp195
    _tmp197 = state[0, 0] * state[1, 0]
    _tmp198 = _tmp195 * _tmp2
    _tmp199 = _tmp197 * _tmp198
    _tmp200 = (1.0 / 2.0) * _tmp69
    _tmp201 = _tmp200 * _tmp58
    _tmp202 = _tmp197 * _tmp201
    _tmp203 = (1.0 / 2.0) * _tmp96
    _tmp204 = state[0, 0] * state[2, 0]
    _tmp205 = _tmp200 * _tmp62
    _tmp206 = _tmp195 * _tmp204
    _tmp207 = -_tmp204 * _tmp205 + _tmp206 * _tmp5
    _tmp208 = _tmp0 * _tmp196 - _tmp128 + _tmp192 + _tmp199 - _tmp202 - _tmp203 * _tmp23 + _tmp207
    _tmp209 = _tmp52 * ((0.0 if -_tmp47 + _tmp48 == 0 else math.copysign(1, -_tmp47 + _tmp48)) + 1)
    _tmp210 = _tmp209 * _tmp49 * _tmp51 / _tmp50 ** (3.0 / 2.0)
    _tmp211 = _tmp109 * _tmp210
    _tmp212 = _tmp198 * _tmp204
    _tmp213 = _tmp197 * _tmp205
    _tmp214 = _tmp195 * _tmp197
    _tmp215 = _tmp214 * _tmp5
    _tmp216 = _tmp201 * _tmp204
    _tmp217 = _tmp193 * _tmp33
    _tmp218 = _tmp209 / _tmp50
    _tmp219 = _tmp208 * _tmp218
    _tmp220 = (
        -_tmp109 * _tmp219
        + _tmp208 * _tmp211
        + _tmp55
        * (
            -_tmp11 * _tmp217
            + _tmp151 * _tmp96
            + _tmp212
            + _tmp213
            - _tmp215
            - _tmp216
            + _tmp34
            - 1.0 / 2.0 * _tmp43
        )
    )
    _tmp221 = _tmp13 * _tmp195
    _tmp222 = (1.0 / 2.0) * _tmp70
    _tmp223 = state[1, 0] * state[2, 0]
    _tmp224 = _tmp200 * _tmp223
    _tmp225 = _tmp198 * _tmp223 - _tmp224 * _tmp58
    _tmp226 = _tmp151 * _tmp69
    _tmp227 = -_tmp197 * _tmp217 + _tmp197 * _tmp226
    _tmp228 = -_tmp63
    _tmp229 = _tmp195 * _tmp223
    _tmp230 = _tmp229 * _tmp5
    _tmp231 = _tmp224 * _tmp62
    _tmp232 = _tmp200 * _tmp23
    _tmp233 = _tmp0 * _tmp214 - _tmp197 * _tmp232
    _tmp234 = -_tmp126 + _tmp13 * _tmp198 - _tmp222 * _tmp58 + _tmp228 + _tmp230 - _tmp231 + _tmp233
    _tmp235 = _tmp210 * _tmp234
    _tmp236 = _tmp218 * _tmp234
    _tmp237 = (
        _tmp109 * _tmp235
        - _tmp109 * _tmp236
        + _tmp55
        * (-_tmp221 * _tmp5 + _tmp222 * _tmp62 + _tmp225 + _tmp227 + _tmp56 - 1.0 / 2.0 * _tmp66)
    )
    _tmp238 = _tmp0 * _tmp206
    _tmp239 = _tmp12 * _tmp195
    _tmp240 = _tmp204 * _tmp232
    _tmp241 = -_tmp56
    _tmp242 = (1.0 / 2.0) * _tmp73
    _tmp243 = -_tmp118 + _tmp225 + _tmp238 + _tmp239 * _tmp5 - _tmp240 + _tmp241 - _tmp242 * _tmp62
    _tmp244 = _tmp218 * _tmp243
    _tmp245 = -_tmp204 * _tmp217 + _tmp204 * _tmp226
    _tmp246 = (
        -_tmp109 * _tmp244
        + _tmp211 * _tmp243
        + _tmp55
        * (
            _tmp12 * _tmp198
            + _tmp228
            - _tmp230
            + _tmp231
            - _tmp242 * _tmp58
            + _tmp245
            - 1.0 / 2.0 * _tmp59
        )
    )
    _tmp247 = _tmp220 * state_cov[0, 0] + _tmp237 * state_cov[1, 0] + _tmp246 * state_cov[2, 0]
    _tmp248 = _tmp220 * state_cov[0, 1] + _tmp237 * state_cov[1, 1] + _tmp246 * state_cov[2, 1]
    _tmp249 = _tmp220 * state_cov[0, 2] + _tmp237 * state_cov[1, 2] + _tmp246 * state_cov[2, 2]
    _tmp250 = _tmp53 * _tmp61
    _tmp251 = _tmp156 * _tmp250
    _tmp252 = _tmp143 * _tmp36
    _tmp253 = (
        _tmp155
        * (
            -_tmp0 * _tmp252
            - _tmp114 * _tmp176
            + _tmp119 * _tmp176
            + _tmp154
            + _tmp162
            - _tmp164
            + _tmp30
        )
        - _tmp180 * _tmp251
        + _tmp181 * _tmp250
    )
    _tmp254 = _tmp173 * _tmp253
    _tmp255 = _tmp169 * _tmp2 - _tmp170 * _tmp2
    _tmp256 = (
        _tmp155
        * (
            -_tmp129 * _tmp159
            + _tmp165 * state[0, 0]
            - _tmp168 * _tmp36
            - _tmp178
            + _tmp179
            + _tmp255
        )
        - _tmp166 * _tmp251
        + _tmp167 * _tmp250
    )
    _tmp257 = _tmp173 * _tmp256
    _tmp258 = _tmp110 * _tmp160
    _tmp259 = _tmp110 * _tmp163
    _tmp260 = (
        -_tmp134 * _tmp251
        + _tmp142 * _tmp250
        + _tmp155
        * (
            -_tmp150 * _tmp3
            + _tmp153 * _tmp3
            + _tmp182
            - _tmp185
            - _tmp2 * _tmp252
            + _tmp22
            + _tmp258
            - _tmp259
        )
    )
    _tmp261 = _tmp173 * _tmp260
    _tmp262 = _tmp254 * gyro_cov[0, 0] + _tmp257 * gyro_cov[2, 0] + _tmp261 * gyro_cov[1, 0]
    _tmp263 = _tmp254 * gyro_cov[0, 1] + _tmp257 * gyro_cov[2, 1] + _tmp261 * gyro_cov[1, 1]
    _tmp264 = -_tmp217 * _tmp223 + _tmp223 * _tmp226
    _tmp265 = _tmp210 * _tmp243
    _tmp266 = (
        -_tmp244 * _tmp250
        + _tmp250 * _tmp265
        + _tmp55
        * (-_tmp0 * _tmp239 + _tmp207 + _tmp23 * _tmp242 + _tmp264 - 1.0 / 2.0 * _tmp31 + _tmp42)
    )
    _tmp267 = _tmp208 * _tmp210
    _tmp268 = (
        -_tmp219 * _tmp250
        + _tmp250 * _tmp267
        + _tmp55
        * (
            _tmp196 * _tmp5
            - _tmp203 * _tmp62
            + _tmp227
            - _tmp238
            + _tmp240
            + _tmp241
            - 1.0 / 2.0 * _tmp64
        )
    )
    _tmp269 = _tmp0 * _tmp229
    _tmp270 = _tmp224 * _tmp23
    _tmp271 = (
        _tmp235 * _tmp250
        - _tmp236 * _tmp250
        + _tmp55
        * (
            -_tmp13 * _tmp217
            + _tmp151 * _tmp70
            - _tmp213
            + _tmp215
            - _tmp269
            + _tmp270
            + _tmp34
            - 1.0 / 2.0 * _tmp44
        )
    )
    _tmp272 = _tmp266 * state_cov[2, 1] + _tmp268 * state_cov[0, 1] + _tmp271 * state_cov[1, 1]
    _tmp273 = _tmp254 * gyro_cov[0, 2] + _tmp257 * gyro_cov[2, 2] + _tmp261 * gyro_cov[1, 2]
    _tmp274 = _tmp266 * state_cov[2, 0] + _tmp268 * state_cov[0, 0] + _tmp271 * state_cov[1, 0]
    _tmp275 = _tmp266 * state_cov[2, 2] + _tmp268 * state_cov[0, 2] + _tmp271 * state_cov[1, 2]
    _tmp276 = _tmp27 * state[2, 0]
    _tmp277 = _tmp53 * _tmp67
    _tmp278 = _tmp156 * _tmp277
    _tmp279 = (
        _tmp155
        * (
            -_tmp149 * _tmp159
            + _tmp152 * _tmp159
            - _tmp168 * _tmp276
            - _tmp183
            + _tmp184
            + _tmp22
            - _tmp258
            + _tmp259
        )
        - _tmp166 * _tmp278
        + _tmp167 * _tmp277
    )
    _tmp280 = _tmp173 * _tmp279
    _tmp281 = _tmp143 * _tmp276
    _tmp282 = (
        _tmp155
        * (-_tmp0 * _tmp281 + _tmp124 * _tmp176 - _tmp127 * _tmp176 + _tmp133 + _tmp171 - _tmp37)
        - _tmp180 * _tmp278
        + _tmp181 * _tmp277
    )
    _tmp283 = _tmp173 * _tmp282
    _tmp284 = (
        -_tmp134 * _tmp278
        + _tmp142 * _tmp277
        + _tmp155
        * (
            _tmp125 * _tmp129
            - _tmp125 * _tmp132
            + _tmp175
            - _tmp177
            + _tmp178
            - _tmp2 * _tmp281
            + _tmp255
        )
    )
    _tmp285 = _tmp173 * _tmp284
    _tmp286 = _tmp280 * gyro_cov[2, 1] + _tmp283 * gyro_cov[0, 1] + _tmp285 * gyro_cov[1, 1]
    _tmp287 = _tmp280 * gyro_cov[2, 2] + _tmp283 * gyro_cov[0, 2] + _tmp285 * gyro_cov[1, 2]
    _tmp288 = (
        _tmp235 * _tmp277
        - _tmp236 * _tmp277
        + _tmp55
        * (
            _tmp0 * _tmp221
            + _tmp192
            - _tmp199
            + _tmp202
            - _tmp222 * _tmp23
            + _tmp264
            - 1.0 / 2.0 * _tmp38
        )
    )
    _tmp289 = (
        -_tmp244 * _tmp277
        + _tmp265 * _tmp277
        + _tmp55
        * (
            -_tmp12 * _tmp217
            + _tmp151 * _tmp73
            - _tmp212
            + _tmp216
            + _tmp269
            - _tmp270
            + _tmp34
            - 1.0 / 2.0 * _tmp41
        )
    )
    _tmp290 = (
        -_tmp219 * _tmp277
        + _tmp267 * _tmp277
        + _tmp55
        * (-_tmp11 * _tmp198 + _tmp203 * _tmp58 + _tmp233 + _tmp245 - 1.0 / 2.0 * _tmp57 + _tmp63)
    )
    _tmp291 = _tmp288 * state_cov[1, 0] + _tmp289 * state_cov[2, 0] + _tmp290 * state_cov[0, 0]
    _tmp292 = _tmp288 * state_cov[1, 2] + _tmp289 * state_cov[2, 2] + _tmp290 * state_cov[0, 2]
    _tmp293 = _tmp288 * state_cov[1, 1] + _tmp289 * state_cov[2, 1] + _tmp290 * state_cov[0, 1]
    _tmp294 = _tmp280 * gyro_cov[2, 0] + _tmp283 * gyro_cov[0, 0] + _tmp285 * gyro_cov[1, 0]
    _tmp295 = _tmp194 * _tmp82
    _tmp296 = _tmp13 * _tmp295
    _tmp297 = _tmp296 * state[2, 0]
    _tmp298 = 4 * _tmp68 / _tmp14**2
    _tmp299 = _tmp13 * _tmp298
    _tmp300 = _tmp299 * state[2, 0]
    _tmp301 = -_tmp297 + _tmp300
    _tmp302 = 4 * _tmp78
    _tmp303 = state[2, 0] ** 3
    _tmp304 = -_tmp295 * _tmp303 + _tmp298 * _tmp303 - _tmp302 * state[2, 0]
    _tmp305 = _tmp12 * _tmp298 * state[0, 0]
    _tmp306 = _tmp87 * state[0, 0]
    _tmp307 = _tmp12 * _tmp295
    _tmp308 = _tmp307 * state[0, 0]
    _tmp309 = -_tmp305 + _tmp306 + _tmp308
    _tmp310 = _tmp194 * _tmp90
    _tmp311 = _tmp310 * state[2, 0]
    _tmp312 = _tmp223 * _tmp78
    _tmp313 = _tmp17**2
    _tmp314 = _tmp313 * _tmp69
    _tmp315 = _tmp223 * _tmp314
    _tmp316 = -_tmp311 - _tmp312 + _tmp315
    _tmp317 = _tmp313 * _tmp73
    _tmp318 = _tmp298 * state[2, 0]
    _tmp319 = -_tmp197 * _tmp318 + _tmp204 * _tmp310
    _tmp320 = _tmp319 - _tmp83
    _tmp321 = dt * (
        _tmp77 * (_tmp301 + _tmp304)
        + _tmp86 * (_tmp307 - _tmp317 + _tmp320 + _tmp74)
        + _tmp93 * (_tmp309 + _tmp316)
    )
    _tmp322 = _tmp321 * state_cov[2, 1]
    _tmp323 = _tmp311 + _tmp312 - _tmp315
    _tmp324 = _tmp296 * state[0, 0]
    _tmp325 = _tmp299 * state[0, 0]
    _tmp326 = _tmp306 + _tmp324 - _tmp325
    _tmp327 = _tmp12 * _tmp310
    _tmp328 = _tmp298 * state[1, 0]
    _tmp329 = _tmp12 * _tmp328
    _tmp330 = -_tmp327 + _tmp329
    _tmp331 = state[1, 0] ** 3
    _tmp332 = -_tmp295 * _tmp331 + _tmp298 * _tmp331 - _tmp302 * state[1, 0]
    _tmp333 = _tmp313 * _tmp70
    _tmp334 = _tmp319 + _tmp83
    _tmp335 = (
        _tmp77 * (_tmp330 + _tmp332)
        + _tmp86 * (_tmp323 + _tmp326)
        + _tmp93 * (-_tmp296 + _tmp333 + _tmp334 - _tmp71)
    )
    _tmp336 = _tmp335 * dt
    _tmp337 = _tmp336 * state_cov[1, 1]
    _tmp338 = _tmp305 - _tmp308
    _tmp339 = -_tmp324 + _tmp325
    _tmp340 = _tmp310 * state[0, 0]
    _tmp341 = _tmp197 * _tmp78
    _tmp342 = _tmp197 * _tmp314
    _tmp343 = -_tmp340 - _tmp341 + _tmp342
    _tmp344 = _tmp11 * _tmp318
    _tmp345 = _tmp11 * _tmp295
    _tmp346 = _tmp345 * state[2, 0]
    _tmp347 = -_tmp344 + _tmp346 + _tmp88
    _tmp348 = _tmp204 * _tmp78
    _tmp349 = _tmp204 * _tmp314
    _tmp350 = _tmp204 * _tmp295
    _tmp351 = _tmp348 - _tmp349 + _tmp350
    _tmp352 = _tmp11 * _tmp310
    _tmp353 = _tmp11 * _tmp328
    _tmp354 = _tmp352 - _tmp353 + _tmp80
    _tmp355 = dt * (
        _tmp77 * (_tmp338 + _tmp339) + _tmp86 * (_tmp351 + _tmp354) + _tmp93 * (_tmp343 + _tmp347)
    )
    _tmp356 = _tmp355 * state_cov[0, 1]
    _tmp357 = (
        _tmp322 * _tmp95
        + _tmp337 * _tmp95
        + _tmp356 * _tmp95
        + dt * state_cov[6, 1]
        + state_cov[3, 1]
    )
    _tmp358 = _tmp321 * state_cov[2, 0]
    _tmp359 = _tmp336 * state_cov[1, 0]
    _tmp360 = _tmp355 * state_cov[0, 0]
    _tmp361 = (
        _tmp358 * _tmp95
        + _tmp359 * _tmp95
        + _tmp360 * _tmp95
        + dt * state_cov[6, 0]
        + state_cov[3, 0]
    )
    _tmp362 = _tmp321 * state_cov[2, 2]
    _tmp363 = _tmp336 * state_cov[1, 2]
    _tmp364 = _tmp355 * state_cov[0, 2]
    _tmp365 = (
        _tmp362 * _tmp95
        + _tmp363 * _tmp95
        + _tmp364 * _tmp95
        + dt * state_cov[6, 2]
        + state_cov[3, 2]
    )
    _tmp366 = -_tmp352 + _tmp353
    _tmp367 = _tmp297 - _tmp300 + _tmp88
    _tmp368 = _tmp340 + _tmp341 - _tmp342
    _tmp369 = dt * (
        _tmp77 * (_tmp316 + _tmp326) + _tmp86 * (_tmp330 + _tmp366) + _tmp93 * (_tmp367 + _tmp368)
    )
    _tmp370 = _tmp369 * state_cov[1, 0]
    _tmp371 = state[0, 0] ** 3
    _tmp372 = -_tmp295 * _tmp371 + _tmp298 * _tmp371 - _tmp302 * state[0, 0]
    _tmp373 = -_tmp348 + _tmp349 - _tmp350
    _tmp374 = _tmp313 * _tmp96
    _tmp375 = dt * (
        _tmp77 * (_tmp354 + _tmp373)
        + _tmp86 * (_tmp338 + _tmp372)
        + _tmp93 * (_tmp320 + _tmp345 - _tmp374 + _tmp97)
    )
    _tmp376 = _tmp375 * state_cov[0, 0]
    _tmp377 = _tmp327 - _tmp329 + _tmp80
    _tmp378 = _tmp344 - _tmp346
    _tmp379 = dt * (
        _tmp77 * (-_tmp307 + _tmp317 + _tmp334 - _tmp74)
        + _tmp86 * (_tmp304 + _tmp378)
        + _tmp93 * (_tmp351 + _tmp377)
    )
    _tmp380 = _tmp379 * state_cov[2, 0]
    _tmp381 = (
        _tmp370 * _tmp95
        + _tmp376 * _tmp95
        + _tmp380 * _tmp95
        + dt * state_cov[7, 0]
        + state_cov[4, 0]
    )
    _tmp382 = _tmp369 * state_cov[1, 1]
    _tmp383 = _tmp375 * state_cov[0, 1]
    _tmp384 = _tmp379 * state_cov[2, 1]
    _tmp385 = (
        _tmp382 * _tmp95
        + _tmp383 * _tmp95
        + _tmp384 * _tmp95
        + dt * state_cov[7, 1]
        + state_cov[4, 1]
    )
    _tmp386 = _tmp369 * state_cov[1, 2]
    _tmp387 = _tmp375 * state_cov[0, 2]
    _tmp388 = _tmp379 * state_cov[2, 2]
    _tmp389 = (
        _tmp386 * _tmp95
        + _tmp387 * _tmp95
        + _tmp388 * _tmp95
        + dt * state_cov[7, 2]
        + state_cov[4, 2]
    )
    _tmp390 = dt * (
        _tmp77 * (_tmp347 + _tmp368)
        + _tmp86 * (_tmp334 - _tmp345 + _tmp374 - _tmp97)
        + _tmp93 * (_tmp339 + _tmp372)
    )
    _tmp391 = _tmp390 * state_cov[0, 0]
    _tmp392 = (
        _tmp77 * (_tmp296 + _tmp320 - _tmp333 + _tmp71)
        + _tmp86 * (_tmp343 + _tmp367)
        + _tmp93 * (_tmp332 + _tmp366)
    )
    _tmp393 = _tmp392 * dt
    _tmp394 = _tmp393 * state_cov[1, 0]
    _tmp395 = dt * (
        _tmp77 * (_tmp309 + _tmp323) + _tmp86 * (_tmp373 + _tmp377) + _tmp93 * (_tmp301 + _tmp378)
    )
    _tmp396 = _tmp395 * state_cov[2, 0]
    _tmp397 = (
        _tmp391 * _tmp95
        + _tmp394 * _tmp95
        + _tmp396 * _tmp95
        + dt * state_cov[8, 0]
        + state_cov[5, 0]
    )
    _tmp398 = _tmp390 * state_cov[0, 1]
    _tmp399 = _tmp393 * state_cov[1, 1]
    _tmp400 = _tmp395 * state_cov[2, 1]
    _tmp401 = (
        _tmp398 * _tmp95
        + _tmp399 * _tmp95
        + _tmp400 * _tmp95
        + dt * state_cov[8, 1]
        + state_cov[5, 1]
    )
    _tmp402 = _tmp390 * state_cov[0, 2]
    _tmp403 = _tmp393 * state_cov[1, 2]
    _tmp404 = _tmp395 * state_cov[2, 2]
    _tmp405 = (
        _tmp402 * _tmp95
        + _tmp403 * _tmp95
        + _tmp404 * _tmp95
        + dt * state_cov[8, 2]
        + state_cov[5, 2]
    )
    _tmp406 = _tmp322 + _tmp337 + _tmp356 + state_cov[6, 1]
    _tmp407 = _tmp362 + _tmp363 + _tmp364 + state_cov[6, 2]
    _tmp408 = _tmp358 + _tmp359 + _tmp360 + state_cov[6, 0]
    _tmp409 = _tmp370 + _tmp376 + _tmp380 + state_cov[7, 0]
    _tmp410 = _tmp386 + _tmp387 + _tmp388 + state_cov[7, 2]
    _tmp411 = _tmp382 + _tmp383 + _tmp384 + state_cov[7, 1]
    _tmp412 = _tmp398 + _tmp399 + _tmp400 + state_cov[8, 1]
    _tmp413 = _tmp402 + _tmp403 + _tmp404 + state_cov[8, 2]
    _tmp414 = _tmp391 + _tmp394 + _tmp396 + state_cov[8, 0]
    _tmp415 = _tmp220 * state_cov[0, 6] + _tmp237 * state_cov[1, 6] + _tmp246 * state_cov[2, 6]
    _tmp416 = _tmp247 * _tmp355
    _tmp417 = _tmp248 * _tmp336
    _tmp418 = _tmp249 * _tmp321
    _tmp419 = _tmp266 * state_cov[2, 6] + _tmp268 * state_cov[0, 6] + _tmp271 * state_cov[1, 6]
    _tmp420 = _tmp272 * dt
    _tmp421 = _tmp335 * _tmp420
    _tmp422 = _tmp275 * _tmp321
    _tmp423 = _tmp274 * _tmp355
    _tmp424 = _tmp291 * _tmp355
    _tmp425 = _tmp292 * _tmp321
    _tmp426 = _tmp293 * _tmp336
    _tmp427 = _tmp288 * state_cov[1, 6] + _tmp289 * state_cov[2, 6] + _tmp290 * state_cov[0, 6]
    _tmp428 = _tmp321 * _tmp365
    _tmp429 = _tmp92 * accel_cov[2, 2]
    _tmp430 = _tmp85 * accel_cov[1, 2]
    _tmp431 = _tmp76 * accel_cov[0, 2]
    _tmp432 = _tmp429 * _tmp95 + _tmp430 * _tmp95 + _tmp431 * _tmp95
    _tmp433 = _tmp92 * dt
    _tmp434 = _tmp432 * _tmp433
    _tmp435 = _tmp321 * state_cov[2, 3]
    _tmp436 = _tmp92 * accel_cov[2, 1]
    _tmp437 = _tmp85 * accel_cov[1, 1]
    _tmp438 = _tmp76 * accel_cov[0, 1]
    _tmp439 = _tmp436 * _tmp95 + _tmp437 * _tmp95 + _tmp438 * _tmp95
    _tmp440 = _tmp85 * dt
    _tmp441 = _tmp439 * _tmp440
    _tmp442 = _tmp92 * accel_cov[2, 0]
    _tmp443 = _tmp85 * accel_cov[1, 0]
    _tmp444 = _tmp76 * accel_cov[0, 0]
    _tmp445 = _tmp442 * _tmp95 + _tmp443 * _tmp95 + _tmp444 * _tmp95
    _tmp446 = _tmp76 * dt
    _tmp447 = _tmp445 * _tmp446
    _tmp448 = _tmp336 * state_cov[1, 3]
    _tmp449 = _tmp355 * _tmp361
    _tmp450 = _tmp336 * _tmp357
    _tmp451 = _tmp321 * state_cov[2, 6]
    _tmp452 = _tmp336 * state_cov[1, 6]
    _tmp453 = _tmp355 * state_cov[0, 6]
    _tmp454 = (
        _tmp451 * _tmp95
        + _tmp452 * _tmp95
        + _tmp453 * _tmp95
        + dt * state_cov[6, 6]
        + state_cov[3, 6]
    )
    _tmp455 = _tmp355 * state_cov[0, 3]
    _tmp456 = _tmp355 * _tmp381
    _tmp457 = _tmp369 * state_cov[1, 3]
    _tmp458 = _tmp336 * _tmp385
    _tmp459 = _tmp321 * _tmp389
    _tmp460 = _tmp99 * accel_cov[1, 2]
    _tmp461 = _tmp100 * accel_cov[0, 2]
    _tmp462 = _tmp103 * accel_cov[2, 2]
    _tmp463 = _tmp460 * _tmp95 + _tmp461 * _tmp95 + _tmp462 * _tmp95
    _tmp464 = _tmp433 * _tmp463
    _tmp465 = _tmp375 * state_cov[0, 3]
    _tmp466 = _tmp99 * accel_cov[1, 0]
    _tmp467 = _tmp100 * accel_cov[0, 0]
    _tmp468 = _tmp103 * accel_cov[2, 0]
    _tmp469 = _tmp466 * _tmp95 + _tmp467 * _tmp95 + _tmp468 * _tmp95
    _tmp470 = _tmp446 * _tmp469
    _tmp471 = _tmp379 * state_cov[2, 3]
    _tmp472 = _tmp99 * accel_cov[1, 1]
    _tmp473 = _tmp100 * accel_cov[0, 1]
    _tmp474 = _tmp103 * accel_cov[2, 1]
    _tmp475 = _tmp472 * _tmp95 + _tmp473 * _tmp95 + _tmp474 * _tmp95
    _tmp476 = _tmp440 * _tmp475
    _tmp477 = _tmp369 * state_cov[1, 6]
    _tmp478 = _tmp375 * state_cov[0, 6]
    _tmp479 = _tmp379 * state_cov[2, 6]
    _tmp480 = (
        _tmp477 * _tmp95
        + _tmp478 * _tmp95
        + _tmp479 * _tmp95
        + dt * state_cov[7, 6]
        + state_cov[4, 6]
    )
    _tmp481 = _tmp355 * _tmp397
    _tmp482 = _tmp336 * _tmp401
    _tmp483 = _tmp390 * state_cov[0, 3]
    _tmp484 = _tmp106 * accel_cov[0, 2]
    _tmp485 = _tmp105 * accel_cov[2, 2]
    _tmp486 = _tmp107 * accel_cov[1, 2]
    _tmp487 = _tmp484 * _tmp95 + _tmp485 * _tmp95 + _tmp486 * _tmp95
    _tmp488 = _tmp433 * _tmp487
    _tmp489 = _tmp106 * accel_cov[0, 1]
    _tmp490 = _tmp105 * accel_cov[2, 1]
    _tmp491 = _tmp107 * accel_cov[1, 1]
    _tmp492 = _tmp489 * _tmp95 + _tmp490 * _tmp95 + _tmp491 * _tmp95
    _tmp493 = _tmp440 * _tmp492
    _tmp494 = _tmp393 * state_cov[1, 3]
    _tmp495 = _tmp321 * _tmp405
    _tmp496 = _tmp395 * state_cov[2, 3]
    _tmp497 = _tmp390 * state_cov[0, 6]
    _tmp498 = _tmp393 * state_cov[1, 6]
    _tmp499 = _tmp395 * state_cov[2, 6]
    _tmp500 = (
        _tmp497 * _tmp95
        + _tmp498 * _tmp95
        + _tmp499 * _tmp95
        + dt * state_cov[8, 6]
        + state_cov[5, 6]
    )
    _tmp501 = _tmp106 * accel_cov[0, 0]
    _tmp502 = _tmp105 * accel_cov[2, 0]
    _tmp503 = _tmp107 * accel_cov[1, 0]
    _tmp504 = _tmp501 * _tmp95 + _tmp502 * _tmp95 + _tmp503 * _tmp95
    _tmp505 = _tmp446 * _tmp504
    _tmp506 = _tmp451 + _tmp452 + _tmp453 + state_cov[6, 6]
    _tmp507 = _tmp429 + _tmp430 + _tmp431
    _tmp508 = _tmp433 * _tmp507
    _tmp509 = _tmp321 * _tmp407
    _tmp510 = _tmp336 * _tmp406
    _tmp511 = _tmp355 * _tmp408
    _tmp512 = _tmp436 + _tmp437 + _tmp438
    _tmp513 = _tmp440 * _tmp512
    _tmp514 = _tmp442 + _tmp443 + _tmp444
    _tmp515 = _tmp446 * _tmp514
    _tmp516 = _tmp336 * _tmp411
    _tmp517 = _tmp355 * _tmp409
    _tmp518 = _tmp472 + _tmp473 + _tmp474
    _tmp519 = _tmp440 * _tmp518
    _tmp520 = _tmp460 + _tmp461 + _tmp462
    _tmp521 = _tmp433 * _tmp520
    _tmp522 = _tmp466 + _tmp467 + _tmp468
    _tmp523 = _tmp446 * _tmp522
    _tmp524 = _tmp477 + _tmp478 + _tmp479 + state_cov[7, 6]
    _tmp525 = _tmp321 * _tmp410
    _tmp526 = _tmp336 * _tmp412
    _tmp527 = _tmp497 + _tmp498 + _tmp499 + state_cov[8, 6]
    _tmp528 = _tmp355 * _tmp414
    _tmp529 = _tmp501 + _tmp502 + _tmp503
    _tmp530 = _tmp446 * _tmp529
    _tmp531 = _tmp321 * _tmp413
    _tmp532 = _tmp484 + _tmp485 + _tmp486
    _tmp533 = _tmp433 * _tmp532
    _tmp534 = _tmp489 + _tmp490 + _tmp491
    _tmp535 = _tmp440 * _tmp534
    _tmp536 = _tmp220 * state_cov[0, 7] + _tmp237 * state_cov[1, 7] + _tmp246 * state_cov[2, 7]
    _tmp537 = _tmp248 * _tmp369
    _tmp538 = _tmp249 * _tmp379
    _tmp539 = _tmp247 * _tmp375
    _tmp540 = _tmp266 * state_cov[2, 7] + _tmp268 * state_cov[0, 7] + _tmp271 * state_cov[1, 7]
    _tmp541 = _tmp274 * _tmp375
    _tmp542 = _tmp272 * _tmp369
    _tmp543 = _tmp275 * _tmp379
    _tmp544 = _tmp292 * _tmp379
    _tmp545 = _tmp293 * _tmp369
    _tmp546 = _tmp288 * state_cov[1, 7] + _tmp289 * state_cov[2, 7] + _tmp290 * state_cov[0, 7]
    _tmp547 = _tmp291 * _tmp375
    _tmp548 = _tmp365 * _tmp379
    _tmp549 = _tmp99 * dt
    _tmp550 = _tmp439 * _tmp549
    _tmp551 = _tmp357 * _tmp369
    _tmp552 = _tmp321 * state_cov[2, 4]
    _tmp553 = _tmp100 * dt
    _tmp554 = _tmp445 * _tmp553
    _tmp555 = _tmp336 * state_cov[1, 4]
    _tmp556 = _tmp361 * _tmp375
    _tmp557 = _tmp103 * dt
    _tmp558 = _tmp432 * _tmp557
    _tmp559 = _tmp321 * state_cov[2, 7]
    _tmp560 = _tmp336 * state_cov[1, 7]
    _tmp561 = _tmp355 * state_cov[0, 7]
    _tmp562 = (
        _tmp559 * _tmp95
        + _tmp560 * _tmp95
        + _tmp561 * _tmp95
        + dt * state_cov[6, 7]
        + state_cov[3, 7]
    )
    _tmp563 = _tmp355 * state_cov[0, 4]
    _tmp564 = _tmp369 * state_cov[1, 4]
    _tmp565 = _tmp375 * state_cov[0, 4]
    _tmp566 = _tmp379 * _tmp389
    _tmp567 = _tmp379 * state_cov[2, 4]
    _tmp568 = _tmp463 * _tmp557
    _tmp569 = _tmp469 * _tmp553
    _tmp570 = _tmp369 * state_cov[1, 7]
    _tmp571 = _tmp375 * state_cov[0, 7]
    _tmp572 = _tmp379 * state_cov[2, 7]
    _tmp573 = (
        _tmp570 * _tmp95
        + _tmp571 * _tmp95
        + _tmp572 * _tmp95
        + dt * state_cov[7, 7]
        + state_cov[4, 7]
    )
    _tmp574 = _tmp369 * _tmp385
    _tmp575 = _tmp475 * _tmp549
    _tmp576 = _tmp375 * _tmp381
    _tmp577 = _tmp390 * state_cov[0, 4]
    _tmp578 = _tmp369 * _tmp401
    _tmp579 = _tmp492 * _tmp549
    _tmp580 = _tmp504 * _tmp553
    _tmp581 = _tmp379 * _tmp405
    _tmp582 = _tmp375 * _tmp397
    _tmp583 = _tmp393 * state_cov[1, 4]
    _tmp584 = _tmp487 * _tmp557
    _tmp585 = _tmp395 * state_cov[2, 4]
    _tmp586 = _tmp390 * state_cov[0, 7]
    _tmp587 = _tmp393 * state_cov[1, 7]
    _tmp588 = _tmp395 * state_cov[2, 7]
    _tmp589 = (
        _tmp586 * _tmp95
        + _tmp587 * _tmp95
        + _tmp588 * _tmp95
        + dt * state_cov[8, 7]
        + state_cov[5, 7]
    )
    _tmp590 = _tmp514 * _tmp553
    _tmp591 = _tmp512 * _tmp549
    _tmp592 = _tmp559 + _tmp560 + _tmp561 + state_cov[6, 7]
    _tmp593 = _tmp375 * _tmp408
    _tmp594 = _tmp369 * _tmp406
    _tmp595 = _tmp507 * _tmp557
    _tmp596 = _tmp379 * _tmp407
    _tmp597 = _tmp379 * _tmp410
    _tmp598 = _tmp369 * _tmp411
    _tmp599 = _tmp522 * _tmp553
    _tmp600 = _tmp375 * _tmp409
    _tmp601 = _tmp520 * _tmp557
    _tmp602 = _tmp518 * _tmp549
    _tmp603 = _tmp570 + _tmp571 + _tmp572 + state_cov[7, 7]
    _tmp604 = _tmp379 * _tmp413
    _tmp605 = _tmp532 * _tmp557
    _tmp606 = _tmp534 * _tmp549
    _tmp607 = _tmp586 + _tmp587 + _tmp588 + state_cov[8, 7]
    _tmp608 = _tmp375 * _tmp414
    _tmp609 = _tmp529 * _tmp553
    _tmp610 = _tmp369 * _tmp412
    _tmp611 = _tmp247 * _tmp390
    _tmp612 = _tmp220 * state_cov[0, 8] + _tmp237 * state_cov[1, 8] + _tmp246 * state_cov[2, 8]
    _tmp613 = _tmp249 * _tmp395
    _tmp614 = _tmp248 * _tmp393
    _tmp615 = _tmp266 * state_cov[2, 8] + _tmp268 * state_cov[0, 8] + _tmp271 * state_cov[1, 8]
    _tmp616 = _tmp392 * _tmp420
    _tmp617 = _tmp275 * _tmp395
    _tmp618 = _tmp274 * _tmp390
    _tmp619 = _tmp293 * _tmp393
    _tmp620 = _tmp288 * state_cov[1, 8] + _tmp289 * state_cov[2, 8] + _tmp290 * state_cov[0, 8]
    _tmp621 = _tmp292 * _tmp395
    _tmp622 = _tmp291 * _tmp390
    _tmp623 = _tmp105 * dt
    _tmp624 = _tmp432 * _tmp623
    _tmp625 = _tmp365 * _tmp395
    _tmp626 = _tmp357 * _tmp393
    _tmp627 = _tmp106 * dt
    _tmp628 = _tmp445 * _tmp627
    _tmp629 = _tmp321 * state_cov[2, 5]
    _tmp630 = _tmp361 * _tmp390
    _tmp631 = _tmp336 * state_cov[1, 5]
    _tmp632 = _tmp107 * dt
    _tmp633 = _tmp439 * _tmp632
    _tmp634 = _tmp321 * state_cov[2, 8]
    _tmp635 = _tmp336 * state_cov[1, 8]
    _tmp636 = _tmp355 * state_cov[0, 8]
    _tmp637 = (
        _tmp634 * _tmp95
        + _tmp635 * _tmp95
        + _tmp636 * _tmp95
        + dt * state_cov[6, 8]
        + state_cov[3, 8]
    )
    _tmp638 = _tmp355 * state_cov[0, 5]
    _tmp639 = _tmp385 * _tmp393
    _tmp640 = _tmp369 * state_cov[1, 5]
    _tmp641 = _tmp469 * _tmp627
    _tmp642 = _tmp375 * state_cov[0, 5]
    _tmp643 = _tmp389 * _tmp395
    _tmp644 = _tmp475 * _tmp632
    _tmp645 = _tmp379 * state_cov[2, 5]
    _tmp646 = _tmp381 * _tmp390
    _tmp647 = _tmp463 * _tmp623
    _tmp648 = _tmp369 * state_cov[1, 8]
    _tmp649 = _tmp375 * state_cov[0, 8]
    _tmp650 = _tmp379 * state_cov[2, 8]
    _tmp651 = (
        _tmp648 * _tmp95
        + _tmp649 * _tmp95
        + _tmp650 * _tmp95
        + dt * state_cov[7, 8]
        + state_cov[4, 8]
    )
    _tmp652 = _tmp390 * state_cov[0, 5]
    _tmp653 = _tmp504 * _tmp627
    _tmp654 = _tmp487 * _tmp623
    _tmp655 = _tmp395 * _tmp405
    _tmp656 = _tmp393 * _tmp401
    _tmp657 = _tmp393 * state_cov[1, 5]
    _tmp658 = _tmp492 * _tmp632
    _tmp659 = _tmp395 * state_cov[2, 5]
    _tmp660 = _tmp390 * state_cov[0, 8]
    _tmp661 = _tmp393 * state_cov[1, 8]
    _tmp662 = _tmp395 * state_cov[2, 8]
    _tmp663 = (
        _tmp660 * _tmp95
        + _tmp661 * _tmp95
        + _tmp662 * _tmp95
        + dt * state_cov[8, 8]
        + state_cov[5, 8]
    )
    _tmp664 = _tmp390 * _tmp397
    _tmp665 = _tmp514 * _tmp627
    _tmp666 = _tmp395 * _tmp407
    _tmp667 = _tmp634 + _tmp635 + _tmp636 + state_cov[6, 8]
    _tmp668 = _tmp507 * _tmp623
    _tmp669 = _tmp512 * _tmp632
    _tmp670 = _tmp390 * _tmp408
    _tmp671 = _tmp393 * _tmp406
    _tmp672 = _tmp395 * _tmp410
    _tmp673 = _tmp393 * _tmp411
    _tmp674 = _tmp390 * _tmp409
    _tmp675 = _tmp520 * _tmp623
    _tmp676 = _tmp522 * _tmp627
    _tmp677 = _tmp518 * _tmp632
    _tmp678 = _tmp648 + _tmp649 + _tmp650 + state_cov[7, 8]
    _tmp679 = _tmp393 * _tmp412
    _tmp680 = _tmp534 * _tmp632
    _tmp681 = _tmp532 * _tmp623
    _tmp682 = _tmp660 + _tmp661 + _tmp662 + state_cov[8, 8]
    _tmp683 = _tmp529 * _tmp627
    _tmp684 = _tmp390 * _tmp414
    _tmp685 = _tmp395 * _tmp413
    _tmp686 = _tmp355 * state_D_accel_bias[0, 0]
    _tmp687 = _tmp336 * state_D_accel_bias[1, 0]
    _tmp688 = _tmp321 * state_D_accel_bias[2, 0]
    _tmp689 = _tmp369 * state_D_accel_bias[1, 0]
    _tmp690 = _tmp379 * state_D_accel_bias[2, 0]
    _tmp691 = _tmp375 * state_D_accel_bias[0, 0]
    _tmp692 = _tmp393 * state_D_accel_bias[1, 0]
    _tmp693 = _tmp395 * state_D_accel_bias[2, 0]
    _tmp694 = _tmp390 * state_D_accel_bias[0, 0]
    _tmp695 = _tmp355 * state_D_accel_bias[0, 1]
    _tmp696 = _tmp336 * state_D_accel_bias[1, 1]
    _tmp697 = _tmp321 * state_D_accel_bias[2, 1]
    _tmp698 = _tmp369 * state_D_accel_bias[1, 1]
    _tmp699 = _tmp379 * state_D_accel_bias[2, 1]
    _tmp700 = _tmp375 * state_D_accel_bias[0, 1]
    _tmp701 = _tmp393 * state_D_accel_bias[1, 1]
    _tmp702 = _tmp395 * state_D_accel_bias[2, 1]
    _tmp703 = _tmp390 * state_D_accel_bias[0, 1]
    _tmp704 = _tmp355 * state_D_accel_bias[0, 2]
    _tmp705 = _tmp336 * state_D_accel_bias[1, 2]
    _tmp706 = _tmp321 * state_D_accel_bias[2, 2]
    _tmp707 = _tmp369 * state_D_accel_bias[1, 2]
    _tmp708 = _tmp379 * state_D_accel_bias[2, 2]
    _tmp709 = _tmp375 * state_D_accel_bias[0, 2]
    _tmp710 = _tmp393 * state_D_accel_bias[1, 2]
    _tmp711 = _tmp395 * state_D_accel_bias[2, 2]
    _tmp712 = _tmp390 * state_D_accel_bias[0, 2]
    _tmp713 = _tmp336 * state_D_gyro_bias[1, 0]
    _tmp714 = _tmp321 * state_D_gyro_bias[2, 0]
    _tmp715 = _tmp355 * state_D_gyro_bias[0, 0]
    _tmp716 = _tmp375 * state_D_gyro_bias[0, 0]
    _tmp717 = _tmp369 * state_D_gyro_bias[1, 0]
    _tmp718 = _tmp379 * state_D_gyro_bias[2, 0]
    _tmp719 = _tmp390 * state_D_gyro_bias[0, 0]
    _tmp720 = _tmp395 * state_D_gyro_bias[2, 0]
    _tmp721 = _tmp393 * state_D_gyro_bias[1, 0]
    _tmp722 = _tmp336 * state_D_gyro_bias[1, 1]
    _tmp723 = _tmp321 * state_D_gyro_bias[2, 1]
    _tmp724 = _tmp355 * state_D_gyro_bias[0, 1]
    _tmp725 = _tmp375 * state_D_gyro_bias[0, 1]
    _tmp726 = _tmp369 * state_D_gyro_bias[1, 1]
    _tmp727 = _tmp379 * state_D_gyro_bias[2, 1]
    _tmp728 = _tmp390 * state_D_gyro_bias[0, 1]
    _tmp729 = _tmp395 * state_D_gyro_bias[2, 1]
    _tmp730 = _tmp393 * state_D_gyro_bias[1, 1]
    _tmp731 = _tmp336 * state_D_gyro_bias[1, 2]
    _tmp732 = _tmp321 * state_D_gyro_bias[2, 2]
    _tmp733 = _tmp355 * state_D_gyro_bias[0, 2]
    _tmp734 = _tmp375 * state_D_gyro_bias[0, 2]
    _tmp735 = _tmp369 * state_D_gyro_bias[1, 2]
    _tmp736 = _tmp379 * state_D_gyro_bias[2, 2]
    _tmp737 = _tmp390 * state_D_gyro_bias[0, 2]
    _tmp738 = _tmp395 * state_D_gyro_bias[2, 2]
    _tmp739 = _tmp393 * state_D_gyro_bias[1, 2]

    # Output terms
    _new_state = [0.0] * 9
    _new_state[0] = _tmp39 * _tmp55
    _new_state[1] = _tmp55 * _tmp61
    _new_state[2] = _tmp55 * _tmp67
    _new_state[3] = _tmp94 * _tmp95 + dt * state[6, 0] + state[3, 0]
    _new_state[4] = _tmp104 * _tmp95 + dt * state[7, 0] + state[4, 0]
    _new_state[5] = _tmp108 * _tmp95 + dt * state[8, 0] + state[5, 0]
    _new_state[6] = _tmp94 + state[6, 0]
    _new_state[7] = _tmp104 + state[7, 0]
    _new_state[8] = _tmp108 + state[8, 0]
    _new_state_cov = numpy.zeros((9, 9))
    _new_state_cov[0, 0] = (
        _tmp158 * _tmp189
        + _tmp172 * _tmp190
        + _tmp186 * _tmp191
        + _tmp220 * _tmp247
        + _tmp237 * _tmp248
        + _tmp246 * _tmp249
    )
    _new_state_cov[1, 0] = (
        _tmp158 * _tmp263
        + _tmp172 * _tmp273
        + _tmp186 * _tmp262
        + _tmp220 * _tmp274
        + _tmp237 * _tmp272
        + _tmp246 * _tmp275
    )
    _new_state_cov[2, 0] = (
        _tmp158 * _tmp286
        + _tmp172 * _tmp287
        + _tmp186 * _tmp294
        + _tmp220 * _tmp291
        + _tmp237 * _tmp293
        + _tmp246 * _tmp292
    )
    _new_state_cov[3, 0] = _tmp220 * _tmp361 + _tmp237 * _tmp357 + _tmp246 * _tmp365
    _new_state_cov[4, 0] = _tmp220 * _tmp381 + _tmp237 * _tmp385 + _tmp246 * _tmp389
    _new_state_cov[5, 0] = _tmp220 * _tmp397 + _tmp237 * _tmp401 + _tmp246 * _tmp405
    _new_state_cov[6, 0] = _tmp220 * _tmp408 + _tmp237 * _tmp406 + _tmp246 * _tmp407
    _new_state_cov[7, 0] = _tmp220 * _tmp409 + _tmp237 * _tmp411 + _tmp246 * _tmp410
    _new_state_cov[8, 0] = _tmp220 * _tmp414 + _tmp237 * _tmp412 + _tmp246 * _tmp413
    _new_state_cov[0, 1] = (
        _tmp189 * _tmp260
        + _tmp190 * _tmp256
        + _tmp191 * _tmp253
        + _tmp247 * _tmp268
        + _tmp248 * _tmp271
        + _tmp249 * _tmp266
    )
    _new_state_cov[1, 1] = (
        _tmp253 * _tmp262
        + _tmp256 * _tmp273
        + _tmp260 * _tmp263
        + _tmp266 * _tmp275
        + _tmp268 * _tmp274
        + _tmp271 * _tmp272
    )
    _new_state_cov[2, 1] = (
        _tmp253 * _tmp294
        + _tmp256 * _tmp287
        + _tmp260 * _tmp286
        + _tmp266 * _tmp292
        + _tmp268 * _tmp291
        + _tmp271 * _tmp293
    )
    _new_state_cov[3, 1] = _tmp266 * _tmp365 + _tmp268 * _tmp361 + _tmp271 * _tmp357
    _new_state_cov[4, 1] = _tmp266 * _tmp389 + _tmp268 * _tmp381 + _tmp271 * _tmp385
    _new_state_cov[5, 1] = _tmp266 * _tmp405 + _tmp268 * _tmp397 + _tmp271 * _tmp401
    _new_state_cov[6, 1] = _tmp266 * _tmp407 + _tmp268 * _tmp408 + _tmp271 * _tmp406
    _new_state_cov[7, 1] = _tmp266 * _tmp410 + _tmp268 * _tmp409 + _tmp271 * _tmp411
    _new_state_cov[8, 1] = _tmp266 * _tmp413 + _tmp268 * _tmp414 + _tmp271 * _tmp412
    _new_state_cov[0, 2] = (
        _tmp189 * _tmp284
        + _tmp190 * _tmp279
        + _tmp191 * _tmp282
        + _tmp247 * _tmp290
        + _tmp248 * _tmp288
        + _tmp249 * _tmp289
    )
    _new_state_cov[1, 2] = (
        _tmp262 * _tmp282
        + _tmp263 * _tmp284
        + _tmp272 * _tmp288
        + _tmp273 * _tmp279
        + _tmp274 * _tmp290
        + _tmp275 * _tmp289
    )
    _new_state_cov[2, 2] = (
        _tmp279 * _tmp287
        + _tmp282 * _tmp294
        + _tmp284 * _tmp286
        + _tmp288 * _tmp293
        + _tmp289 * _tmp292
        + _tmp290 * _tmp291
    )
    _new_state_cov[3, 2] = _tmp288 * _tmp357 + _tmp289 * _tmp365 + _tmp290 * _tmp361
    _new_state_cov[4, 2] = _tmp288 * _tmp385 + _tmp289 * _tmp389 + _tmp290 * _tmp381
    _new_state_cov[5, 2] = _tmp288 * _tmp401 + _tmp289 * _tmp405 + _tmp290 * _tmp397
    _new_state_cov[6, 2] = _tmp288 * _tmp406 + _tmp289 * _tmp407 + _tmp290 * _tmp408
    _new_state_cov[7, 2] = _tmp288 * _tmp411 + _tmp289 * _tmp410 + _tmp290 * _tmp409
    _new_state_cov[8, 2] = _tmp288 * _tmp412 + _tmp289 * _tmp413 + _tmp290 * _tmp414
    _new_state_cov[0, 3] = (
        _tmp220 * state_cov[0, 3]
        + _tmp237 * state_cov[1, 3]
        + _tmp246 * state_cov[2, 3]
        + _tmp415 * dt
        + _tmp416 * _tmp95
        + _tmp417 * _tmp95
        + _tmp418 * _tmp95
    )
    _new_state_cov[1, 3] = (
        _tmp266 * state_cov[2, 3]
        + _tmp268 * state_cov[0, 3]
        + _tmp271 * state_cov[1, 3]
        + _tmp419 * dt
        + _tmp421 * _tmp95
        + _tmp422 * _tmp95
        + _tmp423 * _tmp95
    )
    _new_state_cov[2, 3] = (
        _tmp288 * state_cov[1, 3]
        + _tmp289 * state_cov[2, 3]
        + _tmp290 * state_cov[0, 3]
        + _tmp424 * _tmp95
        + _tmp425 * _tmp95
        + _tmp426 * _tmp95
        + _tmp427 * dt
    )
    _new_state_cov[3, 3] = (
        _tmp428 * _tmp95
        + _tmp434 * _tmp95
        + _tmp435 * _tmp95
        + _tmp441 * _tmp95
        + _tmp447 * _tmp95
        + _tmp448 * _tmp95
        + _tmp449 * _tmp95
        + _tmp450 * _tmp95
        + _tmp454 * dt
        + _tmp455 * _tmp95
        + dt * state_cov[6, 3]
        + state_cov[3, 3]
    )
    _new_state_cov[4, 3] = (
        _tmp456 * _tmp95
        + _tmp457 * _tmp95
        + _tmp458 * _tmp95
        + _tmp459 * _tmp95
        + _tmp464 * _tmp95
        + _tmp465 * _tmp95
        + _tmp470 * _tmp95
        + _tmp471 * _tmp95
        + _tmp476 * _tmp95
        + _tmp480 * dt
        + dt * state_cov[7, 3]
        + state_cov[4, 3]
    )
    _new_state_cov[5, 3] = (
        _tmp481 * _tmp95
        + _tmp482 * _tmp95
        + _tmp483 * _tmp95
        + _tmp488 * _tmp95
        + _tmp493 * _tmp95
        + _tmp494 * _tmp95
        + _tmp495 * _tmp95
        + _tmp496 * _tmp95
        + _tmp500 * dt
        + _tmp505 * _tmp95
        + dt * state_cov[8, 3]
        + state_cov[5, 3]
    )
    _new_state_cov[6, 3] = (
        _tmp435
        + _tmp448
        + _tmp455
        + _tmp506 * dt
        + _tmp508 * _tmp95
        + _tmp509 * _tmp95
        + _tmp510 * _tmp95
        + _tmp511 * _tmp95
        + _tmp513 * _tmp95
        + _tmp515 * _tmp95
        + state_cov[6, 3]
    )
    _new_state_cov[7, 3] = (
        _tmp457
        + _tmp465
        + _tmp471
        + _tmp516 * _tmp95
        + _tmp517 * _tmp95
        + _tmp519 * _tmp95
        + _tmp521 * _tmp95
        + _tmp523 * _tmp95
        + _tmp524 * dt
        + _tmp525 * _tmp95
        + state_cov[7, 3]
    )
    _new_state_cov[8, 3] = (
        _tmp483
        + _tmp494
        + _tmp496
        + _tmp526 * _tmp95
        + _tmp527 * dt
        + _tmp528 * _tmp95
        + _tmp530 * _tmp95
        + _tmp531 * _tmp95
        + _tmp533 * _tmp95
        + _tmp535 * _tmp95
        + state_cov[8, 3]
    )
    _new_state_cov[0, 4] = (
        _tmp220 * state_cov[0, 4]
        + _tmp237 * state_cov[1, 4]
        + _tmp246 * state_cov[2, 4]
        + _tmp536 * dt
        + _tmp537 * _tmp95
        + _tmp538 * _tmp95
        + _tmp539 * _tmp95
    )
    _new_state_cov[1, 4] = (
        _tmp266 * state_cov[2, 4]
        + _tmp268 * state_cov[0, 4]
        + _tmp271 * state_cov[1, 4]
        + _tmp540 * dt
        + _tmp541 * _tmp95
        + _tmp542 * _tmp95
        + _tmp543 * _tmp95
    )
    _new_state_cov[2, 4] = (
        _tmp288 * state_cov[1, 4]
        + _tmp289 * state_cov[2, 4]
        + _tmp290 * state_cov[0, 4]
        + _tmp544 * _tmp95
        + _tmp545 * _tmp95
        + _tmp546 * dt
        + _tmp547 * _tmp95
    )
    _new_state_cov[3, 4] = (
        _tmp548 * _tmp95
        + _tmp550 * _tmp95
        + _tmp551 * _tmp95
        + _tmp552 * _tmp95
        + _tmp554 * _tmp95
        + _tmp555 * _tmp95
        + _tmp556 * _tmp95
        + _tmp558 * _tmp95
        + _tmp562 * dt
        + _tmp563 * _tmp95
        + dt * state_cov[6, 4]
        + state_cov[3, 4]
    )
    _new_state_cov[4, 4] = (
        _tmp564 * _tmp95
        + _tmp565 * _tmp95
        + _tmp566 * _tmp95
        + _tmp567 * _tmp95
        + _tmp568 * _tmp95
        + _tmp569 * _tmp95
        + _tmp573 * dt
        + _tmp574 * _tmp95
        + _tmp575 * _tmp95
        + _tmp576 * _tmp95
        + dt * state_cov[7, 4]
        + state_cov[4, 4]
    )
    _new_state_cov[5, 4] = (
        _tmp577 * _tmp95
        + _tmp578 * _tmp95
        + _tmp579 * _tmp95
        + _tmp580 * _tmp95
        + _tmp581 * _tmp95
        + _tmp582 * _tmp95
        + _tmp583 * _tmp95
        + _tmp584 * _tmp95
        + _tmp585 * _tmp95
        + _tmp589 * dt
        + dt * state_cov[8, 4]
        + state_cov[5, 4]
    )
    _new_state_cov[6, 4] = (
        _tmp552
        + _tmp555
        + _tmp563
        + _tmp590 * _tmp95
        + _tmp591 * _tmp95
        + _tmp592 * dt
        + _tmp593 * _tmp95
        + _tmp594 * _tmp95
        + _tmp595 * _tmp95
        + _tmp596 * _tmp95
        + state_cov[6, 4]
    )
    _new_state_cov[7, 4] = (
        _tmp564
        + _tmp565
        + _tmp567
        + _tmp597 * _tmp95
        + _tmp598 * _tmp95
        + _tmp599 * _tmp95
        + _tmp600 * _tmp95
        + _tmp601 * _tmp95
        + _tmp602 * _tmp95
        + _tmp603 * dt
        + state_cov[7, 4]
    )
    _new_state_cov[8, 4] = (
        _tmp577
        + _tmp583
        + _tmp585
        + _tmp604 * _tmp95
        + _tmp605 * _tmp95
        + _tmp606 * _tmp95
        + _tmp607 * dt
        + _tmp608 * _tmp95
        + _tmp609 * _tmp95
        + _tmp610 * _tmp95
        + state_cov[8, 4]
    )
    _new_state_cov[0, 5] = (
        _tmp220 * state_cov[0, 5]
        + _tmp237 * state_cov[1, 5]
        + _tmp246 * state_cov[2, 5]
        + _tmp611 * _tmp95
        + _tmp612 * dt
        + _tmp613 * _tmp95
        + _tmp614 * _tmp95
    )
    _new_state_cov[1, 5] = (
        _tmp266 * state_cov[2, 5]
        + _tmp268 * state_cov[0, 5]
        + _tmp271 * state_cov[1, 5]
        + _tmp615 * dt
        + _tmp616 * _tmp95
        + _tmp617 * _tmp95
        + _tmp618 * _tmp95
    )
    _new_state_cov[2, 5] = (
        _tmp288 * state_cov[1, 5]
        + _tmp289 * state_cov[2, 5]
        + _tmp290 * state_cov[0, 5]
        + _tmp619 * _tmp95
        + _tmp620 * dt
        + _tmp621 * _tmp95
        + _tmp622 * _tmp95
    )
    _new_state_cov[3, 5] = (
        _tmp624 * _tmp95
        + _tmp625 * _tmp95
        + _tmp626 * _tmp95
        + _tmp628 * _tmp95
        + _tmp629 * _tmp95
        + _tmp630 * _tmp95
        + _tmp631 * _tmp95
        + _tmp633 * _tmp95
        + _tmp637 * dt
        + _tmp638 * _tmp95
        + dt * state_cov[6, 5]
        + state_cov[3, 5]
    )
    _new_state_cov[4, 5] = (
        _tmp639 * _tmp95
        + _tmp640 * _tmp95
        + _tmp641 * _tmp95
        + _tmp642 * _tmp95
        + _tmp643 * _tmp95
        + _tmp644 * _tmp95
        + _tmp645 * _tmp95
        + _tmp646 * _tmp95
        + _tmp647 * _tmp95
        + _tmp651 * dt
        + dt * state_cov[7, 5]
        + state_cov[4, 5]
    )
    _new_state_cov[5, 5] = (
        _tmp652 * _tmp95
        + _tmp653 * _tmp95
        + _tmp654 * _tmp95
        + _tmp655 * _tmp95
        + _tmp656 * _tmp95
        + _tmp657 * _tmp95
        + _tmp658 * _tmp95
        + _tmp659 * _tmp95
        + _tmp663 * dt
        + _tmp664 * _tmp95
        + dt * state_cov[8, 5]
        + state_cov[5, 5]
    )
    _new_state_cov[6, 5] = (
        _tmp629
        + _tmp631
        + _tmp638
        + _tmp665 * _tmp95
        + _tmp666 * _tmp95
        + _tmp667 * dt
        + _tmp668 * _tmp95
        + _tmp669 * _tmp95
        + _tmp670 * _tmp95
        + _tmp671 * _tmp95
        + state_cov[6, 5]
    )
    _new_state_cov[7, 5] = (
        _tmp640
        + _tmp642
        + _tmp645
        + _tmp672 * _tmp95
        + _tmp673 * _tmp95
        + _tmp674 * _tmp95
        + _tmp675 * _tmp95
        + _tmp676 * _tmp95
        + _tmp677 * _tmp95
        + _tmp678 * dt
        + state_cov[7, 5]
    )
    _new_state_cov[8, 5] = (
        _tmp652
        + _tmp657
        + _tmp659
        + _tmp679 * _tmp95
        + _tmp680 * _tmp95
        + _tmp681 * _tmp95
        + _tmp682 * dt
        + _tmp683 * _tmp95
        + _tmp684 * _tmp95
        + _tmp685 * _tmp95
        + state_cov[8, 5]
    )
    _new_state_cov[0, 6] = _tmp415 + _tmp416 + _tmp417 + _tmp418
    _new_state_cov[1, 6] = _tmp419 + _tmp421 + _tmp422 + _tmp423
    _new_state_cov[2, 6] = _tmp424 + _tmp425 + _tmp426 + _tmp427
    _new_state_cov[3, 6] = _tmp428 + _tmp434 + _tmp441 + _tmp447 + _tmp449 + _tmp450 + _tmp454
    _new_state_cov[4, 6] = _tmp456 + _tmp458 + _tmp459 + _tmp464 + _tmp470 + _tmp476 + _tmp480
    _new_state_cov[5, 6] = _tmp481 + _tmp482 + _tmp488 + _tmp493 + _tmp495 + _tmp500 + _tmp505
    _new_state_cov[6, 6] = _tmp506 + _tmp508 + _tmp509 + _tmp510 + _tmp511 + _tmp513 + _tmp515
    _new_state_cov[7, 6] = _tmp516 + _tmp517 + _tmp519 + _tmp521 + _tmp523 + _tmp524 + _tmp525
    _new_state_cov[8, 6] = _tmp526 + _tmp527 + _tmp528 + _tmp530 + _tmp531 + _tmp533 + _tmp535
    _new_state_cov[0, 7] = _tmp536 + _tmp537 + _tmp538 + _tmp539
    _new_state_cov[1, 7] = _tmp540 + _tmp541 + _tmp542 + _tmp543
    _new_state_cov[2, 7] = _tmp544 + _tmp545 + _tmp546 + _tmp547
    _new_state_cov[3, 7] = _tmp548 + _tmp550 + _tmp551 + _tmp554 + _tmp556 + _tmp558 + _tmp562
    _new_state_cov[4, 7] = _tmp566 + _tmp568 + _tmp569 + _tmp573 + _tmp574 + _tmp575 + _tmp576
    _new_state_cov[5, 7] = _tmp578 + _tmp579 + _tmp580 + _tmp581 + _tmp582 + _tmp584 + _tmp589
    _new_state_cov[6, 7] = _tmp590 + _tmp591 + _tmp592 + _tmp593 + _tmp594 + _tmp595 + _tmp596
    _new_state_cov[7, 7] = _tmp597 + _tmp598 + _tmp599 + _tmp600 + _tmp601 + _tmp602 + _tmp603
    _new_state_cov[8, 7] = _tmp604 + _tmp605 + _tmp606 + _tmp607 + _tmp608 + _tmp609 + _tmp610
    _new_state_cov[0, 8] = _tmp611 + _tmp612 + _tmp613 + _tmp614
    _new_state_cov[1, 8] = _tmp615 + _tmp616 + _tmp617 + _tmp618
    _new_state_cov[2, 8] = _tmp619 + _tmp620 + _tmp621 + _tmp622
    _new_state_cov[3, 8] = _tmp624 + _tmp625 + _tmp626 + _tmp628 + _tmp630 + _tmp633 + _tmp637
    _new_state_cov[4, 8] = _tmp639 + _tmp641 + _tmp643 + _tmp644 + _tmp646 + _tmp647 + _tmp651
    _new_state_cov[5, 8] = _tmp653 + _tmp654 + _tmp655 + _tmp656 + _tmp658 + _tmp663 + _tmp664
    _new_state_cov[6, 8] = _tmp665 + _tmp666 + _tmp667 + _tmp668 + _tmp669 + _tmp670 + _tmp671
    _new_state_cov[7, 8] = _tmp672 + _tmp673 + _tmp674 + _tmp675 + _tmp676 + _tmp677 + _tmp678
    _new_state_cov[8, 8] = _tmp679 + _tmp680 + _tmp681 + _tmp682 + _tmp683 + _tmp684 + _tmp685
    _new_state_D_accel_bias = numpy.zeros((9, 3))
    _new_state_D_accel_bias[0, 0] = (
        _tmp220 * state_D_accel_bias[0, 0]
        + _tmp237 * state_D_accel_bias[1, 0]
        + _tmp246 * state_D_accel_bias[2, 0]
    )
    _new_state_D_accel_bias[1, 0] = (
        _tmp266 * state_D_accel_bias[2, 0]
        + _tmp268 * state_D_accel_bias[0, 0]
        + _tmp271 * state_D_accel_bias[1, 0]
    )
    _new_state_D_accel_bias[2, 0] = (
        _tmp288 * state_D_accel_bias[1, 0]
        + _tmp289 * state_D_accel_bias[2, 0]
        + _tmp290 * state_D_accel_bias[0, 0]
    )
    _new_state_D_accel_bias[3, 0] = (
        -_tmp446 * _tmp95
        + _tmp686 * _tmp95
        + _tmp687 * _tmp95
        + _tmp688 * _tmp95
        + dt * state_D_accel_bias[6, 0]
        + state_D_accel_bias[3, 0]
    )
    _new_state_D_accel_bias[4, 0] = (
        -_tmp553 * _tmp95
        + _tmp689 * _tmp95
        + _tmp690 * _tmp95
        + _tmp691 * _tmp95
        + dt * state_D_accel_bias[7, 0]
        + state_D_accel_bias[4, 0]
    )
    _new_state_D_accel_bias[5, 0] = (
        -_tmp627 * _tmp95
        + _tmp692 * _tmp95
        + _tmp693 * _tmp95
        + _tmp694 * _tmp95
        + dt * state_D_accel_bias[8, 0]
        + state_D_accel_bias[5, 0]
    )
    _new_state_D_accel_bias[6, 0] = (
        -_tmp446 + _tmp686 + _tmp687 + _tmp688 + state_D_accel_bias[6, 0]
    )
    _new_state_D_accel_bias[7, 0] = (
        -_tmp553 + _tmp689 + _tmp690 + _tmp691 + state_D_accel_bias[7, 0]
    )
    _new_state_D_accel_bias[8, 0] = (
        -_tmp627 + _tmp692 + _tmp693 + _tmp694 + state_D_accel_bias[8, 0]
    )
    _new_state_D_accel_bias[0, 1] = (
        _tmp220 * state_D_accel_bias[0, 1]
        + _tmp237 * state_D_accel_bias[1, 1]
        + _tmp246 * state_D_accel_bias[2, 1]
    )
    _new_state_D_accel_bias[1, 1] = (
        _tmp266 * state_D_accel_bias[2, 1]
        + _tmp268 * state_D_accel_bias[0, 1]
        + _tmp271 * state_D_accel_bias[1, 1]
    )
    _new_state_D_accel_bias[2, 1] = (
        _tmp288 * state_D_accel_bias[1, 1]
        + _tmp289 * state_D_accel_bias[2, 1]
        + _tmp290 * state_D_accel_bias[0, 1]
    )
    _new_state_D_accel_bias[3, 1] = (
        -_tmp440 * _tmp95
        + _tmp695 * _tmp95
        + _tmp696 * _tmp95
        + _tmp697 * _tmp95
        + dt * state_D_accel_bias[6, 1]
        + state_D_accel_bias[3, 1]
    )
    _new_state_D_accel_bias[4, 1] = (
        -_tmp549 * _tmp95
        + _tmp698 * _tmp95
        + _tmp699 * _tmp95
        + _tmp700 * _tmp95
        + dt * state_D_accel_bias[7, 1]
        + state_D_accel_bias[4, 1]
    )
    _new_state_D_accel_bias[5, 1] = (
        -_tmp632 * _tmp95
        + _tmp701 * _tmp95
        + _tmp702 * _tmp95
        + _tmp703 * _tmp95
        + dt * state_D_accel_bias[8, 1]
        + state_D_accel_bias[5, 1]
    )
    _new_state_D_accel_bias[6, 1] = (
        -_tmp440 + _tmp695 + _tmp696 + _tmp697 + state_D_accel_bias[6, 1]
    )
    _new_state_D_accel_bias[7, 1] = (
        -_tmp549 + _tmp698 + _tmp699 + _tmp700 + state_D_accel_bias[7, 1]
    )
    _new_state_D_accel_bias[8, 1] = (
        -_tmp632 + _tmp701 + _tmp702 + _tmp703 + state_D_accel_bias[8, 1]
    )
    _new_state_D_accel_bias[0, 2] = (
        _tmp220 * state_D_accel_bias[0, 2]
        + _tmp237 * state_D_accel_bias[1, 2]
        + _tmp246 * state_D_accel_bias[2, 2]
    )
    _new_state_D_accel_bias[1, 2] = (
        _tmp266 * state_D_accel_bias[2, 2]
        + _tmp268 * state_D_accel_bias[0, 2]
        + _tmp271 * state_D_accel_bias[1, 2]
    )
    _new_state_D_accel_bias[2, 2] = (
        _tmp288 * state_D_accel_bias[1, 2]
        + _tmp289 * state_D_accel_bias[2, 2]
        + _tmp290 * state_D_accel_bias[0, 2]
    )
    _new_state_D_accel_bias[3, 2] = (
        -_tmp433 * _tmp95
        + _tmp704 * _tmp95
        + _tmp705 * _tmp95
        + _tmp706 * _tmp95
        + dt * state_D_accel_bias[6, 2]
        + state_D_accel_bias[3, 2]
    )
    _new_state_D_accel_bias[4, 2] = (
        -_tmp557 * _tmp95
        + _tmp707 * _tmp95
        + _tmp708 * _tmp95
        + _tmp709 * _tmp95
        + dt * state_D_accel_bias[7, 2]
        + state_D_accel_bias[4, 2]
    )
    _new_state_D_accel_bias[5, 2] = (
        -_tmp623 * _tmp95
        + _tmp710 * _tmp95
        + _tmp711 * _tmp95
        + _tmp712 * _tmp95
        + dt * state_D_accel_bias[8, 2]
        + state_D_accel_bias[5, 2]
    )
    _new_state_D_accel_bias[6, 2] = (
        -_tmp433 + _tmp704 + _tmp705 + _tmp706 + state_D_accel_bias[6, 2]
    )
    _new_state_D_accel_bias[7, 2] = (
        -_tmp557 + _tmp707 + _tmp708 + _tmp709 + state_D_accel_bias[7, 2]
    )
    _new_state_D_accel_bias[8, 2] = (
        -_tmp623 + _tmp710 + _tmp711 + _tmp712 + state_D_accel_bias[8, 2]
    )
    _new_state_D_gyro_bias = numpy.zeros((9, 3))
    _new_state_D_gyro_bias[0, 0] = (
        -_tmp186
        + _tmp220 * state_D_gyro_bias[0, 0]
        + _tmp237 * state_D_gyro_bias[1, 0]
        + _tmp246 * state_D_gyro_bias[2, 0]
    )
    _new_state_D_gyro_bias[1, 0] = (
        -_tmp253
        + _tmp266 * state_D_gyro_bias[2, 0]
        + _tmp268 * state_D_gyro_bias[0, 0]
        + _tmp271 * state_D_gyro_bias[1, 0]
    )
    _new_state_D_gyro_bias[2, 0] = (
        -_tmp282
        + _tmp288 * state_D_gyro_bias[1, 0]
        + _tmp289 * state_D_gyro_bias[2, 0]
        + _tmp290 * state_D_gyro_bias[0, 0]
    )
    _new_state_D_gyro_bias[3, 0] = (
        _tmp713 * _tmp95
        + _tmp714 * _tmp95
        + _tmp715 * _tmp95
        + dt * state_D_gyro_bias[6, 0]
        + state_D_gyro_bias[3, 0]
    )
    _new_state_D_gyro_bias[4, 0] = (
        _tmp716 * _tmp95
        + _tmp717 * _tmp95
        + _tmp718 * _tmp95
        + dt * state_D_gyro_bias[7, 0]
        + state_D_gyro_bias[4, 0]
    )
    _new_state_D_gyro_bias[5, 0] = (
        _tmp719 * _tmp95
        + _tmp720 * _tmp95
        + _tmp721 * _tmp95
        + dt * state_D_gyro_bias[8, 0]
        + state_D_gyro_bias[5, 0]
    )
    _new_state_D_gyro_bias[6, 0] = _tmp713 + _tmp714 + _tmp715 + state_D_gyro_bias[6, 0]
    _new_state_D_gyro_bias[7, 0] = _tmp716 + _tmp717 + _tmp718 + state_D_gyro_bias[7, 0]
    _new_state_D_gyro_bias[8, 0] = _tmp719 + _tmp720 + _tmp721 + state_D_gyro_bias[8, 0]
    _new_state_D_gyro_bias[0, 1] = (
        -_tmp158
        + _tmp220 * state_D_gyro_bias[0, 1]
        + _tmp237 * state_D_gyro_bias[1, 1]
        + _tmp246 * state_D_gyro_bias[2, 1]
    )
    _new_state_D_gyro_bias[1, 1] = (
        -_tmp260
        + _tmp266 * state_D_gyro_bias[2, 1]
        + _tmp268 * state_D_gyro_bias[0, 1]
        + _tmp271 * state_D_gyro_bias[1, 1]
    )
    _new_state_D_gyro_bias[2, 1] = (
        -_tmp284
        + _tmp288 * state_D_gyro_bias[1, 1]
        + _tmp289 * state_D_gyro_bias[2, 1]
        + _tmp290 * state_D_gyro_bias[0, 1]
    )
    _new_state_D_gyro_bias[3, 1] = (
        _tmp722 * _tmp95
        + _tmp723 * _tmp95
        + _tmp724 * _tmp95
        + dt * state_D_gyro_bias[6, 1]
        + state_D_gyro_bias[3, 1]
    )
    _new_state_D_gyro_bias[4, 1] = (
        _tmp725 * _tmp95
        + _tmp726 * _tmp95
        + _tmp727 * _tmp95
        + dt * state_D_gyro_bias[7, 1]
        + state_D_gyro_bias[4, 1]
    )
    _new_state_D_gyro_bias[5, 1] = (
        _tmp728 * _tmp95
        + _tmp729 * _tmp95
        + _tmp730 * _tmp95
        + dt * state_D_gyro_bias[8, 1]
        + state_D_gyro_bias[5, 1]
    )
    _new_state_D_gyro_bias[6, 1] = _tmp722 + _tmp723 + _tmp724 + state_D_gyro_bias[6, 1]
    _new_state_D_gyro_bias[7, 1] = _tmp725 + _tmp726 + _tmp727 + state_D_gyro_bias[7, 1]
    _new_state_D_gyro_bias[8, 1] = _tmp728 + _tmp729 + _tmp730 + state_D_gyro_bias[8, 1]
    _new_state_D_gyro_bias[0, 2] = (
        -_tmp172
        + _tmp220 * state_D_gyro_bias[0, 2]
        + _tmp237 * state_D_gyro_bias[1, 2]
        + _tmp246 * state_D_gyro_bias[2, 2]
    )
    _new_state_D_gyro_bias[1, 2] = (
        -_tmp256
        + _tmp266 * state_D_gyro_bias[2, 2]
        + _tmp268 * state_D_gyro_bias[0, 2]
        + _tmp271 * state_D_gyro_bias[1, 2]
    )
    _new_state_D_gyro_bias[2, 2] = (
        -_tmp279
        + _tmp288 * state_D_gyro_bias[1, 2]
        + _tmp289 * state_D_gyro_bias[2, 2]
        + _tmp290 * state_D_gyro_bias[0, 2]
    )
    _new_state_D_gyro_bias[3, 2] = (
        _tmp731 * _tmp95
        + _tmp732 * _tmp95
        + _tmp733 * _tmp95
        + dt * state_D_gyro_bias[6, 2]
        + state_D_gyro_bias[3, 2]
    )
    _new_state_D_gyro_bias[4, 2] = (
        _tmp734 * _tmp95
        + _tmp735 * _tmp95
        + _tmp736 * _tmp95
        + dt * state_D_gyro_bias[7, 2]
        + state_D_gyro_bias[4, 2]
    )
    _new_state_D_gyro_bias[5, 2] = (
        _tmp737 * _tmp95
        + _tmp738 * _tmp95
        + _tmp739 * _tmp95
        + dt * state_D_gyro_bias[8, 2]
        + state_D_gyro_bias[5, 2]
    )
    _new_state_D_gyro_bias[6, 2] = _tmp731 + _tmp732 + _tmp733 + state_D_gyro_bias[6, 2]
    _new_state_D_gyro_bias[7, 2] = _tmp734 + _tmp735 + _tmp736 + state_D_gyro_bias[7, 2]
    _new_state_D_gyro_bias[8, 2] = _tmp737 + _tmp738 + _tmp739 + state_D_gyro_bias[8, 2]
    return _new_state, _new_state_cov, _new_state_D_accel_bias, _new_state_D_gyro_bias
