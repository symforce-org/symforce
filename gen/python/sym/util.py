# -----------------------------------------------------------------------------
# This file was autogenerated by symforce from template:
#     util.py.jinja
# Do NOT modify by hand.
# -----------------------------------------------------------------------------

import typing as T

import numpy


def check_size_and_reshape(array, name, expected_shape):
    # type: (T.Union[T.Sequence[float], numpy.ndarray], str, T.Tuple[int, int]) -> numpy.ndarray
    if not isinstance(array, numpy.ndarray):
        expected_len = max(expected_shape)
        if len(array) != expected_len:
            raise IndexError(
                "{} is expected to have length {}; instead had length{}".format(
                    name, expected_len, len(array)
                )
            )
        return numpy.array(array).reshape(expected_shape)
    elif array.shape == (max(expected_shape),):
        return array.reshape(expected_shape)
    elif array.shape != expected_shape:
        raise IndexError(
            "{} is expected to have shape {} or ({},); instead had shape {}".format(
                name, expected_shape, max(expected_shape), array.shape
            )
        )
    return array
