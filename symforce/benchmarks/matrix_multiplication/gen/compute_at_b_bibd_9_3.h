// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once


#include <Eigen/Dense>
#include <Eigen/Sparse>



namespace sym {


/**
* This function was autogenerated. Do not modify by hand.
*
* Args:
*     x0: Scalar
*     x1: Scalar
*     x2: Scalar
*     x3: Scalar
*     x4: Scalar
*
* Outputs:
*     result: Matrix84_84
*/
template <typename Scalar>
__attribute__((noinline))
Eigen::SparseMatrix<Scalar> ComputeAtBBibd93(const Scalar x0, const Scalar x1, const Scalar x2, const Scalar x3, const Scalar x4) {

    // Total ops: 3395

    // Input arrays

    // Intermediate terms (670)
    const Scalar _tmp0 = x4 + 1;
    const Scalar _tmp1 = x2 + 2;
    const Scalar _tmp2 = _tmp1 + x3;
    const Scalar _tmp3 = x0 - 2;
    const Scalar _tmp4 = -x2;
    const Scalar _tmp5 = _tmp4 + x0;
    const Scalar _tmp6 = _tmp5 + 4;
    const Scalar _tmp7 = Scalar(1.0) / (x0);
    const Scalar _tmp8 = _tmp7*x4;
    const Scalar _tmp9 = -_tmp8;
    const Scalar _tmp10 = _tmp9 + 1;
    const Scalar _tmp11 = x0*x1;
    const Scalar _tmp12 = (Scalar(1)/Scalar(4))*_tmp11;
    const Scalar _tmp13 = x1*x3;
    const Scalar _tmp14 = (Scalar(1)/Scalar(2))*x2;
    const Scalar _tmp15 = (Scalar(1)/Scalar(2))*x4;
    const Scalar _tmp16 = _tmp14 + _tmp15;
    const Scalar _tmp17 = _tmp16*x4;
    const Scalar _tmp18 = 2*x1;
    const Scalar _tmp19 = -_tmp1*_tmp18 + _tmp1;
    const Scalar _tmp20 = x0 + x3;
    const Scalar _tmp21 = x0 + 1;
    const Scalar _tmp22 = _tmp21/_tmp20;
    const Scalar _tmp23 = Scalar(1.0) / (x2);
    const Scalar _tmp24 = x4*(-_tmp23 + x1);
    const Scalar _tmp25 = _tmp24 - 1;
    const Scalar _tmp26 = x0*x3;
    const Scalar _tmp27 = -_tmp15 + (Scalar(1)/Scalar(2))*_tmp26;
    const Scalar _tmp28 = x2 - 2;
    const Scalar _tmp29 = 2*x0;
    const Scalar _tmp30 = _tmp29*x3;
    const Scalar _tmp31 = _tmp30 - 2;
    const Scalar _tmp32 = x2 + x3;
    const Scalar _tmp33 = _tmp32 + x4;
    const Scalar _tmp34 = -_tmp33*x2 - x4;
    const Scalar _tmp35 = x3 + 1;
    const Scalar _tmp36 = -x4;
    const Scalar _tmp37 = x2*x4;
    const Scalar _tmp38 = _tmp36 + _tmp37;
    const Scalar _tmp39 = x3 - 2;
    const Scalar _tmp40 = _tmp39*x3;
    const Scalar _tmp41 = _tmp40 + x1;
    const Scalar _tmp42 = x0 + x1;
    const Scalar _tmp43 = _tmp4 + _tmp42 - 3;
    const Scalar _tmp44 = Scalar(1.0) / (x3);
    const Scalar _tmp45 = _tmp29 - 2;
    const Scalar _tmp46 = _tmp44*_tmp45;
    const Scalar _tmp47 = 2*x3;
    const Scalar _tmp48 = _tmp29 + _tmp47 - 3;
    const Scalar _tmp49 = x0 - 4;
    const Scalar _tmp50 = _tmp3*x0;
    const Scalar _tmp51 = x3 + x4;
    const Scalar _tmp52 = _tmp4 + _tmp51;
    const Scalar _tmp53 = 6*x3;
    const Scalar _tmp54 = _tmp13 + 1;
    const Scalar _tmp55 = x3 - 3;
    const Scalar _tmp56 = _tmp47*_tmp55 - 1;
    const Scalar _tmp57 = _tmp56*x3;
    const Scalar _tmp58 = std::pow(x1, Scalar(2));
    const Scalar _tmp59 = 2*_tmp58;
    const Scalar _tmp60 = _tmp59 + 4;
    const Scalar _tmp61 = _tmp60*x3;
    const Scalar _tmp62 = -x3;
    const Scalar _tmp63 = _tmp62 + x1;
    const Scalar _tmp64 = _tmp3 + _tmp63;
    const Scalar _tmp65 = x2*x3;
    const Scalar _tmp66 = _tmp64*_tmp65;
    const Scalar _tmp67 = x3 + 2;
    const Scalar _tmp68 = _tmp67 + x4;
    const Scalar _tmp69 = _tmp68*x3;
    const Scalar _tmp70 = x1 + x4;
    const Scalar _tmp71 = _tmp65*_tmp70;
    const Scalar _tmp72 = _tmp47*x1;
    const Scalar _tmp73 = _tmp8*x1;
    const Scalar _tmp74 = _tmp73 + 2;
    const Scalar _tmp75 = _tmp74*x3;
    const Scalar _tmp76 = 6*x0;
    const Scalar _tmp77 = x0 + 3;
    const Scalar _tmp78 = x1*x4;
    const Scalar _tmp79 = 6*x4;
    const Scalar _tmp80 = 12 - _tmp79;
    const Scalar _tmp81 = x1 + x2;
    const Scalar _tmp82 = _tmp44*x4;
    const Scalar _tmp83 = _tmp81*_tmp82;
    const Scalar _tmp84 = x0*x4;
    const Scalar _tmp85 = _tmp23*x1;
    const Scalar _tmp86 = _tmp84*_tmp85;
    const Scalar _tmp87 = 6*x2;
    const Scalar _tmp88 = _tmp18 + x4;
    const Scalar _tmp89 = Scalar(1.0) / (_tmp0);
    const Scalar _tmp90 = _tmp89*x0;
    const Scalar _tmp91 = _tmp90 + x3;
    const Scalar _tmp92 = 3*x1;
    const Scalar _tmp93 = _tmp92 + 3;
    const Scalar _tmp94 = -x0;
    const Scalar _tmp95 = _tmp47 + 2;
    const Scalar _tmp96 = _tmp94 + _tmp95;
    const Scalar _tmp97 = Scalar(1.0) / (x1);
    const Scalar _tmp98 = _tmp97 + x1;
    const Scalar _tmp99 = _tmp93*x4;
    const Scalar _tmp100 = 2*x2;
    const Scalar _tmp101 = _tmp100 + 2;
    const Scalar _tmp102 = x4 + 2;
    const Scalar _tmp103 = Scalar(1.0) / (_tmp102 + x0);
    const Scalar _tmp104 = _tmp103*x2;
    const Scalar _tmp105 = _tmp36 + x2;
    const Scalar _tmp106 = _tmp105*x2;
    const Scalar _tmp107 = 2*_tmp23;
    const Scalar _tmp108 = -_tmp107;
    const Scalar _tmp109 = _tmp108 + 1;
    const Scalar _tmp110 = x0 + x4;
    const Scalar _tmp111 = _tmp110 - _tmp84;
    const Scalar _tmp112 = 2*_tmp44;
    const Scalar _tmp113 = _tmp0 + _tmp112;
    const Scalar _tmp114 = _tmp113*_tmp44;
    const Scalar _tmp115 = 4*x2;
    const Scalar _tmp116 = _tmp115 - 1;
    const Scalar _tmp117 = _tmp105 + _tmp77;
    const Scalar _tmp118 = (Scalar(1)/Scalar(2))*x1;
    const Scalar _tmp119 = _tmp118 + 1;
    const Scalar _tmp120 = _tmp100 + _tmp39;
    const Scalar _tmp121 = _tmp1 + _tmp94;
    const Scalar _tmp122 = x1 - 2;
    const Scalar _tmp123 = _tmp122*x1;
    const Scalar _tmp124 = _tmp47*_tmp78;
    const Scalar _tmp125 = x1 + 2;
    const Scalar _tmp126 = _tmp125*_tmp89 - 1;
    const Scalar _tmp127 = x2 + 1;
    const Scalar _tmp128 = Scalar(1.0)*x0;
    const Scalar _tmp129 = _tmp127*_tmp128 + 2;
    const Scalar _tmp130 = std::pow(x3, Scalar(2));
    const Scalar _tmp131 = _tmp70 - 2;
    const Scalar _tmp132 = _tmp21 + x2;
    const Scalar _tmp133 = _tmp122*_tmp58;
    const Scalar _tmp134 = x4 - 2;
    const Scalar _tmp135 = Scalar(1.0) / (_tmp134);
    const Scalar _tmp136 = Scalar(1.0)*x1;
    const Scalar _tmp137 = Scalar(1.0) / (x4);
    const Scalar _tmp138 = -_tmp29;
    const Scalar _tmp139 = _tmp101 + _tmp138;
    const Scalar _tmp140 = 2*x4;
    const Scalar _tmp141 = _tmp140 + 2;
    const Scalar _tmp142 = 4*x1;
    const Scalar _tmp143 = _tmp100 + 4;
    const Scalar _tmp144 = 8*_tmp84;
    const Scalar _tmp145 = _tmp47 - 4;
    const Scalar _tmp146 = _tmp145 + _tmp87;
    const Scalar _tmp147 = Scalar(1.0)*x3;
    const Scalar _tmp148 = x4 - 1;
    const Scalar _tmp149 = _tmp36 + _tmp49*x3;
    const Scalar _tmp150 = std::pow(x4, Scalar(2));
    const Scalar _tmp151 = -_tmp115 + _tmp18;
    const Scalar _tmp152 = _tmp1 + x0;
    const Scalar _tmp153 = Scalar(1.0)*_tmp13;
    const Scalar _tmp154 = x3 - 1;
    const Scalar _tmp155 = std::pow(x0, Scalar(2));
    const Scalar _tmp156 = _tmp29 - 4;
    const Scalar _tmp157 = _tmp140 + _tmp156;
    const Scalar _tmp158 = _tmp157*x4;
    const Scalar _tmp159 = Scalar(1.0) / (_tmp125);
    const Scalar _tmp160 = -_tmp159*x4 + x3;
    const Scalar _tmp161 = _tmp160*x4;
    const Scalar _tmp162 = _tmp100 - 1;
    const Scalar _tmp163 = 2*_tmp37;
    const Scalar _tmp164 = _tmp150*x1;
    const Scalar _tmp165 = x2 - 1;
    const Scalar _tmp166 = _tmp165*x4;
    const Scalar _tmp167 = _tmp166 + _tmp3;
    const Scalar _tmp168 = _tmp167*x4;
    const Scalar _tmp169 = _tmp84*x1;
    const Scalar _tmp170 = _tmp62 + x2;
    const Scalar _tmp171 = _tmp170 + 3;
    const Scalar _tmp172 = x0 - x1*(_tmp15 + Scalar(-1)/Scalar(2));
    const Scalar _tmp173 = _tmp35*x4;
    const Scalar _tmp174 = x1*x2;
    const Scalar _tmp175 = _tmp174*_tmp32;
    const Scalar _tmp176 = 8*_tmp65;
    const Scalar _tmp177 = std::pow(x2, Scalar(2));
    const Scalar _tmp178 = 2*_tmp130;
    const Scalar _tmp179 = Scalar(1.0) / (-_tmp178 + x0);
    const Scalar _tmp180 = 8*x3;
    const Scalar _tmp181 = _tmp125 + x0;
    const Scalar _tmp182 = _tmp130*x2;
    const Scalar _tmp183 = 2*_tmp150;
    const Scalar _tmp184 = -_tmp140;
    const Scalar _tmp185 = _tmp184 + x1;
    const Scalar _tmp186 = _tmp42*x2;
    const Scalar _tmp187 = _tmp186 + x0;
    const Scalar _tmp188 = _tmp29 - 6;
    const Scalar _tmp189 = x0*x2;
    const Scalar _tmp190 = _tmp189 + 2;
    const Scalar _tmp191 = _tmp190*_tmp44;
    const Scalar _tmp192 = _tmp5*x1;
    const Scalar _tmp193 = _tmp67 + _tmp94;
    const Scalar _tmp194 = _tmp8*x2;
    const Scalar _tmp195 = -x1;
    const Scalar _tmp196 = _tmp174 + _tmp195;
    const Scalar _tmp197 = _tmp18 + x2;
    const Scalar _tmp198 = _tmp197 - 3;
    const Scalar _tmp199 = _tmp47*x4;
    const Scalar _tmp200 = _tmp199 + x0;
    const Scalar _tmp201 = -_tmp26 + _tmp35 + x1;
    const Scalar _tmp202 = _tmp28 + x1;
    const Scalar _tmp203 = _tmp44*_tmp78;
    const Scalar _tmp204 = -_tmp18;
    const Scalar _tmp205 = 4*x3;
    const Scalar _tmp206 = _tmp205 + 8;
    const Scalar _tmp207 = _tmp204 + _tmp206;
    const Scalar _tmp208 = _tmp18 + 2;
    const Scalar _tmp209 = -_tmp47;
    const Scalar _tmp210 = _tmp178 + _tmp209 + 1;
    const Scalar _tmp211 = _tmp207*x2;
    const Scalar _tmp212 = _tmp2*x4;
    const Scalar _tmp213 = x0 - 1;
    const Scalar _tmp214 = x3*x4;
    const Scalar _tmp215 = x1 - 1;
    const Scalar _tmp216 = _tmp214 + _tmp215;
    const Scalar _tmp217 = _tmp140 + _tmp18;
    const Scalar _tmp218 = _tmp118 + _tmp4;
    const Scalar _tmp219 = (Scalar(1)/Scalar(2))*x3;
    const Scalar _tmp220 = _tmp219 + _tmp36;
    const Scalar _tmp221 = _tmp65*_tmp7 + x0;
    const Scalar _tmp222 = _tmp221*x2;
    const Scalar _tmp223 = _tmp218*x4;
    const Scalar _tmp224 = _tmp221*_tmp37;
    const Scalar _tmp225 = Scalar(1.0) / (_tmp100 - 4);
    const Scalar _tmp226 = _tmp36 + x0;
    const Scalar _tmp227 = _tmp26*_tmp97;
    const Scalar _tmp228 = _tmp226*_tmp227 + 1;
    const Scalar _tmp229 = 3*x0;
    const Scalar _tmp230 = _tmp229 - 8;
    const Scalar _tmp231 = _tmp55 + x2;
    const Scalar _tmp232 = _tmp209 + _tmp29;
    const Scalar _tmp233 = _tmp18*x4;
    const Scalar _tmp234 = _tmp23*_tmp233;
    const Scalar _tmp235 = _tmp131*x3;
    const Scalar _tmp236 = _tmp170 + x0;
    const Scalar _tmp237 = _tmp108 + x4;
    const Scalar _tmp238 = _tmp215*_tmp67;
    const Scalar _tmp239 = -_tmp148*_tmp7 + x2;
    const Scalar _tmp240 = _tmp97*x0;
    const Scalar _tmp241 = _tmp137*_tmp240;
    const Scalar _tmp242 = _tmp154*x0;
    const Scalar _tmp243 = -_tmp242 - 1;
    const Scalar _tmp244 = _tmp155*_tmp58;
    const Scalar _tmp245 = x3 + 3;
    const Scalar _tmp246 = _tmp148*x2;
    const Scalar _tmp247 = _tmp20 + 1;
    const Scalar _tmp248 = _tmp1 + _tmp107 + _tmp47;
    const Scalar _tmp249 = _tmp11*_tmp35;
    const Scalar _tmp250 = _tmp152*x1;
    const Scalar _tmp251 = _tmp154*x1;
    const Scalar _tmp252 = _tmp155*_tmp251;
    const Scalar _tmp253 = _tmp62 + _tmp65;
    const Scalar _tmp254 = _tmp32 + _tmp94;
    const Scalar _tmp255 = x3 + Scalar(-1.0);
    const Scalar _tmp256 = _tmp102*_tmp247;
    const Scalar _tmp257 = _tmp29 + 2;
    const Scalar _tmp258 = x0 + 2;
    const Scalar _tmp259 = -_tmp214 + _tmp258;
    const Scalar _tmp260 = _tmp154*x4;
    const Scalar _tmp261 = _tmp138 + _tmp18 + x3;
    const Scalar _tmp262 = _tmp26*_tmp35;
    const Scalar _tmp263 = _tmp100 + x3;
    const Scalar _tmp264 = _tmp174 + 1;
    const Scalar _tmp265 = _tmp29*_tmp37;
    const Scalar _tmp266 = _tmp13*x0;
    const Scalar _tmp267 = _tmp100 - 2;
    const Scalar _tmp268 = x3/_tmp102;
    const Scalar _tmp269 = _tmp20*x3;
    const Scalar _tmp270 = -_tmp100;
    const Scalar _tmp271 = _tmp125 + _tmp270;
    const Scalar _tmp272 = _tmp29*_tmp39;
    const Scalar _tmp273 = _tmp272 - 1;
    const Scalar _tmp274 = _tmp140 - 4;
    const Scalar _tmp275 = _tmp140 + 4;
    const Scalar _tmp276 = _tmp138 + _tmp275;
    const Scalar _tmp277 = _tmp39 + x4;
    const Scalar _tmp278 = _tmp29*x1;
    const Scalar _tmp279 = _tmp127 - _tmp278;
    const Scalar _tmp280 = _tmp213*x2 + _tmp36 + _tmp62 + 1;
    const Scalar _tmp281 = _tmp280*x4;
    const Scalar _tmp282 = _tmp279*x2;
    const Scalar _tmp283 = -_tmp13 + _tmp189;
    const Scalar _tmp284 = _tmp102 + _tmp195;
    const Scalar _tmp285 = _tmp284*_tmp37;
    const Scalar _tmp286 = 4*_tmp26;
    const Scalar _tmp287 = _tmp140*_tmp177 + _tmp184;
    const Scalar _tmp288 = _tmp100 + x4;
    const Scalar _tmp289 = _tmp275*_tmp58;
    const Scalar _tmp290 = _tmp29 - 1;
    const Scalar _tmp291 = _tmp266 + _tmp4;
    const Scalar _tmp292 = _tmp118*_tmp23 + _tmp4;
    const Scalar _tmp293 = _tmp1*x2;
    const Scalar _tmp294 = _tmp21*x4;
    const Scalar _tmp295 = _tmp174 - 3;
    const Scalar _tmp296 = _tmp185 + _tmp270 + 4;
    const Scalar _tmp297 = -2*_tmp137 + x4;
    const Scalar _tmp298 = 3*x2;
    const Scalar _tmp299 = _tmp298 + 4;
    const Scalar _tmp300 = Scalar(1.0) / (_tmp26 + _tmp4 + _tmp94 + x4);
    const Scalar _tmp301 = _tmp300*x2;
    const Scalar _tmp302 = _tmp4 + _tmp62;
    const Scalar _tmp303 = _tmp302 + _tmp70;
    const Scalar _tmp304 = _tmp245 + _tmp36;
    const Scalar _tmp305 = _tmp304*x1;
    const Scalar _tmp306 = _tmp154*_tmp174;
    const Scalar _tmp307 = _tmp36 + _tmp47;
    const Scalar _tmp308 = _tmp47 + 6;
    const Scalar _tmp309 = _tmp4 + x1;
    const Scalar _tmp310 = _tmp237*x3 + 1;
    const Scalar _tmp311 = _tmp58*x3;
    const Scalar _tmp312 = x2 + x4;
    const Scalar _tmp313 = _tmp312 + 3;
    const Scalar _tmp314 = _tmp127*x3;
    const Scalar _tmp315 = -_tmp314 + x0;
    const Scalar _tmp316 = _tmp313*x2;
    const Scalar _tmp317 = _tmp35*x1;
    const Scalar _tmp318 = Scalar(1.0) / (_tmp0 + _tmp63);
    const Scalar _tmp319 = _tmp154*_tmp78;
    const Scalar _tmp320 = _tmp137*x2;
    const Scalar _tmp321 = _tmp32*_tmp320;
    const Scalar _tmp322 = _tmp108 + 2;
    const Scalar _tmp323 = _tmp322*x4;
    const Scalar _tmp324 = _tmp102*x3;
    const Scalar _tmp325 = -_tmp324 + x2;
    const Scalar _tmp326 = _tmp325*x4;
    const Scalar _tmp327 = Scalar(1.0) / (_tmp140 + 1);
    const Scalar _tmp328 = _tmp214*_tmp327;
    const Scalar _tmp329 = 4*_tmp150;
    const Scalar _tmp330 = _tmp165*x3 + 1;
    const Scalar _tmp331 = _tmp150*_tmp330;
    const Scalar _tmp332 = _tmp274*x4;
    const Scalar _tmp333 = _tmp30 + x1;
    const Scalar _tmp334 = Scalar(4.0)*_tmp58;
    const Scalar _tmp335 = Scalar(2.0)*x2;
    const Scalar _tmp336 = Scalar(2.0)*x3;
    const Scalar _tmp337 = Scalar(4.0)*x1;
    const Scalar _tmp338 = Scalar(2.0)*x1;
    const Scalar _tmp339 = _tmp78 + x1;
    const Scalar _tmp340 = _tmp226*x2;
    const Scalar _tmp341 = _tmp266 + x3;
    const Scalar _tmp342 = _tmp189*x1;
    const Scalar _tmp343 = -_tmp342 + _tmp51;
    const Scalar _tmp344 = _tmp88 + _tmp94;
    const Scalar _tmp345 = _tmp102*x2;
    const Scalar _tmp346 = _tmp102*_tmp37;
    const Scalar _tmp347 = _tmp102*_tmp177;
    const Scalar _tmp348 = _tmp148*x1;
    const Scalar _tmp349 = _tmp148 + x2;
    const Scalar _tmp350 = 6*x1;
    const Scalar _tmp351 = _tmp1*_tmp7 + x1;
    const Scalar _tmp352 = x0 + 4;
    const Scalar _tmp353 = _tmp169 + _tmp4;
    const Scalar _tmp354 = _tmp352*x4;
    const Scalar _tmp355 = _tmp311 + x2;
    const Scalar _tmp356 = _tmp14*x0;
    const Scalar _tmp357 = _tmp106 + 2;
    const Scalar _tmp358 = -_tmp189;
    const Scalar _tmp359 = _tmp195 + _tmp51;
    const Scalar _tmp360 = _tmp37*x1;
    const Scalar _tmp361 = Scalar(1.0) / (_tmp360 + x2);
    const Scalar _tmp362 = -_tmp233;
    const Scalar _tmp363 = _tmp362 + x0;
    const Scalar _tmp364 = _tmp47 + x2;
    const Scalar _tmp365 = _tmp364*x3;
    const Scalar _tmp366 = _tmp214*_tmp364;
    const Scalar _tmp367 = _tmp364*_tmp65;
    const Scalar _tmp368 = _tmp85 + 1;
    const Scalar _tmp369 = _tmp115*_tmp26;
    const Scalar _tmp370 = _tmp18 + _tmp36;
    const Scalar _tmp371 = _tmp11 + _tmp370;
    const Scalar _tmp372 = 4*x0;
    const Scalar _tmp373 = _tmp13*_tmp372;
    const Scalar _tmp374 = 4*_tmp177;
    const Scalar _tmp375 = [&]() { const Scalar base = x0; return base * base * base; }();
    const Scalar _tmp376 = x1 + Scalar(1.0);
    const Scalar _tmp377 = _tmp376*_tmp8;
    const Scalar _tmp378 = 2*_tmp377;
    const Scalar _tmp379 = _tmp70*x4;
    const Scalar _tmp380 = x1 + 1;
    const Scalar _tmp381 = _tmp26 + _tmp380;
    const Scalar _tmp382 = _tmp18 + _tmp184;
    const Scalar _tmp383 = _tmp29*x4;
    const Scalar _tmp384 = _tmp383*_tmp58;
    const Scalar _tmp385 = -_tmp384;
    const Scalar _tmp386 = x0 - 12;
    const Scalar _tmp387 = _tmp11*_tmp37;
    const Scalar _tmp388 = _tmp108 + _tmp163;
    const Scalar _tmp389 = _tmp28*(_tmp78 + 1);
    const Scalar _tmp390 = _tmp209 + _tmp21;
    const Scalar _tmp391 = Scalar(0.5)*x0;
    const Scalar _tmp392 = -_tmp147;
    const Scalar _tmp393 = x2 + Scalar(1.0) / (_tmp150 + 1);
    const Scalar _tmp394 = _tmp320 - 1;
    const Scalar _tmp395 = x0 + 5;
    const Scalar _tmp396 = _tmp154*x3;
    const Scalar _tmp397 = _tmp122*_tmp214;
    const Scalar _tmp398 = _tmp100 + x0 - 5;
    const Scalar _tmp399 = _tmp63*x1 + x1;
    const Scalar _tmp400 = -_tmp110*x3 + _tmp380;
    const Scalar _tmp401 = Scalar(1.0) / (_tmp122);
    const Scalar _tmp402 = _tmp401*x0;
    const Scalar _tmp403 = x1 + 3;
    const Scalar _tmp404 = _tmp28*_tmp44 + x3;
    const Scalar _tmp405 = _tmp20 + 2;
    const Scalar _tmp406 = _tmp13*_tmp405;
    const Scalar _tmp407 = _tmp380*x4 + x4;
    const Scalar _tmp408 = _tmp100 + _tmp35;
    const Scalar _tmp409 = _tmp258 - _tmp92;
    const Scalar _tmp410 = (Scalar(1)/Scalar(2))*x0;
    const Scalar _tmp411 = _tmp410 + (Scalar(3)/Scalar(2))*x4;
    const Scalar _tmp412 = _tmp105*x1;
    const Scalar _tmp413 = x0 + x2;
    const Scalar _tmp414 = _tmp413*_tmp63;
    const Scalar _tmp415 = _tmp414*x0;
    const Scalar _tmp416 = _tmp257 + _tmp4;
    const Scalar _tmp417 = _tmp0*x0 + _tmp4;
    const Scalar _tmp418 = Scalar(1.0) / (_tmp148);
    const Scalar _tmp419 = _tmp215*_tmp29;
    const Scalar _tmp420 = _tmp382 + x3;
    const Scalar _tmp421 = _tmp215*x1;
    const Scalar _tmp422 = _tmp348 + _tmp62;
    const Scalar _tmp423 = _tmp47*_tmp67;
    const Scalar _tmp424 = 3*x3;
    const Scalar _tmp425 = Scalar(1.0) / (_tmp39);
    const Scalar _tmp426 = _tmp107*_tmp425;
    const Scalar _tmp427 = 4*x4;
    const Scalar _tmp428 = _tmp427 - 8;
    const Scalar _tmp429 = _tmp154*_tmp65;
    const Scalar _tmp430 = _tmp23 + x4;
    const Scalar _tmp431 = Scalar(2.0)*x0;
    const Scalar _tmp432 = _tmp155*x3;
    const Scalar _tmp433 = _tmp37*_tmp44;
    const Scalar _tmp434 = _tmp21 + _tmp433;
    const Scalar _tmp435 = _tmp21*_tmp227;
    const Scalar _tmp436 = _tmp215*(x1 - 4);
    const Scalar _tmp437 = -_tmp100*_tmp121 - 4;
    const Scalar _tmp438 = _tmp177 + _tmp358 + x3;
    const Scalar _tmp439 = _tmp278 + _tmp62;
    const Scalar _tmp440 = _tmp59 + _tmp62;
    const Scalar _tmp441 = _tmp81*x3;
    const Scalar _tmp442 = _tmp214*_tmp23;
    const Scalar _tmp443 = _tmp127 + _tmp18;
    const Scalar _tmp444 = _tmp62 + x0;
    const Scalar _tmp445 = _tmp26*_tmp52;
    const Scalar _tmp446 = _tmp110*x4 + _tmp70;
    const Scalar _tmp447 = -_tmp77*x1 + x0;
    const Scalar _tmp448 = _tmp444*x0;
    const Scalar _tmp449 = _tmp1*x0;
    const Scalar _tmp450 = _tmp29*_tmp78;
    const Scalar _tmp451 = _tmp214 + _tmp36 + 2;
    const Scalar _tmp452 = _tmp155*_tmp444;
    const Scalar _tmp453 = _tmp35 + x2;
    const Scalar _tmp454 = _tmp36 + x1;
    const Scalar _tmp455 = _tmp18 + _tmp29 + 4;
    const Scalar _tmp456 = _tmp197*x3 + x3;
    const Scalar _tmp457 = _tmp456*x4;
    const Scalar _tmp458 = _tmp225*x0;
    const Scalar _tmp459 = _tmp195 + x0;
    const Scalar _tmp460 = 4 - _tmp427;
    const Scalar _tmp461 = _tmp459*x1;
    const Scalar _tmp462 = _tmp140 - 2;
    const Scalar _tmp463 = Scalar(1.0)*_tmp135;
    const Scalar _tmp464 = _tmp102*_tmp462;
    const Scalar _tmp465 = _tmp4 + x3;
    const Scalar _tmp466 = _tmp465 + Scalar(1.0);
    const Scalar _tmp467 = _tmp171*_tmp44;
    const Scalar _tmp468 = _tmp36 + _tmp432;
    const Scalar _tmp469 = _tmp179*x2;
    const Scalar _tmp470 = _tmp110 + _tmp62;
    const Scalar _tmp471 = _tmp13*_tmp23*_tmp84;
    const Scalar _tmp472 = _tmp115*x0;
    const Scalar _tmp473 = 8*_tmp155;
    const Scalar _tmp474 = _tmp94 + 2;
    const Scalar _tmp475 = _tmp174 + _tmp474;
    const Scalar _tmp476 = _tmp52*x3;
    const Scalar _tmp477 = -_tmp195 - _tmp50;
    const Scalar _tmp478 = _tmp44*_tmp81;
    const Scalar _tmp479 = _tmp478*_tmp84;
    const Scalar _tmp480 = _tmp23*_tmp450;
    const Scalar _tmp481 = _tmp229 + 2;
    const Scalar _tmp482 = _tmp118*x0 + x0;
    const Scalar _tmp483 = _tmp18*_tmp37;
    const Scalar _tmp484 = _tmp309*x2;
    const Scalar _tmp485 = _tmp13*_tmp154;
    const Scalar _tmp486 = _tmp1 + _tmp36;
    const Scalar _tmp487 = _tmp13 + 3;
    const Scalar _tmp488 = _tmp67*x1;
    const Scalar _tmp489 = 4*_tmp78;
    const Scalar _tmp490 = Scalar(1.0) / (_tmp312);
    const Scalar _tmp491 = _tmp21*_tmp490;
    const Scalar _tmp492 = _tmp140*_tmp5;
    const Scalar _tmp493 = _tmp339*x1;
    const Scalar _tmp494 = _tmp294*_tmp490;
    const Scalar _tmp495 = _tmp150*_tmp18;
    const Scalar _tmp496 = _tmp150*x0;
    const Scalar _tmp497 = 5*x3;
    const Scalar _tmp498 = _tmp496 + 2;
    const Scalar _tmp499 = -_tmp312*x3 + 1;
    const Scalar _tmp500 = _tmp498*x1;
    const Scalar _tmp501 = 5*x0;
    const Scalar _tmp502 = 5*x4;
    const Scalar _tmp503 = _tmp134*x4;
    const Scalar _tmp504 = _tmp148*_tmp84;
    const Scalar _tmp505 = _tmp78 + 2;
    const Scalar _tmp506 = _tmp164*_tmp44;
    const Scalar _tmp507 = _tmp18*_tmp312;
    const Scalar _tmp508 = _tmp361*x4;
    const Scalar _tmp509 = _tmp170*_tmp3;
    const Scalar _tmp510 = _tmp155*_tmp78;
    const Scalar _tmp511 = _tmp155*x1;
    const Scalar _tmp512 = _tmp134*_tmp511;
    const Scalar _tmp513 = [&]() { const Scalar base = x1; return base * base * base; }();
    const Scalar _tmp514 = _tmp155*x4;
    const Scalar _tmp515 = _tmp134*_tmp47;
    const Scalar _tmp516 = _tmp3 + _tmp421;
    const Scalar _tmp517 = _tmp339*x3;
    const Scalar _tmp518 = _tmp517 + _tmp62;
    const Scalar _tmp519 = _tmp18*_tmp518;
    const Scalar _tmp520 = _tmp386*x2;
    const Scalar _tmp521 = _tmp29 + x3;
    const Scalar _tmp522 = _tmp258*_tmp5;
    const Scalar _tmp523 = _tmp521*x1;
    const Scalar _tmp524 = _tmp522*x3;
    const Scalar _tmp525 = _tmp13*x4;
    const Scalar _tmp526 = _tmp522*_tmp525;
    const Scalar _tmp527 = _tmp18 - 2;
    const Scalar _tmp528 = _tmp140 + _tmp32;
    const Scalar _tmp529 = _tmp528*x3;
    const Scalar _tmp530 = _tmp527*x1;
    const Scalar _tmp531 = _tmp26*_tmp401;
    const Scalar _tmp532 = _tmp130*_tmp405*x1;
    const Scalar _tmp533 = _tmp52*x1;
    const Scalar _tmp534 = _tmp380*x1;
    const Scalar _tmp535 = _tmp3 + x4;
    const Scalar _tmp536 = 8*x0;
    const Scalar _tmp537 = _tmp127*_tmp97;
    const Scalar _tmp538 = _tmp35*_tmp67;
    const Scalar _tmp539 = _tmp127*x1;
    const Scalar _tmp540 = _tmp535*_tmp78;
    const Scalar _tmp541 = _tmp35*x3;
    const Scalar _tmp542 = _tmp266 + 1;
    const Scalar _tmp543 = _tmp383 + x0;
    const Scalar _tmp544 = _tmp29 + x4;
    const Scalar _tmp545 = _tmp542*x0;
    const Scalar _tmp546 = _tmp29*x2;
    const Scalar _tmp547 = _tmp169*_tmp542;
    const Scalar _tmp548 = _tmp81 + x3;
    const Scalar _tmp549 = 4*_tmp23;
    const Scalar _tmp550 = _tmp240 + _tmp36;
    const Scalar _tmp551 = -_tmp23*x3 + Scalar(2.0);
    const Scalar _tmp552 = -_tmp63*x4 + 2;
    const Scalar _tmp553 = _tmp525 + 2;
    const Scalar _tmp554 = _tmp28 + _tmp51;
    const Scalar _tmp555 = _tmp28*x3;
    const Scalar _tmp556 = Scalar(1.0) / (_tmp26 + 1);
    const Scalar _tmp557 = _tmp81 + _tmp94;
    const Scalar _tmp558 = -_tmp556 + x1;
    const Scalar _tmp559 = _tmp213*x3;
    const Scalar _tmp560 = 4*_tmp137;
    const Scalar _tmp561 = _tmp37*x0;
    const Scalar _tmp562 = _tmp561 - 2;
    const Scalar _tmp563 = _tmp270 + _tmp29;
    const Scalar _tmp564 = _tmp102*_tmp562;
    const Scalar _tmp565 = _tmp330*x4;
    const Scalar _tmp566 = _tmp125*_tmp7 + _tmp413;
    const Scalar _tmp567 = _tmp474 + _tmp82;
    const Scalar _tmp568 = _tmp189 + _tmp62;
    const Scalar _tmp569 = _tmp125 + _tmp36;
    const Scalar _tmp570 = _tmp127*_tmp215;
    const Scalar _tmp571 = _tmp3*x4;
    const Scalar _tmp572 = _tmp21 + _tmp302;
    const Scalar _tmp573 = _tmp489 + 4;
    const Scalar _tmp574 = _tmp573*x0;
    const Scalar _tmp575 = _tmp134*x3 + _tmp36;
    const Scalar _tmp576 = _tmp102*_tmp255;
    const Scalar _tmp577 = _tmp174 + _tmp184 + _tmp29;
    const Scalar _tmp578 = _tmp215*_tmp58;
    const Scalar _tmp579 = _tmp35*x0;
    const Scalar _tmp580 = _tmp213*_tmp84;
    const Scalar _tmp581 = _tmp107*_tmp375;
    const Scalar _tmp582 = _tmp122 + (Scalar(1)/Scalar(2))*_tmp58;
    const Scalar _tmp583 = _tmp28/_tmp309;
    const Scalar _tmp584 = _tmp112 + x0;
    const Scalar _tmp585 = _tmp18*_tmp584;
    const Scalar _tmp586 = Scalar(1.5)*x0;
    const Scalar _tmp587 = (Scalar(1)/Scalar(4))*x2;
    const Scalar _tmp588 = x4 - 4;
    const Scalar _tmp589 = _tmp100 + _tmp18;
    const Scalar _tmp590 = _tmp589*x3;
    const Scalar _tmp591 = Scalar(1.0)*x2;
    const Scalar _tmp592 = _tmp70 + x2;
    const Scalar _tmp593 = _tmp213 + _tmp219;
    const Scalar _tmp594 = _tmp1*_tmp140;
    const Scalar _tmp595 = _tmp29*_tmp97;
    const Scalar _tmp596 = _tmp72 + 4;
    const Scalar _tmp597 = _tmp18 - 4;
    const Scalar _tmp598 = _tmp597*x2;
    const Scalar _tmp599 = _tmp102*_tmp150;
    const Scalar _tmp600 = 2*_tmp425;
    const Scalar _tmp601 = _tmp28*_tmp571;
    const Scalar _tmp602 = _tmp102 + _tmp65;
    const Scalar _tmp603 = _tmp602*x2;
    const Scalar _tmp604 = _tmp548*x3;
    const Scalar _tmp605 = _tmp28*_tmp3;
    const Scalar _tmp606 = _tmp189 + x1 + x3;
    const Scalar _tmp607 = _tmp40*x2 + _tmp62;
    const Scalar _tmp608 = _tmp214 - 2;
    const Scalar _tmp609 = _tmp208*x2;
    const Scalar _tmp610 = _tmp208*_tmp7;
    const Scalar _tmp611 = _tmp137*_tmp29;
    const Scalar _tmp612 = Scalar(1.0) / (_tmp13 - 2);
    const Scalar _tmp613 = _tmp612*x3;
    const Scalar _tmp614 = _tmp155*x2;
    const Scalar _tmp615 = _tmp36 + _tmp67;
    const Scalar _tmp616 = _tmp127*x0;
    const Scalar _tmp617 = _tmp615*x4;
    const Scalar _tmp618 = _tmp28 + x4*(_tmp270 + x1);
    const Scalar _tmp619 = _tmp101*x0;
    const Scalar _tmp620 = _tmp18 - 1;
    const Scalar _tmp621 = _tmp44*_tmp97;
    const Scalar _tmp622 = 3*_tmp621;
    const Scalar _tmp623 = _tmp105 + x0;
    const Scalar _tmp624 = _tmp559 + x3;
    const Scalar _tmp625 = x4 + Scalar(-0.5);
    const Scalar _tmp626 = _tmp174 + x4;
    const Scalar _tmp627 = _tmp26 + x1;
    const Scalar _tmp628 = 3*x4;
    const Scalar _tmp629 = _tmp140 - 1;
    const Scalar _tmp630 = _tmp312*_tmp629 + 1;
    const Scalar _tmp631 = _tmp0 + x3;
    const Scalar _tmp632 = _tmp42*_tmp631;
    const Scalar _tmp633 = 2*_tmp632;
    const Scalar _tmp634 = _tmp148 + x3;
    const Scalar _tmp635 = _tmp372*_tmp634;
    const Scalar _tmp636 = _tmp195 + _tmp462*x1;
    const Scalar _tmp637 = std::pow(_tmp39, Scalar(2)) - 2;
    const Scalar _tmp638 = _tmp137 + _tmp94 + 1;
    const Scalar _tmp639 = _tmp0 + _tmp195;
    const Scalar _tmp640 = _tmp47*_tmp97;
    const Scalar _tmp641 = _tmp177*x1;
    const Scalar _tmp642 = _tmp67*x2;
    const Scalar _tmp643 = _tmp213*_tmp78;
    const Scalar _tmp644 = _tmp107*_tmp155;
    const Scalar _tmp645 = _tmp127*_tmp32;
    const Scalar _tmp646 = _tmp11 + _tmp645;
    const Scalar _tmp647 = _tmp82 + x2;
    const Scalar _tmp648 = _tmp647*x0;
    const Scalar _tmp649 = x2 + 2/_tmp154;
    const Scalar _tmp650 = _tmp649*x4;
    const Scalar _tmp651 = _tmp278*_tmp647;
    const Scalar _tmp652 = _tmp465 + 4;
    const Scalar _tmp653 = _tmp110 + _tmp174 + x2;
    const Scalar _tmp654 = _tmp127 - _tmp65;
    const Scalar _tmp655 = _tmp140 + x3 + 6;
    const Scalar _tmp656 = _tmp655*x2;
    const Scalar _tmp657 = _tmp18*_tmp654;
    const Scalar _tmp658 = (Scalar(1)/Scalar(4))*_tmp44;
    const Scalar _tmp659 = _tmp174 + _tmp62;
    const Scalar _tmp660 = _tmp118*_tmp44;
    const Scalar _tmp661 = _tmp3*x2;
    const Scalar _tmp662 = _tmp137*(_tmp65 + x2);
    const Scalar _tmp663 = 2 - _tmp662;
    const Scalar _tmp664 = _tmp312*_tmp47;
    const Scalar _tmp665 = _tmp112 + _tmp67;
    const Scalar _tmp666 = _tmp214 - 1;
    const Scalar _tmp667 = _tmp666*x2;
    const Scalar _tmp668 = _tmp122*x2;
    const Scalar _tmp669 = _tmp154*_tmp44;

    // Output terms (1)
    static constexpr int kRows_result = 84;
    static constexpr int kCols_result = 84;
    static constexpr int kNumNonZero_result = 1542;
    static constexpr int kColPtrs_result[] = {0, 19, 38, 57, 76, 95, 114, 133, 151, 169, 188, 207, 226, 245, 264, 283, 302, 321, 340, 359, 378, 397, 416, 435, 454, 473, 492, 505, 524, 543, 561, 580, 599, 618, 625, 644, 663, 682, 701, 720, 739, 758, 777, 796, 809, 828, 847, 866, 885, 904, 921, 939, 957, 975, 993, 1011, 1029, 1047, 1066, 1085, 1104, 1123, 1142, 1155, 1174, 1193, 1212, 1231, 1250, 1269, 1288, 1307, 1326, 1345, 1364, 1383, 1402, 1421, 1434, 1453, 1466, 1485, 1504, 1523, 1542};
    static constexpr int kRowIndices_result[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 13, 14, 15, 16, 17, 28, 34, 35, 36, 37, 38, 0, 1, 2, 3, 4, 5, 6, 8, 13, 18, 19, 20, 21, 29, 34, 39, 40, 41, 42, 0, 1, 2, 3, 4, 5, 6, 9, 14, 18, 22, 23, 24, 30, 35, 39, 43, 44, 45, 0, 1, 2, 3, 4, 5, 6, 10, 15, 19, 22, 25, 26, 31, 36, 40, 43, 46, 47, 0, 1, 2, 3, 4, 5, 6, 11, 16, 20, 23, 25, 27, 32, 37, 41, 44, 46, 48, 0, 1, 2, 3, 4, 5, 6, 12, 17, 21, 24, 26, 27, 33, 38, 42, 45, 47, 48, 0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 49, 50, 51, 52, 53, 0, 2, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 21, 29, 49, 54, 55, 56, 0, 3, 7, 8, 9, 10, 11, 12, 14, 18, 22, 23, 24, 30, 50, 54, 58, 59, 60, 0, 4, 7, 8, 9, 10, 11, 12, 15, 19, 22, 25, 26, 31, 51, 55, 58, 61, 62, 0, 5, 7, 8, 9, 10, 11, 12, 16, 20, 23, 25, 27, 32, 52, 56, 59, 61, 63, 0, 6, 7, 8, 9, 10, 11, 12, 17, 21, 24, 26, 27, 33, 53, 57, 60, 62, 63, 1, 2, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 34, 49, 64, 65, 66, 67, 1, 3, 7, 9, 13, 14, 15, 16, 17, 18, 22, 23, 24, 35, 50, 64, 68, 69, 70, 1, 4, 7, 10, 13, 14, 15, 16, 17, 19, 22, 25, 26, 36, 51, 65, 68, 71, 72, 1, 5, 7, 11, 13, 14, 15, 16, 17, 20, 23, 25, 27, 37, 52, 66, 69, 71, 73, 1, 6, 7, 12, 13, 14, 15, 16, 17, 21, 24, 26, 27, 38, 53, 67, 70, 72, 73, 2, 3, 8, 9, 13, 14, 18, 19, 20, 21, 22, 23, 24, 39, 54, 64, 74, 75, 76, 2, 4, 8, 10, 13, 15, 18, 19, 20, 21, 22, 25, 26, 40, 55, 65, 74, 77, 78, 2, 5, 8, 11, 13, 16, 18, 19, 20, 21, 23, 25, 27, 41, 56, 66, 75, 77, 79, 2, 6, 8, 12, 13, 17, 18, 19, 20, 21, 24, 26, 27, 42, 57, 67, 76, 78, 79, 3, 4, 9, 10, 14, 15, 18, 19, 22, 23, 24, 25, 26, 43, 58, 68, 74, 80, 81, 3, 5, 9, 11, 14, 16, 18, 20, 22, 23, 24, 25, 27, 44, 59, 69, 75, 80, 82, 3, 6, 9, 12, 14, 17, 18, 21, 22, 23, 24, 26, 27, 45, 60, 70, 76, 81, 82, 4, 5, 10, 11, 15, 16, 19, 20, 22, 23, 25, 26, 27, 46, 61, 71, 77, 80, 83, 4, 6, 10, 12, 15, 17, 19, 21, 22, 24, 25, 26, 27, 5, 6, 11, 12, 16, 17, 20, 21, 23, 24, 25, 26, 27, 48, 63, 73, 79, 82, 83, 0, 1, 7, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 49, 50, 51, 52, 53, 0, 2, 8, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 49, 54, 55, 56, 0, 3, 9, 28, 29, 30, 31, 32, 33, 35, 39, 43, 44, 45, 50, 54, 58, 59, 60, 0, 4, 10, 28, 29, 30, 31, 32, 33, 36, 40, 43, 46, 47, 51, 55, 58, 61, 62, 0, 5, 11, 28, 29, 30, 31, 32, 33, 37, 41, 44, 46, 48, 52, 56, 59, 61, 63, 12, 33, 53, 57, 60, 62, 63, 1, 2, 13, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 64, 65, 66, 67, 1, 3, 14, 28, 30, 34, 35, 36, 37, 38, 39, 43, 44, 45, 50, 64, 68, 69, 70, 1, 4, 15, 28, 31, 34, 35, 36, 37, 38, 40, 43, 46, 47, 51, 65, 68, 71, 72, 1, 5, 16, 28, 32, 34, 35, 36, 37, 38, 41, 44, 46, 48, 52, 66, 69, 71, 73, 1, 6, 17, 28, 33, 34, 35, 36, 37, 38, 42, 45, 47, 48, 53, 67, 70, 72, 73, 2, 3, 18, 29, 30, 34, 35, 39, 40, 41, 42, 43, 44, 45, 54, 64, 74, 75, 76, 2, 4, 19, 29, 31, 34, 36, 39, 40, 41, 42, 43, 46, 47, 55, 65, 74, 77, 78, 2, 5, 20, 29, 32, 34, 37, 39, 40, 41, 42, 44, 46, 48, 56, 66, 75, 77, 79, 2, 6, 21, 29, 33, 34, 38, 39, 40, 41, 42, 45, 47, 48, 57, 67, 76, 78, 79, 3, 4, 30, 31, 35, 36, 39, 40, 43, 44, 45, 46, 47, 3, 5, 23, 30, 32, 35, 37, 39, 41, 43, 44, 45, 46, 48, 59, 69, 75, 80, 82, 3, 6, 24, 30, 33, 35, 38, 39, 42, 43, 44, 45, 47, 48, 60, 70, 76, 81, 82, 4, 5, 25, 31, 32, 36, 37, 40, 41, 43, 44, 46, 47, 48, 61, 71, 77, 80, 83, 4, 6, 26, 31, 33, 36, 38, 40, 42, 43, 45, 46, 47, 48, 62, 72, 78, 81, 83, 5, 6, 27, 32, 33, 37, 38, 41, 42, 44, 45, 46, 47, 48, 63, 73, 79, 82, 83, 7, 8, 13, 29, 34, 49, 50, 51, 52, 53, 54, 55, 56, 64, 65, 66, 67, 7, 9, 14, 30, 35, 49, 50, 51, 52, 53, 54, 58, 59, 60, 64, 68, 69, 70, 7, 10, 15, 31, 36, 49, 50, 51, 52, 53, 55, 58, 61, 62, 65, 68, 71, 72, 7, 11, 16, 32, 37, 49, 50, 51, 52, 53, 56, 59, 61, 63, 66, 69, 71, 73, 7, 12, 17, 33, 38, 49, 50, 51, 52, 53, 57, 60, 62, 63, 67, 70, 72, 73, 8, 9, 18, 29, 30, 39, 49, 50, 54, 55, 56, 58, 59, 60, 64, 74, 75, 76, 8, 10, 19, 29, 31, 40, 49, 51, 54, 55, 56, 58, 61, 62, 65, 74, 77, 78, 8, 11, 20, 29, 32, 41, 49, 52, 54, 55, 56, 59, 61, 63, 66, 75, 77, 79, 8, 12, 21, 29, 33, 42, 49, 53, 54, 55, 56, 57, 60, 62, 63, 67, 76, 78, 79, 9, 10, 22, 30, 31, 43, 50, 51, 54, 55, 58, 59, 60, 61, 62, 68, 74, 80, 81, 9, 11, 23, 30, 32, 44, 50, 52, 54, 56, 58, 59, 60, 61, 63, 69, 75, 80, 82, 9, 12, 24, 30, 33, 45, 50, 53, 54, 57, 58, 59, 60, 62, 63, 70, 76, 81, 82, 10, 11, 25, 31, 32, 46, 51, 52, 55, 56, 58, 59, 61, 62, 63, 71, 77, 80, 83, 10, 26, 31, 47, 51, 55, 58, 61, 62, 72, 78, 81, 83, 11, 12, 27, 32, 33, 48, 52, 53, 56, 57, 59, 60, 61, 62, 63, 73, 79, 82, 83, 13, 14, 18, 34, 35, 39, 49, 50, 54, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 13, 15, 19, 34, 36, 40, 49, 51, 55, 64, 65, 66, 67, 68, 71, 72, 74, 77, 78, 13, 16, 20, 34, 37, 41, 49, 52, 56, 64, 65, 66, 67, 69, 71, 73, 75, 77, 79, 13, 17, 21, 34, 38, 42, 49, 53, 57, 64, 65, 66, 67, 70, 72, 73, 76, 78, 79, 14, 15, 22, 35, 36, 43, 50, 51, 58, 64, 65, 68, 69, 70, 71, 72, 74, 80, 81, 14, 16, 23, 35, 37, 44, 50, 52, 59, 64, 66, 68, 69, 70, 71, 73, 75, 80, 82, 14, 17, 24, 35, 38, 45, 50, 53, 60, 64, 67, 68, 69, 70, 72, 73, 76, 81, 82, 15, 16, 25, 36, 37, 46, 51, 52, 61, 65, 66, 68, 69, 71, 72, 73, 77, 80, 83, 15, 17, 26, 36, 38, 47, 51, 53, 62, 65, 67, 68, 70, 71, 72, 73, 78, 81, 83, 16, 17, 27, 37, 38, 48, 52, 53, 63, 66, 67, 69, 70, 71, 72, 73, 79, 82, 83, 18, 19, 22, 39, 40, 43, 54, 55, 58, 64, 65, 68, 74, 75, 76, 77, 78, 80, 81, 18, 20, 23, 39, 41, 44, 54, 56, 59, 64, 66, 69, 74, 75, 76, 77, 79, 80, 82, 18, 21, 24, 39, 42, 45, 54, 57, 60, 64, 67, 70, 74, 75, 76, 78, 79, 81, 82, 19, 20, 40, 41, 55, 56, 65, 66, 74, 75, 77, 78, 79, 19, 21, 26, 40, 42, 47, 55, 57, 62, 65, 67, 72, 74, 76, 77, 78, 79, 81, 83, 21, 27, 42, 48, 57, 63, 67, 73, 76, 78, 79, 82, 83, 22, 23, 25, 43, 44, 46, 58, 59, 61, 68, 69, 71, 74, 75, 77, 80, 81, 82, 83, 22, 24, 26, 43, 45, 47, 58, 60, 62, 68, 70, 72, 74, 76, 78, 80, 81, 82, 83, 23, 24, 27, 44, 45, 48, 59, 60, 63, 69, 70, 73, 75, 76, 79, 80, 81, 82, 83, 25, 26, 27, 46, 47, 48, 61, 62, 63, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83};
    Scalar result_empty_value_ptr[1542];
    Eigen::SparseMatrix<Scalar> result = Eigen::Map<const Eigen::SparseMatrix<Scalar>>(
        kRows_result,
        kCols_result,
        kNumNonZero_result,
        kColPtrs_result,
        kRowIndices_result,
        result_empty_value_ptr
    );
    Scalar* result_value_ptr = result.valuePtr();


    result_value_ptr[0] = _tmp0*_tmp2 + _tmp10*_tmp12 + _tmp3*_tmp6;
    result_value_ptr[1] = _tmp13*_tmp2;
    result_value_ptr[2] = -_tmp17*_tmp2;
    result_value_ptr[3] = _tmp19*_tmp2;
    result_value_ptr[4] = -_tmp2*_tmp22;
    result_value_ptr[5] = -_tmp2*_tmp25;
    result_value_ptr[6] = -_tmp2*_tmp27;
    result_value_ptr[7] = -_tmp10*_tmp28;
    result_value_ptr[8] = -_tmp10*_tmp31;
    result_value_ptr[9] = _tmp10*_tmp34;
    result_value_ptr[10] = -_tmp0*_tmp10;
    result_value_ptr[11] = _tmp10*_tmp35;
    result_value_ptr[12] = -_tmp10*_tmp38;
    result_value_ptr[13] = -_tmp3*_tmp41;
    result_value_ptr[14] = -_tmp3*_tmp43;
    result_value_ptr[15] = _tmp3*_tmp46;
    result_value_ptr[16] = -_tmp3*_tmp48;
    result_value_ptr[17] = -_tmp3*_tmp49;
    result_value_ptr[18] = _tmp1*_tmp50;
    result_value_ptr[19] = -_tmp0*_tmp1;
    result_value_ptr[20] = -_tmp1*_tmp13 + _tmp52*_tmp53 - _tmp54*_tmp57;
    result_value_ptr[21] = _tmp1*_tmp17;
    result_value_ptr[22] = -_tmp1*_tmp19;
    result_value_ptr[23] = _tmp1*_tmp22;
    result_value_ptr[24] = _tmp1*_tmp25;
    result_value_ptr[25] = _tmp1*_tmp27;
    result_value_ptr[26] = -_tmp54*_tmp61;
    result_value_ptr[27] = -_tmp54*_tmp66;
    result_value_ptr[28] = -_tmp54*_tmp69;
    result_value_ptr[29] = _tmp54*_tmp71;
    result_value_ptr[30] = _tmp54*_tmp72;
    result_value_ptr[31] = -_tmp54*_tmp75;
    result_value_ptr[32] = -_tmp76 + 6*_tmp77*x1;
    result_value_ptr[33] = -12*_tmp78;
    result_value_ptr[34] = _tmp79*x3 + _tmp80;
    result_value_ptr[35] = _tmp76*_tmp83;
    result_value_ptr[36] = -12*_tmp86;
    result_value_ptr[37] = -_tmp53 - _tmp87 - 6;
    result_value_ptr[38] = -_tmp0*_tmp88;
    result_value_ptr[39] = -_tmp13*_tmp88;
    result_value_ptr[40] = _tmp17*_tmp88 + _tmp58*_tmp91 + _tmp93*_tmp96;
    result_value_ptr[41] = -_tmp19*_tmp88;
    result_value_ptr[42] = _tmp22*_tmp88;
    result_value_ptr[43] = _tmp25*_tmp88;
    result_value_ptr[44] = _tmp27*_tmp88;
    result_value_ptr[45] = _tmp93*_tmp98;
    result_value_ptr[46] = _tmp99;
    result_value_ptr[47] = -_tmp101*_tmp99;
    result_value_ptr[48] = _tmp104*_tmp93;
    result_value_ptr[49] = -_tmp0*_tmp93;
    result_value_ptr[50] = -_tmp106*_tmp93;
    result_value_ptr[51] = _tmp109*_tmp58;
    result_value_ptr[52] = _tmp111*_tmp58;
    result_value_ptr[53] = _tmp114*_tmp58;
    result_value_ptr[54] = _tmp116*_tmp58;
    result_value_ptr[55] = -_tmp117*_tmp58;
    result_value_ptr[56] = _tmp39*_tmp58;
    result_value_ptr[57] = _tmp0*_tmp119;
    result_value_ptr[58] = _tmp119*_tmp13;
    result_value_ptr[59] = -_tmp119*_tmp17;
    result_value_ptr[60] = _tmp119*_tmp19 + _tmp120*x3 - _tmp121*_tmp123;
    result_value_ptr[61] = -_tmp119*_tmp22;
    result_value_ptr[62] = -_tmp119*_tmp25;
    result_value_ptr[63] = -_tmp119*_tmp27;
    result_value_ptr[64] = -_tmp115*x3;
    result_value_ptr[65] = -_tmp124*_tmp23;
    result_value_ptr[66] = -_tmp126*x3;
    result_value_ptr[67] = _tmp129*x3;
    result_value_ptr[68] = _tmp130*_tmp131;
    result_value_ptr[69] = _tmp37*x3;
    result_value_ptr[70] = _tmp132*_tmp133;
    result_value_ptr[71] = _tmp133*x4;
    result_value_ptr[72] = _tmp122*_tmp135*_tmp136;
    result_value_ptr[73] = -_tmp123*_tmp125;
    result_value_ptr[74] = _tmp133*_tmp137;
    result_value_ptr[75] = _tmp123*_tmp139;
    result_value_ptr[76] = _tmp141;
    result_value_ptr[77] = _tmp72;
    result_value_ptr[78] = -_tmp140*_tmp16;
    result_value_ptr[79] = -_tmp1*_tmp142 + _tmp143;
    result_value_ptr[80] = _tmp144 - _tmp146*_tmp147 - 2*_tmp22;
    result_value_ptr[81] = 2 - 2*_tmp24;
    result_value_ptr[82] = -_tmp26 - _tmp36;
    result_value_ptr[83] = Scalar(1.0)*_tmp148*_tmp65;
    result_value_ptr[84] = -_tmp147*_tmp149;
    result_value_ptr[85] = -_tmp147*_tmp150;
    result_value_ptr[86] = _tmp147*_tmp151;
    result_value_ptr[87] = -_tmp152*_tmp153;
    result_value_ptr[88] = _tmp153*_tmp154*_tmp155;
    result_value_ptr[89] = _tmp158;
    result_value_ptr[90] = _tmp161;
    result_value_ptr[91] = -_tmp162*_tmp163;
    result_value_ptr[92] = -_tmp164;
    result_value_ptr[93] = _tmp168;
    result_value_ptr[94] = _tmp164;
    result_value_ptr[95] = _tmp0*_tmp165;
    result_value_ptr[96] = _tmp13*_tmp165;
    result_value_ptr[97] = -_tmp16*_tmp166;
    result_value_ptr[98] = _tmp165*_tmp19;
    result_value_ptr[99] = -_tmp165*_tmp22;
    result_value_ptr[100] = -_tmp154*_tmp169 - _tmp165*_tmp25 - 8*_tmp171*x2;
    result_value_ptr[101] = -_tmp165*_tmp27;
    result_value_ptr[102] = _tmp172*_tmp78;
    result_value_ptr[103] = _tmp173*_tmp58;
    result_value_ptr[104] = _tmp78;
    result_value_ptr[105] = -_tmp175;
    result_value_ptr[106] = -_tmp170*_tmp78;
    result_value_ptr[107] = _tmp122*_tmp78;
    result_value_ptr[108] = -_tmp176*_tmp58;
    result_value_ptr[109] = -_tmp177*_tmp179*_tmp180;
    result_value_ptr[110] = -_tmp176*_tmp45;
    result_value_ptr[111] = _tmp176*_tmp181;
    result_value_ptr[112] = -_tmp176*_tmp28;
    result_value_ptr[113] = 16*_tmp182;
    result_value_ptr[114] = _tmp0*_tmp140;
    result_value_ptr[115] = _tmp124;
    result_value_ptr[116] = -_tmp16*_tmp183;
    result_value_ptr[117] = _tmp140*_tmp19;
    result_value_ptr[118] = -_tmp140*_tmp22;
    result_value_ptr[119] = -_tmp140*_tmp25;
    result_value_ptr[120] = -_tmp140*_tmp27 + _tmp185*_tmp187 + _tmp188*_tmp191;
    result_value_ptr[121] = _tmp191*_tmp192;
    result_value_ptr[122] = _tmp190*_tmp20;
    result_value_ptr[123] = -Scalar(2.0)*_tmp191;
    result_value_ptr[124] = -_tmp191*_tmp193;
    result_value_ptr[125] = -_tmp191*_tmp194;
    result_value_ptr[126] = _tmp191*_tmp196;
    result_value_ptr[127] = _tmp185*_tmp198;
    result_value_ptr[128] = -_tmp185*_tmp200;
    result_value_ptr[129] = -_tmp141*_tmp185;
    result_value_ptr[130] = -_tmp185*_tmp201;
    result_value_ptr[131] = _tmp185*_tmp202;
    result_value_ptr[132] = _tmp185*_tmp203;
    result_value_ptr[133] = -_tmp12*_tmp32;
    result_value_ptr[134] = _tmp207*_tmp56;
    result_value_ptr[135] = _tmp207*_tmp60 + _tmp208*_tmp210 + _tmp28*_tmp32;
    result_value_ptr[136] = _tmp31*_tmp32;
    result_value_ptr[137] = -_tmp32*_tmp34;
    result_value_ptr[138] = _tmp0*_tmp32;
    result_value_ptr[139] = -_tmp32*_tmp35;
    result_value_ptr[140] = _tmp32*_tmp38;
    result_value_ptr[141] = _tmp211*_tmp64;
    result_value_ptr[142] = _tmp207*_tmp68;
    result_value_ptr[143] = -_tmp211*_tmp70;
    result_value_ptr[144] = -_tmp18*_tmp207;
    result_value_ptr[145] = _tmp207*_tmp74;
    result_value_ptr[146] = -_tmp105*_tmp210;
    result_value_ptr[147] = -_tmp210*_tmp212;
    result_value_ptr[148] = _tmp210*_tmp213;
    result_value_ptr[149] = _tmp210*_tmp28;
    result_value_ptr[150] = -_tmp210*_tmp216;
    result_value_ptr[151] = -_tmp12*_tmp217;
    result_value_ptr[152] = -_tmp218*_tmp96;
    result_value_ptr[153] = _tmp217*_tmp28;
    result_value_ptr[154] = _tmp217*_tmp31 - _tmp218*_tmp98 - _tmp220*_tmp222;
    result_value_ptr[155] = -_tmp217*_tmp34;
    result_value_ptr[156] = _tmp0*_tmp217;
    result_value_ptr[157] = -_tmp217*_tmp35;
    result_value_ptr[158] = _tmp217*_tmp38;
    result_value_ptr[159] = -_tmp223;
    result_value_ptr[160] = _tmp101*_tmp223;
    result_value_ptr[161] = -_tmp104*_tmp218;
    result_value_ptr[162] = _tmp0*_tmp218;
    result_value_ptr[163] = _tmp106*_tmp218;
    result_value_ptr[164] = _tmp224;
    result_value_ptr[165] = -_tmp189*_tmp221*_tmp225;
    result_value_ptr[166] = -_tmp222*_tmp228;
    result_value_ptr[167] = _tmp115*_tmp221;
    result_value_ptr[168] = _tmp224*_tmp3;
    result_value_ptr[169] = -_tmp12*_tmp230;
    result_value_ptr[170] = -_tmp120*_tmp231;
    result_value_ptr[171] = _tmp230*_tmp28;
    result_value_ptr[172] = _tmp230*_tmp31;
    result_value_ptr[173] = -_tmp100 - _tmp230*(-_tmp33*x2 + _tmp36) + 4*_tmp231*x2 - _tmp232;
    result_value_ptr[174] = _tmp0*_tmp230;
    result_value_ptr[175] = -_tmp230*_tmp35;
    result_value_ptr[176] = _tmp230*_tmp38;
    result_value_ptr[177] = _tmp231*_tmp234;
    result_value_ptr[178] = _tmp126*_tmp231;
    result_value_ptr[179] = -_tmp129*_tmp231;
    result_value_ptr[180] = -_tmp231*_tmp235;
    result_value_ptr[181] = -_tmp231*_tmp37;
    result_value_ptr[182] = -_tmp236*_tmp237;
    result_value_ptr[183] = -_tmp127*_tmp236;
    result_value_ptr[184] = -_tmp236*_tmp238;
    result_value_ptr[185] = -_tmp236*_tmp239;
    result_value_ptr[186] = _tmp236*_tmp241;
    result_value_ptr[187] = _tmp236*_tmp243;
    result_value_ptr[188] = -Scalar(1)/Scalar(4)*_tmp244;
    result_value_ptr[189] = -_tmp146*_tmp245;
    result_value_ptr[190] = _tmp11*_tmp28;
    result_value_ptr[191] = _tmp11*_tmp31;
    result_value_ptr[192] = -_tmp11*_tmp34;
    result_value_ptr[193] = _tmp0*_tmp11 + _tmp245*_tmp246 + _tmp247*_tmp248;
    result_value_ptr[194] = -_tmp249;
    result_value_ptr[195] = _tmp11*_tmp38;
    result_value_ptr[196] = -_tmp149*_tmp245;
    result_value_ptr[197] = -_tmp150*_tmp245;
    result_value_ptr[198] = _tmp151*_tmp245;
    result_value_ptr[199] = -_tmp245*_tmp250;
    result_value_ptr[200] = _tmp245*_tmp252;
    result_value_ptr[201] = -_tmp247*_tmp253;
    result_value_ptr[202] = _tmp247*_tmp254;
    result_value_ptr[203] = _tmp11*_tmp247;
    result_value_ptr[204] = -_tmp255*_tmp256;
    result_value_ptr[205] = -_tmp257 - _tmp47;
    result_value_ptr[206] = -_tmp256*x4;
    result_value_ptr[207] = _tmp12*_tmp259;
    result_value_ptr[208] = _tmp260;
    result_value_ptr[209] = -_tmp259*_tmp28;
    result_value_ptr[210] = -_tmp259*_tmp31;
    result_value_ptr[211] = _tmp259*_tmp34;
    result_value_ptr[212] = -_tmp0*_tmp259;
    result_value_ptr[213] = -_tmp172*_tmp8 + _tmp259*_tmp35 - _tmp261*_tmp262;
    result_value_ptr[214] = -_tmp259*_tmp38;
    result_value_ptr[215] = -_tmp35*_tmp73;
    result_value_ptr[216] = _tmp9;
    result_value_ptr[217] = _tmp32*_tmp7*x2;
    result_value_ptr[218] = _tmp170*_tmp8;
    result_value_ptr[219] = -_tmp122*_tmp8;
    result_value_ptr[220] = _tmp261*_tmp263;
    result_value_ptr[221] = -_tmp257*_tmp261;
    result_value_ptr[222] = _tmp261*_tmp45;
    result_value_ptr[223] = -_tmp261*_tmp264;
    result_value_ptr[224] = -_tmp261*_tmp265;
    result_value_ptr[225] = -_tmp261*_tmp266;
    result_value_ptr[226] = -_tmp12*_tmp156;
    result_value_ptr[227] = -_tmp188;
    result_value_ptr[228] = _tmp156*_tmp28;
    result_value_ptr[229] = _tmp156*_tmp31;
    result_value_ptr[230] = -_tmp156*_tmp34;
    result_value_ptr[231] = _tmp0*_tmp156;
    result_value_ptr[232] = -_tmp156*_tmp35;
    result_value_ptr[233] = _tmp156*_tmp38 - _tmp192 - _tmp267*_tmp268;
    result_value_ptr[234] = -_tmp269;
    result_value_ptr[235] = Scalar(2.0);
    result_value_ptr[236] = _tmp193;
    result_value_ptr[237] = _tmp194;
    result_value_ptr[238] = -_tmp196;
    result_value_ptr[239] = -_tmp268*_tmp67;
    result_value_ptr[240] = -_tmp268*_tmp271;
    result_value_ptr[241] = -_tmp268*_tmp273;
    result_value_ptr[242] = -_tmp268*_tmp274;
    result_value_ptr[243] = -_tmp268*_tmp276;
    result_value_ptr[244] = _tmp268*_tmp277;
    result_value_ptr[245] = -_tmp279*_tmp56;
    result_value_ptr[246] = -_tmp280*_tmp96;
    result_value_ptr[247] = -_tmp279*_tmp60;
    result_value_ptr[248] = -_tmp280*_tmp98;
    result_value_ptr[249] = -_tmp281 - _tmp282*_tmp64 - _tmp283*_tmp285;
    result_value_ptr[250] = -_tmp279*_tmp68;
    result_value_ptr[251] = _tmp282*_tmp70;
    result_value_ptr[252] = _tmp18*_tmp279;
    result_value_ptr[253] = -_tmp279*_tmp74;
    result_value_ptr[254] = _tmp101*_tmp281;
    result_value_ptr[255] = -_tmp104*_tmp280;
    result_value_ptr[256] = _tmp0*_tmp280;
    result_value_ptr[257] = _tmp106*_tmp280;
    result_value_ptr[258] = _tmp283*_tmp286;
    result_value_ptr[259] = -_tmp283*_tmp287;
    result_value_ptr[260] = -_tmp283*_tmp288;
    result_value_ptr[261] = _tmp283*_tmp289;
    result_value_ptr[262] = _tmp189*_tmp283;
    result_value_ptr[263] = _tmp283*_tmp290;
    result_value_ptr[264] = -_tmp56*x2;
    result_value_ptr[265] = -_tmp120*_tmp291;
    result_value_ptr[266] = -_tmp60*x2;
    result_value_ptr[267] = _tmp115*_tmp291;
    result_value_ptr[268] = -_tmp177*_tmp64;
    result_value_ptr[269] = _tmp1*_tmp292 + _tmp234*_tmp291 - _tmp68*x2;
    result_value_ptr[270] = _tmp177*_tmp70;
    result_value_ptr[271] = _tmp18*x2;
    result_value_ptr[272] = -_tmp74*x2;
    result_value_ptr[273] = _tmp126*_tmp291;
    result_value_ptr[274] = -_tmp129*_tmp291;
    result_value_ptr[275] = -_tmp235*_tmp291;
    result_value_ptr[276] = -_tmp291*_tmp37;
    result_value_ptr[277] = -_tmp293;
    result_value_ptr[278] = _tmp1*_tmp294;
    result_value_ptr[279] = _tmp1*_tmp295;
    result_value_ptr[280] = -_tmp1*_tmp296;
    result_value_ptr[281] = -_tmp1*_tmp297;
    result_value_ptr[282] = -_tmp1*_tmp299;
    result_value_ptr[283] = _tmp57;
    result_value_ptr[284] = _tmp146*_tmp301;
    result_value_ptr[285] = _tmp61;
    result_value_ptr[286] = -_tmp148*_tmp177*_tmp300;
    result_value_ptr[287] = _tmp66;
    result_value_ptr[288] = _tmp69;
    result_value_ptr[289] = _tmp149*_tmp301 + _tmp303*_tmp305 - _tmp71;
    result_value_ptr[290] = -_tmp72;
    result_value_ptr[291] = _tmp75;
    result_value_ptr[292] = _tmp150*_tmp301;
    result_value_ptr[293] = -_tmp151*_tmp301;
    result_value_ptr[294] = _tmp152*_tmp174*_tmp300;
    result_value_ptr[295] = -_tmp155*_tmp300*_tmp306;
    result_value_ptr[296] = _tmp305*_tmp307;
    result_value_ptr[297] = -_tmp305*_tmp308;
    result_value_ptr[298] = _tmp174*_tmp304*_tmp309;
    result_value_ptr[299] = _tmp305*_tmp81;
    result_value_ptr[300] = -_tmp305*_tmp310;
    result_value_ptr[301] = -_tmp154*_tmp304*_tmp311;
    result_value_ptr[302] = _tmp313*_tmp56;
    result_value_ptr[303] = _tmp242*_tmp315;
    result_value_ptr[304] = _tmp313*_tmp60;
    result_value_ptr[305] = -_tmp172*_tmp315;
    result_value_ptr[306] = _tmp316*_tmp64;
    result_value_ptr[307] = _tmp313*_tmp68;
    result_value_ptr[308] = -_tmp316*_tmp70;
    result_value_ptr[309] = -_tmp18*_tmp313 - _tmp317*(-_tmp127*x3 + x0) - _tmp318*_tmp319;
    result_value_ptr[310] = _tmp313*_tmp74;
    result_value_ptr[311] = -_tmp315;
    result_value_ptr[312] = _tmp315*_tmp321;
    result_value_ptr[313] = _tmp170*_tmp315;
    result_value_ptr[314] = -_tmp122*_tmp315;
    result_value_ptr[315] = -_tmp318*_tmp323;
    result_value_ptr[316] = -_tmp318*_tmp326;
    result_value_ptr[317] = _tmp318*_tmp328;
    result_value_ptr[318] = _tmp318*_tmp329;
    result_value_ptr[319] = _tmp318*_tmp331;
    result_value_ptr[320] = -_tmp318*_tmp332;
    result_value_ptr[321] = -Scalar(4.0)*_tmp55*x3 + Scalar(2.0);
    result_value_ptr[322] = _tmp188*_tmp333;
    result_value_ptr[323] = -_tmp334 + Scalar(-8.0);
    result_value_ptr[324] = _tmp192*_tmp333;
    result_value_ptr[325] = -_tmp335*_tmp64;
    result_value_ptr[326] = -_tmp336 - Scalar(2.0)*x4 + Scalar(-4.0);
    result_value_ptr[327] = _tmp335*_tmp70;
    result_value_ptr[328] = _tmp337;
    result_value_ptr[329] = -_tmp174*_tmp339 + _tmp20*_tmp333*x3 - _tmp338*_tmp8 + Scalar(-4.0);
    result_value_ptr[330] = -Scalar(4.0)*_tmp26 - _tmp338;
    result_value_ptr[331] = -_tmp193*_tmp333;
    result_value_ptr[332] = -_tmp194*_tmp333;
    result_value_ptr[333] = _tmp196*_tmp333;
    result_value_ptr[334] = _tmp110*x2;
    result_value_ptr[335] = _tmp340;
    result_value_ptr[336] = -_tmp341*x2;
    result_value_ptr[337] = -_tmp156*x2;
    result_value_ptr[338] = -_tmp343*x2;
    result_value_ptr[339] = _tmp344*x2;
    result_value_ptr[340] = _tmp345*_tmp96;
    result_value_ptr[341] = -_tmp120;
    result_value_ptr[342] = _tmp345*_tmp98;
    result_value_ptr[343] = _tmp115;
    result_value_ptr[344] = _tmp346;
    result_value_ptr[345] = _tmp234;
    result_value_ptr[346] = -_tmp101*_tmp346 + _tmp126 + _tmp51*x1;
    result_value_ptr[347] = _tmp103*_tmp347;
    result_value_ptr[348] = -_tmp0*_tmp345;
    result_value_ptr[349] = -_tmp105*_tmp347;
    result_value_ptr[350] = -_tmp129;
    result_value_ptr[351] = -_tmp235;
    result_value_ptr[352] = -_tmp37;
    result_value_ptr[353] = -_tmp134*_tmp78;
    result_value_ptr[354] = -_tmp348*_tmp84;
    result_value_ptr[355] = -_tmp58;
    result_value_ptr[356] = -_tmp349*x1;
    result_value_ptr[357] = _tmp350;
    result_value_ptr[358] = _tmp351*x1;
    result_value_ptr[359] = _tmp352*_tmp96;
    result_value_ptr[360] = -_tmp146*_tmp353;
    result_value_ptr[361] = _tmp352*_tmp98;
    result_value_ptr[362] = _tmp246*_tmp353;
    result_value_ptr[363] = _tmp354;
    result_value_ptr[364] = -_tmp149*_tmp353;
    result_value_ptr[365] = -_tmp101*_tmp354;
    result_value_ptr[366] = _tmp104*_tmp352 - _tmp150*_tmp353 + _tmp355*_tmp356;
    result_value_ptr[367] = -_tmp0*_tmp352;
    result_value_ptr[368] = -_tmp106*_tmp352;
    result_value_ptr[369] = _tmp151*_tmp353;
    result_value_ptr[370] = -_tmp250*_tmp353;
    result_value_ptr[371] = _tmp252*_tmp353;
    result_value_ptr[372] = _tmp356*_tmp357;
    result_value_ptr[373] = _tmp358;
    result_value_ptr[374] = _tmp312*_tmp342;
    result_value_ptr[375] = _tmp356*_tmp359;
    result_value_ptr[376] = -_tmp14*_tmp361*_tmp84;
    result_value_ptr[377] = _tmp356*_tmp363;
    result_value_ptr[378] = _tmp365*_tmp96;
    result_value_ptr[379] = -_tmp242*_tmp337;
    result_value_ptr[380] = _tmp365*_tmp98;
    result_value_ptr[381] = _tmp172*_tmp337;
    result_value_ptr[382] = _tmp366;
    result_value_ptr[383] = _tmp334*_tmp35;
    result_value_ptr[384] = -_tmp101*_tmp366;
    result_value_ptr[385] = _tmp103*_tmp367;
    result_value_ptr[386] = -_tmp0*_tmp365 + _tmp337 + _tmp368*_tmp369;
    result_value_ptr[387] = -_tmp105*_tmp367;
    result_value_ptr[388] = -Scalar(4.0)*_tmp137*_tmp175;
    result_value_ptr[389] = -_tmp170*_tmp337;
    result_value_ptr[390] = _tmp122*_tmp337;
    result_value_ptr[391] = -_tmp369*_tmp371;
    result_value_ptr[392] = 8*_tmp130*_tmp189*_tmp97;
    result_value_ptr[393] = _tmp373*[&]() { const Scalar base = x2; return base * base * base; }();
    result_value_ptr[394] = -_tmp26*_tmp374*_tmp67;
    result_value_ptr[395] = _tmp213*_tmp37*_tmp373;
    result_value_ptr[396] = _tmp180*_tmp375;
    result_value_ptr[397] = _tmp70*_tmp96;
    result_value_ptr[398] = -_tmp188*_tmp378;
    result_value_ptr[399] = _tmp70*_tmp98;
    result_value_ptr[400] = -_tmp18*_tmp377*_tmp5;
    result_value_ptr[401] = _tmp379;
    result_value_ptr[402] = -_tmp20*_tmp377*_tmp47;
    result_value_ptr[403] = -_tmp101*_tmp379;
    result_value_ptr[404] = _tmp104*_tmp70;
    result_value_ptr[405] = -_tmp0*_tmp70;
    result_value_ptr[406] = -_tmp106*_tmp70 + _tmp169*_tmp381 + Scalar(4.0)*_tmp377;
    result_value_ptr[407] = _tmp193*_tmp378;
    result_value_ptr[408] = _tmp100*_tmp150*_tmp376/_tmp155;
    result_value_ptr[409] = -_tmp196*_tmp378;
    result_value_ptr[410] = -_tmp165*_tmp169;
    result_value_ptr[411] = _tmp169*_tmp382;
    result_value_ptr[412] = _tmp385;
    result_value_ptr[413] = _tmp386*_tmp387;
    result_value_ptr[414] = -Scalar(1.5)*_tmp169;
    result_value_ptr[415] = _tmp384;
    result_value_ptr[416] = -_tmp120*_tmp388;
    result_value_ptr[417] = -_tmp146*_tmp389;
    result_value_ptr[418] = _tmp115*_tmp388;
    result_value_ptr[419] = _tmp246*_tmp389;
    result_value_ptr[420] = _tmp234*_tmp388;
    result_value_ptr[421] = -_tmp149*_tmp389;
    result_value_ptr[422] = _tmp126*_tmp388;
    result_value_ptr[423] = -_tmp150*_tmp389;
    result_value_ptr[424] = -_tmp129*_tmp388 + _tmp151*_tmp389 + _tmp163*_tmp390;
    result_value_ptr[425] = -_tmp235*_tmp388;
    result_value_ptr[426] = -_tmp37*_tmp388;
    result_value_ptr[427] = -_tmp250*_tmp389;
    result_value_ptr[428] = _tmp252*_tmp389;
    result_value_ptr[429] = _tmp390*x4;
    result_value_ptr[430] = -_tmp390*_tmp42;
    result_value_ptr[431] = -_tmp35*_tmp390;
    result_value_ptr[432] = _tmp391 + _tmp392 + Scalar(0.5);
    result_value_ptr[433] = _tmp390*_tmp393;
    result_value_ptr[434] = -_tmp390*_tmp394;
    result_value_ptr[435] = -_tmp120*_tmp395;
    result_value_ptr[436] = -_tmp122*_tmp396*_tmp84;
    result_value_ptr[437] = _tmp115*_tmp395;
    result_value_ptr[438] = _tmp172*_tmp397;
    result_value_ptr[439] = _tmp234*_tmp395;
    result_value_ptr[440] = _tmp122*_tmp13*_tmp173;
    result_value_ptr[441] = _tmp126*_tmp395;
    result_value_ptr[442] = _tmp397;
    result_value_ptr[443] = -_tmp129*_tmp395;
    result_value_ptr[444] = -_tmp122*_tmp32*_tmp65 - _tmp235*_tmp395 + _tmp398*_tmp399;
    result_value_ptr[445] = -_tmp37*_tmp395;
    result_value_ptr[446] = -_tmp170*_tmp397;
    result_value_ptr[447] = std::pow(_tmp122, Scalar(2))*_tmp214;
    result_value_ptr[448] = -_tmp398*_tmp400;
    result_value_ptr[449] = -_tmp398*_tmp402;
    result_value_ptr[450] = _tmp398*_tmp403;
    result_value_ptr[451] = -_tmp398*_tmp404;
    result_value_ptr[452] = _tmp105*_tmp398;
    result_value_ptr[453] = -_tmp398*_tmp406;
    result_value_ptr[454] = _tmp120*_tmp407;
    result_value_ptr[455] = _tmp188*_tmp408;
    result_value_ptr[456] = -_tmp115*_tmp407;
    result_value_ptr[457] = _tmp192*_tmp408;
    result_value_ptr[458] = -_tmp234*_tmp407;
    result_value_ptr[459] = _tmp269*_tmp408;
    result_value_ptr[460] = -_tmp126*_tmp407;
    result_value_ptr[461] = -_tmp336 - Scalar(4.0)*x2 + Scalar(-2.0);
    result_value_ptr[462] = _tmp129*_tmp407;
    result_value_ptr[463] = _tmp235*_tmp407;
    result_value_ptr[464] = -_tmp193*_tmp408 + _tmp37*_tmp407 + _tmp409*_tmp411;
    result_value_ptr[465] = -_tmp194*_tmp408;
    result_value_ptr[466] = _tmp196*_tmp408;
    result_value_ptr[467] = _tmp411*_tmp412;
    result_value_ptr[468] = -_tmp411*_tmp415;
    result_value_ptr[469] = _tmp411*_tmp416;
    result_value_ptr[470] = _tmp278*_tmp411;
    result_value_ptr[471] = -_tmp411*_tmp417;
    result_value_ptr[472] = _tmp411*_tmp418;
    result_value_ptr[473] = -_tmp146*_tmp419;
    result_value_ptr[474] = -_tmp242*_tmp420;
    result_value_ptr[475] = _tmp246*_tmp419;
    result_value_ptr[476] = _tmp172*_tmp420;
    result_value_ptr[477] = -_tmp149*_tmp419;
    result_value_ptr[478] = _tmp317*_tmp420;
    result_value_ptr[479] = -_tmp150*_tmp419;
    result_value_ptr[480] = _tmp420;
    result_value_ptr[481] = _tmp151*_tmp419;
    result_value_ptr[482] = -_tmp321*_tmp420;
    result_value_ptr[483] = -_tmp152*_tmp29*_tmp421 - _tmp170*_tmp420 - _tmp422*_tmp423;
    result_value_ptr[484] = _tmp154*_tmp18*_tmp215*_tmp375;
    result_value_ptr[485] = _tmp122*_tmp420;
    result_value_ptr[486] = _tmp139*_tmp422;
    result_value_ptr[487] = -_tmp148*_tmp92 + _tmp424;
    result_value_ptr[488] = _tmp422*_tmp426;
    result_value_ptr[489] = _tmp422*_tmp428;
    result_value_ptr[490] = _tmp1*_tmp422;
    result_value_ptr[491] = _tmp422*_tmp429;
    result_value_ptr[492] = -_tmp146*_tmp430;
    result_value_ptr[493] = _tmp188*_tmp413;
    result_value_ptr[494] = _tmp246*_tmp430;
    result_value_ptr[495] = _tmp192*_tmp413;
    result_value_ptr[496] = -_tmp149*_tmp430;
    result_value_ptr[497] = _tmp269*_tmp413;
    result_value_ptr[498] = -_tmp150*_tmp430;
    result_value_ptr[499] = -_tmp335 - _tmp431;
    result_value_ptr[500] = _tmp151*_tmp430;
    result_value_ptr[501] = -_tmp193*_tmp413;
    result_value_ptr[502] = -_tmp250*_tmp430;
    result_value_ptr[503] = -_tmp194*_tmp413 + _tmp252*_tmp430;
    result_value_ptr[504] = _tmp196*_tmp413;
    result_value_ptr[505] = -_tmp154*_tmp21*_tmp432*_tmp97;
    result_value_ptr[506] = _tmp188*_tmp434;
    result_value_ptr[507] = _tmp172*_tmp435;
    result_value_ptr[508] = _tmp192*_tmp434;
    result_value_ptr[509] = _tmp21*_tmp262;
    result_value_ptr[510] = _tmp269*_tmp434;
    result_value_ptr[511] = _tmp435;
    result_value_ptr[512] = -_tmp431 - Scalar(2.0)*_tmp433 + Scalar(-2.0);
    result_value_ptr[513] = -_tmp321*_tmp435;
    result_value_ptr[514] = -_tmp193*_tmp434;
    result_value_ptr[515] = -_tmp170*_tmp435;
    result_value_ptr[516] = -_tmp194*_tmp434;
    result_value_ptr[517] = _tmp122*_tmp435 + _tmp196*_tmp434 - _tmp410*_tmp436;
    result_value_ptr[518] = _tmp436*_tmp437;
    result_value_ptr[519] = -_tmp436*_tmp438;
    result_value_ptr[520] = -_tmp436*_tmp439;
    result_value_ptr[521] = _tmp436*_tmp440;
    result_value_ptr[522] = _tmp436*_tmp441;
    result_value_ptr[523] = -_tmp436*_tmp442;
    result_value_ptr[524] = _tmp443*_tmp6;
    result_value_ptr[525] = _tmp444*_tmp445;
    result_value_ptr[526] = _tmp208*_tmp446;
    result_value_ptr[527] = -_tmp41*_tmp443 - _tmp447*_tmp448;
    result_value_ptr[528] = -_tmp43*_tmp443;
    result_value_ptr[529] = _tmp443*_tmp46;
    result_value_ptr[530] = -_tmp443*_tmp48;
    result_value_ptr[531] = -_tmp443*_tmp49;
    result_value_ptr[532] = _tmp443*_tmp449;
    result_value_ptr[533] = -_tmp444*_tmp450;
    result_value_ptr[534] = _tmp448*_tmp451;
    result_value_ptr[535] = _tmp452*_tmp83;
    result_value_ptr[536] = -_tmp234*_tmp452;
    result_value_ptr[537] = -_tmp448*_tmp453;
    result_value_ptr[538] = -_tmp105*_tmp446;
    result_value_ptr[539] = -_tmp212*_tmp446;
    result_value_ptr[540] = _tmp213*_tmp446;
    result_value_ptr[541] = _tmp28*_tmp446;
    result_value_ptr[542] = -_tmp216*_tmp446;
    result_value_ptr[543] = -_tmp454*_tmp6;
    result_value_ptr[544] = -_tmp455*_tmp91;
    result_value_ptr[545] = _tmp220*_tmp456;
    result_value_ptr[546] = _tmp41*_tmp454;
    result_value_ptr[547] = -_tmp109*_tmp455 + _tmp43*_tmp454 - _tmp457;
    result_value_ptr[548] = -_tmp454*_tmp46;
    result_value_ptr[549] = _tmp454*_tmp48;
    result_value_ptr[550] = _tmp454*_tmp49;
    result_value_ptr[551] = -_tmp449*_tmp454;
    result_value_ptr[552] = -_tmp111*_tmp455;
    result_value_ptr[553] = -_tmp114*_tmp455;
    result_value_ptr[554] = -_tmp116*_tmp455;
    result_value_ptr[555] = _tmp117*_tmp455;
    result_value_ptr[556] = -_tmp39*_tmp455;
    result_value_ptr[557] = _tmp456*_tmp458;
    result_value_ptr[558] = _tmp228*_tmp456;
    result_value_ptr[559] = -_tmp197*_tmp205 - _tmp205;
    result_value_ptr[560] = -_tmp3*_tmp457;
    result_value_ptr[561] = -_tmp47*_tmp6;
    result_value_ptr[562] = _tmp121*_tmp459;
    result_value_ptr[563] = _tmp460;
    result_value_ptr[564] = _tmp41*_tmp47;
    result_value_ptr[565] = _tmp43*_tmp47;
    result_value_ptr[566] = -_tmp132*_tmp461 - _tmp237*_tmp462 - _tmp372 + 4;
    result_value_ptr[567] = _tmp47*_tmp48;
    result_value_ptr[568] = _tmp47*_tmp49;
    result_value_ptr[569] = -_tmp1*_tmp30;
    result_value_ptr[570] = -_tmp459*_tmp78;
    result_value_ptr[571] = -_tmp459*_tmp463;
    result_value_ptr[572] = _tmp125*_tmp459;
    result_value_ptr[573] = -_tmp137*_tmp461;
    result_value_ptr[574] = -_tmp139*_tmp459;
    result_value_ptr[575] = -_tmp127*_tmp462;
    result_value_ptr[576] = -_tmp238*_tmp462;
    result_value_ptr[577] = -_tmp239*_tmp462;
    result_value_ptr[578] = _tmp241*_tmp462;
    result_value_ptr[579] = _tmp243*_tmp462;
    result_value_ptr[580] = -_tmp49*_tmp6;
    result_value_ptr[581] = 16*x0;
    result_value_ptr[582] = _tmp248*_tmp462;
    result_value_ptr[583] = _tmp41*_tmp49;
    result_value_ptr[584] = _tmp43*_tmp49;
    result_value_ptr[585] = -_tmp46*_tmp49;
    result_value_ptr[586] = -_tmp253*_tmp462 + _tmp372 + _tmp428 + _tmp48*_tmp49;
    result_value_ptr[587] = std::pow(_tmp49, Scalar(2));
    result_value_ptr[588] = -_tmp449*_tmp49;
    result_value_ptr[589] = -_tmp140*_tmp159 + _tmp47;
    result_value_ptr[590] = -_tmp115*_tmp162;
    result_value_ptr[591] = _tmp362;
    result_value_ptr[592] = _tmp140*_tmp165 + _tmp156;
    result_value_ptr[593] = _tmp233;
    result_value_ptr[594] = _tmp254*_tmp462;
    result_value_ptr[595] = _tmp11*_tmp462;
    result_value_ptr[596] = -_tmp255*_tmp464;
    result_value_ptr[597] = _tmp460;
    result_value_ptr[598] = -_tmp464*x4;
    result_value_ptr[599] = -_tmp115*_tmp6;
    result_value_ptr[600] = -_tmp466*_tmp467;
    result_value_ptr[601] = _tmp262*_tmp468;
    result_value_ptr[602] = _tmp115*_tmp41;
    result_value_ptr[603] = _tmp115*_tmp43;
    result_value_ptr[604] = -_tmp115*_tmp46;
    result_value_ptr[605] = _tmp115*_tmp48;
    result_value_ptr[606] = _tmp115*_tmp49 - _tmp263*_tmp468 - _tmp466*_tmp58;
    result_value_ptr[607] = -_tmp115*_tmp449;
    result_value_ptr[608] = -_tmp466*_tmp469;
    result_value_ptr[609] = -_tmp45*_tmp466;
    result_value_ptr[610] = _tmp181*_tmp466;
    result_value_ptr[611] = -_tmp28*_tmp466;
    result_value_ptr[612] = _tmp466*_tmp47;
    result_value_ptr[613] = _tmp257*_tmp468;
    result_value_ptr[614] = -_tmp45*_tmp468;
    result_value_ptr[615] = _tmp264*_tmp468;
    result_value_ptr[616] = _tmp265*_tmp468;
    result_value_ptr[617] = _tmp266*_tmp468;
    result_value_ptr[618] = _tmp267*_tmp470;
    result_value_ptr[619] = _tmp470*_tmp67;
    result_value_ptr[620] = _tmp271*_tmp470;
    result_value_ptr[621] = _tmp273*_tmp470;
    result_value_ptr[622] = _tmp274*_tmp470;
    result_value_ptr[623] = _tmp276*_tmp470;
    result_value_ptr[624] = -_tmp277*_tmp470;
    result_value_ptr[625] = _tmp115*_tmp445;
    result_value_ptr[626] = -_tmp471*_tmp91;
    result_value_ptr[627] = -_tmp258*_tmp285;
    result_value_ptr[628] = -_tmp447*_tmp472;
    result_value_ptr[629] = -_tmp109*_tmp471;
    result_value_ptr[630] = -_tmp111*_tmp471 + _tmp258*_tmp286 - 8*_tmp387;
    result_value_ptr[631] = _tmp451*_tmp472;
    result_value_ptr[632] = 4*_tmp155*_tmp433*_tmp81;
    result_value_ptr[633] = -_tmp473*_tmp78;
    result_value_ptr[634] = -_tmp453*_tmp472;
    result_value_ptr[635] = -_tmp113*_tmp86;
    result_value_ptr[636] = -_tmp116*_tmp471;
    result_value_ptr[637] = _tmp117*_tmp471;
    result_value_ptr[638] = -_tmp40*_tmp86;
    result_value_ptr[639] = -_tmp258*_tmp287;
    result_value_ptr[640] = -_tmp258*_tmp288;
    result_value_ptr[641] = _tmp258*_tmp289;
    result_value_ptr[642] = _tmp189*_tmp258;
    result_value_ptr[643] = _tmp258*_tmp290;
    result_value_ptr[644] = _tmp475*_tmp476;
    result_value_ptr[645] = _tmp121*_tmp29;
    result_value_ptr[646] = _tmp292*_tmp477;
    result_value_ptr[647] = -_tmp447*_tmp475;
    result_value_ptr[648] = -_tmp132*_tmp278;
    result_value_ptr[649] = -_tmp233*_tmp475;
    result_value_ptr[650] = -_tmp450 + _tmp451*_tmp475 - x2*(-_tmp3*x0 + x1);
    result_value_ptr[651] = _tmp475*_tmp479;
    result_value_ptr[652] = -_tmp475*_tmp480;
    result_value_ptr[653] = -_tmp453*_tmp475;
    result_value_ptr[654] = -_tmp135*_tmp431;
    result_value_ptr[655] = _tmp125*_tmp29;
    result_value_ptr[656] = -_tmp137*_tmp278;
    result_value_ptr[657] = -_tmp139*_tmp29;
    result_value_ptr[658] = _tmp294*_tmp477;
    result_value_ptr[659] = _tmp295*_tmp477;
    result_value_ptr[660] = -_tmp296*_tmp477;
    result_value_ptr[661] = -_tmp297*_tmp477;
    result_value_ptr[662] = -_tmp299*_tmp477;
    result_value_ptr[663] = -_tmp476*_tmp481;
    result_value_ptr[664] = 16*_tmp189;
    result_value_ptr[665] = -_tmp303*_tmp482;
    result_value_ptr[666] = _tmp447*_tmp481;
    result_value_ptr[667] = _tmp100*_tmp157;
    result_value_ptr[668] = _tmp233*_tmp481;
    result_value_ptr[669] = -_tmp451*_tmp481;
    result_value_ptr[670] = _tmp100*_tmp160 - _tmp307*_tmp482 - _tmp479*_tmp481;
    result_value_ptr[671] = _tmp480*_tmp481;
    result_value_ptr[672] = _tmp453*_tmp481;
    result_value_ptr[673] = -_tmp162*_tmp374;
    result_value_ptr[674] = -_tmp483;
    result_value_ptr[675] = _tmp100*_tmp167;
    result_value_ptr[676] = _tmp483;
    result_value_ptr[677] = _tmp308*_tmp482;
    result_value_ptr[678] = -_tmp482*_tmp484;
    result_value_ptr[679] = -_tmp482*_tmp81;
    result_value_ptr[680] = _tmp310*_tmp482;
    result_value_ptr[681] = _tmp482*_tmp485;
    result_value_ptr[682] = -_tmp476*_tmp486;
    result_value_ptr[683] = -_tmp467*_tmp487;
    result_value_ptr[684] = _tmp154*_tmp58*_tmp67;
    result_value_ptr[685] = _tmp447*_tmp486;
    result_value_ptr[686] = -_tmp487*_tmp58;
    result_value_ptr[687] = _tmp233*_tmp486;
    result_value_ptr[688] = -_tmp451*_tmp486;
    result_value_ptr[689] = -_tmp479*_tmp486;
    result_value_ptr[690] = _tmp322*_tmp488 - _tmp469*_tmp487 + _tmp480*_tmp486;
    result_value_ptr[691] = _tmp453*_tmp486;
    result_value_ptr[692] = -_tmp45*_tmp487;
    result_value_ptr[693] = _tmp181*_tmp487;
    result_value_ptr[694] = -_tmp28*_tmp487;
    result_value_ptr[695] = _tmp47*_tmp487;
    result_value_ptr[696] = _tmp325*_tmp488;
    result_value_ptr[697] = -_tmp13*_tmp327*_tmp67;
    result_value_ptr[698] = -_tmp489*_tmp67;
    result_value_ptr[699] = -_tmp330*_tmp67*_tmp78;
    result_value_ptr[700] = _tmp274*_tmp488;
    result_value_ptr[701] = -_tmp214*_tmp491*_tmp52;
    result_value_ptr[702] = _tmp187*_tmp492;
    result_value_ptr[703] = _tmp145*_tmp493;
    result_value_ptr[704] = _tmp447*_tmp494;
    result_value_ptr[705] = _tmp198*_tmp492;
    result_value_ptr[706] = _tmp491*_tmp495;
    result_value_ptr[707] = -_tmp451*_tmp494;
    result_value_ptr[708] = -_tmp478*_tmp491*_tmp496;
    result_value_ptr[709] = _tmp164*_tmp23*_tmp29*_tmp491;
    result_value_ptr[710] = -_tmp110*_tmp145 - _tmp200*_tmp492 + _tmp21*_tmp453*_tmp490*x4;
    result_value_ptr[711] = -_tmp141*_tmp492;
    result_value_ptr[712] = -_tmp201*_tmp492;
    result_value_ptr[713] = _tmp202*_tmp492;
    result_value_ptr[714] = _tmp44*_tmp495*_tmp5;
    result_value_ptr[715] = -_tmp145*_tmp226;
    result_value_ptr[716] = _tmp145*_tmp341;
    result_value_ptr[717] = _tmp145*_tmp156;
    result_value_ptr[718] = _tmp145*_tmp343;
    result_value_ptr[719] = -_tmp145*_tmp344;
    result_value_ptr[720] = -_tmp497 - 5*_tmp90;
    result_value_ptr[721] = _tmp121*_tmp498;
    result_value_ptr[722] = _tmp499*_tmp51;
    result_value_ptr[723] = 10*_tmp23 - 5;
    result_value_ptr[724] = -_tmp132*_tmp500;
    result_value_ptr[725] = -_tmp501 - _tmp502 + 5*_tmp84;
    result_value_ptr[726] = -_tmp498*_tmp78;
    result_value_ptr[727] = -5*_tmp114 - _tmp463*_tmp498 - _tmp503*(-_tmp312*x3 + 1);
    result_value_ptr[728] = 5 - 20*x2;
    result_value_ptr[729] = _tmp501 - _tmp502 + 5*x2 + 15;
    result_value_ptr[730] = 10 - _tmp497;
    result_value_ptr[731] = _tmp125*_tmp498;
    result_value_ptr[732] = -_tmp137*_tmp500;
    result_value_ptr[733] = -_tmp139*_tmp498;
    result_value_ptr[734] = -_tmp499*_tmp504;
    result_value_ptr[735] = -_tmp499*x1;
    result_value_ptr[736] = -_tmp349*_tmp499;
    result_value_ptr[737] = -_tmp312*_tmp53 + 6;
    result_value_ptr[738] = _tmp351*_tmp499;
    result_value_ptr[739] = _tmp29*_tmp91;
    result_value_ptr[740] = -_tmp144*_tmp44;
    result_value_ptr[741] = _tmp355*_tmp505;
    result_value_ptr[742] = _tmp109*_tmp29;
    result_value_ptr[743] = -_tmp158*_tmp44;
    result_value_ptr[744] = _tmp111*_tmp29;
    result_value_ptr[745] = -_tmp161*_tmp44;
    result_value_ptr[746] = _tmp114*_tmp29;
    result_value_ptr[747] = _tmp112*_tmp162*_tmp37 + _tmp116*_tmp29 + _tmp357*_tmp505;
    result_value_ptr[748] = -_tmp117*_tmp29;
    result_value_ptr[749] = _tmp272;
    result_value_ptr[750] = _tmp506;
    result_value_ptr[751] = -_tmp168*_tmp44;
    result_value_ptr[752] = -_tmp506;
    result_value_ptr[753] = -_tmp233 - 4;
    result_value_ptr[754] = _tmp505*_tmp507;
    result_value_ptr[755] = _tmp359*_tmp505;
    result_value_ptr[756] = -_tmp505*_tmp508;
    result_value_ptr[757] = _tmp363*_tmp505;
    result_value_ptr[758] = _tmp509*_tmp91;
    result_value_ptr[759] = -_tmp467*_tmp510;
    result_value_ptr[760] = _tmp368*_tmp512;
    result_value_ptr[761] = _tmp109*_tmp509;
    result_value_ptr[762] = -_tmp513*_tmp514;
    result_value_ptr[763] = _tmp111*_tmp509;
    result_value_ptr[764] = -_tmp155*_tmp179*_tmp360;
    result_value_ptr[765] = _tmp114*_tmp509;
    result_value_ptr[766] = _tmp116*_tmp509;
    result_value_ptr[767] = -_tmp117*_tmp509 - _tmp371*_tmp512 - _tmp45*_tmp510;
    result_value_ptr[768] = _tmp39*_tmp509;
    result_value_ptr[769] = _tmp181*_tmp510;
    result_value_ptr[770] = -_tmp28*_tmp510;
    result_value_ptr[771] = _tmp124*_tmp155;
    result_value_ptr[772] = _tmp155*_tmp515;
    result_value_ptr[773] = _tmp134*_tmp177*_tmp244;
    result_value_ptr[774] = -_tmp134*_tmp155*_tmp174*_tmp67;
    result_value_ptr[775] = _tmp213*_tmp244*_tmp503;
    result_value_ptr[776] = _tmp134*_tmp18*_tmp23*std::pow(x0, Scalar(4));
    result_value_ptr[777] = -_tmp516*_tmp91;
    result_value_ptr[778] = -_tmp143*_tmp187;
    result_value_ptr[779] = -_tmp381*_tmp518;
    result_value_ptr[780] = -_tmp109*_tmp516;
    result_value_ptr[781] = -_tmp143*_tmp198;
    result_value_ptr[782] = -_tmp111*_tmp516;
    result_value_ptr[783] = _tmp143*_tmp200;
    result_value_ptr[784] = -_tmp114*_tmp516;
    result_value_ptr[785] = -_tmp116*_tmp516;
    result_value_ptr[786] = _tmp117*_tmp516;
    result_value_ptr[787] = _tmp141*_tmp143 + _tmp165*_tmp518 - _tmp39*_tmp516;
    result_value_ptr[788] = _tmp143*_tmp201;
    result_value_ptr[789] = -_tmp143*_tmp202;
    result_value_ptr[790] = -_tmp143*_tmp203;
    result_value_ptr[791] = -_tmp382*_tmp518;
    result_value_ptr[792] = _tmp519;
    result_value_ptr[793] = -_tmp518*_tmp520;
    result_value_ptr[794] = Scalar(1.5)*_tmp517 - Scalar(1.5)*x3;
    result_value_ptr[795] = -_tmp519;
    result_value_ptr[796] = -_tmp121*_tmp521;
    result_value_ptr[797] = 8*_tmp26*_tmp522;
    result_value_ptr[798] = _tmp132*_tmp523;
    result_value_ptr[799] = _tmp157*_tmp524;
    result_value_ptr[800] = _tmp521*_tmp78;
    result_value_ptr[801] = _tmp160*_tmp524;
    result_value_ptr[802] = _tmp463*_tmp521;
    result_value_ptr[803] = -_tmp162*_tmp47*_tmp522*x2;
    result_value_ptr[804] = -_tmp125*_tmp521 - _tmp526;
    result_value_ptr[805] = _tmp137*_tmp523;
    result_value_ptr[806] = _tmp139*_tmp521;
    result_value_ptr[807] = _tmp167*_tmp524;
    result_value_ptr[808] = _tmp526;
    result_value_ptr[809] = _tmp121*_tmp527;
    result_value_ptr[810] = _tmp278*_tmp467;
    result_value_ptr[811] = _tmp399*_tmp529;
    result_value_ptr[812] = -_tmp132*_tmp530;
    result_value_ptr[813] = _tmp29*_tmp513;
    result_value_ptr[814] = -_tmp527*_tmp78;
    result_value_ptr[815] = _tmp174*_tmp179*_tmp29;
    result_value_ptr[816] = -_tmp463*_tmp527;
    result_value_ptr[817] = _tmp278*_tmp45;
    result_value_ptr[818] = _tmp125*_tmp527;
    result_value_ptr[819] = -_tmp137*_tmp530 - _tmp181*_tmp278 - _tmp400*_tmp529;
    result_value_ptr[820] = -_tmp139*_tmp527;
    result_value_ptr[821] = _tmp278*_tmp28;
    result_value_ptr[822] = -_tmp373;
    result_value_ptr[823] = -_tmp528*_tmp531;
    result_value_ptr[824] = _tmp403*_tmp529;
    result_value_ptr[825] = -_tmp404*_tmp529;
    result_value_ptr[826] = _tmp105*_tmp529;
    result_value_ptr[827] = -_tmp528*_tmp532;
    result_value_ptr[828] = _tmp121*_tmp380;
    result_value_ptr[829] = _tmp187*_tmp533;
    result_value_ptr[830] = -_tmp258*_tmp409;
    result_value_ptr[831] = -_tmp132*_tmp534;
    result_value_ptr[832] = _tmp198*_tmp533;
    result_value_ptr[833] = -_tmp380*_tmp78;
    result_value_ptr[834] = -_tmp200*_tmp533;
    result_value_ptr[835] = -_tmp380*_tmp463;
    result_value_ptr[836] = -_tmp141*_tmp533;
    result_value_ptr[837] = _tmp125*_tmp380;
    result_value_ptr[838] = -_tmp137*_tmp534;
    result_value_ptr[839] = -_tmp139*_tmp380 - _tmp201*_tmp533 - _tmp258*_tmp412;
    result_value_ptr[840] = _tmp202*_tmp533;
    result_value_ptr[841] = _tmp52*_tmp58*_tmp82;
    result_value_ptr[842] = _tmp258*_tmp415;
    result_value_ptr[843] = -_tmp258*_tmp416;
    result_value_ptr[844] = -_tmp258*_tmp278;
    result_value_ptr[845] = _tmp258*_tmp417;
    result_value_ptr[846] = -_tmp258*_tmp418;
    result_value_ptr[847] = -_tmp535*_tmp536;
    result_value_ptr[848] = -_tmp467*_tmp537;
    result_value_ptr[849] = _tmp178*_tmp538;
    result_value_ptr[850] = -_tmp157*_tmp535;
    result_value_ptr[851] = -_tmp539;
    result_value_ptr[852] = -_tmp160*_tmp535;
    result_value_ptr[853] = -_tmp469*_tmp537;
    result_value_ptr[854] = _tmp100*_tmp162*_tmp535;
    result_value_ptr[855] = -_tmp45*_tmp537;
    result_value_ptr[856] = _tmp540;
    result_value_ptr[857] = _tmp181*_tmp537;
    result_value_ptr[858] = -_tmp139*_tmp541 - _tmp167*_tmp535 - _tmp28*_tmp537;
    result_value_ptr[859] = -_tmp540;
    result_value_ptr[860] = _tmp47*_tmp537;
    result_value_ptr[861] = _tmp35*_tmp424;
    result_value_ptr[862] = -_tmp23*_tmp35*_tmp425*_tmp47;
    result_value_ptr[863] = -_tmp428*_tmp541;
    result_value_ptr[864] = -_tmp1*_tmp541;
    result_value_ptr[865] = -_tmp154*_tmp182*_tmp35;
    result_value_ptr[866] = _tmp473*_tmp542;
    result_value_ptr[867] = -_tmp187*_tmp543;
    result_value_ptr[868] = _tmp100*_tmp544;
    result_value_ptr[869] = _tmp157*_tmp545;
    result_value_ptr[870] = -_tmp198*_tmp543;
    result_value_ptr[871] = _tmp160*_tmp545;
    result_value_ptr[872] = _tmp200*_tmp543;
    result_value_ptr[873] = -_tmp162*_tmp542*_tmp546;
    result_value_ptr[874] = _tmp141*_tmp543;
    result_value_ptr[875] = -_tmp547;
    result_value_ptr[876] = _tmp201*_tmp543;
    result_value_ptr[877] = _tmp167*_tmp545;
    result_value_ptr[878] = -_tmp202*_tmp543 + _tmp47*_tmp548 + _tmp547;
    result_value_ptr[879] = -_tmp203*_tmp543;
    result_value_ptr[880] = -_tmp142*_tmp37;
    result_value_ptr[881] = -_tmp100*_tmp70;
    result_value_ptr[882] = _tmp18;
    result_value_ptr[883] = -_tmp18 - _tmp47 - _tmp546;
    result_value_ptr[884] = _tmp549;
    result_value_ptr[885] = -_tmp467*_tmp550;
    result_value_ptr[886] = -_tmp187*_tmp551;
    result_value_ptr[887] = -_tmp410*_tmp552;
    result_value_ptr[888] = -_tmp550*_tmp58;
    result_value_ptr[889] = -_tmp198*_tmp551;
    result_value_ptr[890] = -_tmp469*_tmp550;
    result_value_ptr[891] = _tmp200*_tmp551;
    result_value_ptr[892] = -_tmp45*_tmp550;
    result_value_ptr[893] = _tmp141*_tmp551;
    result_value_ptr[894] = _tmp181*_tmp550;
    result_value_ptr[895] = _tmp201*_tmp551;
    result_value_ptr[896] = -_tmp28*_tmp550;
    result_value_ptr[897] = -_tmp202*_tmp551;
    result_value_ptr[898] = -_tmp203*_tmp551 + _tmp437*_tmp552 + _tmp47*_tmp550;
    result_value_ptr[899] = -_tmp438*_tmp552;
    result_value_ptr[900] = -_tmp439*_tmp552;
    result_value_ptr[901] = _tmp440*_tmp552;
    result_value_ptr[902] = _tmp441*_tmp552;
    result_value_ptr[903] = -_tmp442*_tmp552;
    result_value_ptr[904] = -_tmp208*_tmp553;
    result_value_ptr[905] = -_tmp220*_tmp35;
    result_value_ptr[906] = -_tmp285*_tmp554;
    result_value_ptr[907] = _tmp173;
    result_value_ptr[908] = _tmp286*_tmp554;
    result_value_ptr[909] = _tmp105*_tmp553 - _tmp287*_tmp554 - _tmp35*_tmp458;
    result_value_ptr[910] = _tmp212*_tmp553;
    result_value_ptr[911] = -_tmp213*_tmp553;
    result_value_ptr[912] = -_tmp28*_tmp553;
    result_value_ptr[913] = _tmp216*_tmp553;
    result_value_ptr[914] = -_tmp228*_tmp35;
    result_value_ptr[915] = _tmp205 + 4;
    result_value_ptr[916] = _tmp173*_tmp3;
    result_value_ptr[917] = -_tmp288*_tmp554;
    result_value_ptr[918] = _tmp289*_tmp554;
    result_value_ptr[919] = _tmp189*_tmp554;
    result_value_ptr[920] = _tmp290*_tmp554;
    result_value_ptr[921] = -_tmp208*_tmp555;
    result_value_ptr[922] = -_tmp18 + 2*_tmp556;
    result_value_ptr[923] = _tmp292*_tmp557;
    result_value_ptr[924] = -_tmp237*_tmp558;
    result_value_ptr[925] = -_tmp557*x2;
    result_value_ptr[926] = _tmp105*_tmp555;
    result_value_ptr[927] = -_tmp127*_tmp558 + _tmp2*_tmp214*_tmp28 + _tmp294*_tmp557;
    result_value_ptr[928] = -_tmp28*_tmp559;
    result_value_ptr[929] = -std::pow(_tmp28, Scalar(2))*x3;
    result_value_ptr[930] = _tmp216*_tmp555;
    result_value_ptr[931] = -_tmp238*_tmp558;
    result_value_ptr[932] = -_tmp239*_tmp558;
    result_value_ptr[933] = _tmp241*_tmp558;
    result_value_ptr[934] = _tmp243*_tmp558;
    result_value_ptr[935] = _tmp295*_tmp557;
    result_value_ptr[936] = -_tmp296*_tmp557;
    result_value_ptr[937] = -_tmp297*_tmp557;
    result_value_ptr[938] = -_tmp299*_tmp557;
    result_value_ptr[939] = _tmp208*_tmp560;
    result_value_ptr[940] = _tmp248*_tmp562;
    result_value_ptr[941] = -_tmp303*_tmp563;
    result_value_ptr[942] = -_tmp253*_tmp562;
    result_value_ptr[943] = -_tmp307*_tmp563;
    result_value_ptr[944] = -_tmp105*_tmp560;
    result_value_ptr[945] = -_tmp115 - _tmp206;
    result_value_ptr[946] = _tmp213*_tmp560 + _tmp254*_tmp562 + _tmp308*_tmp563;
    result_value_ptr[947] = _tmp28*_tmp560;
    result_value_ptr[948] = -_tmp216*_tmp560;
    result_value_ptr[949] = _tmp11*_tmp562;
    result_value_ptr[950] = -_tmp255*_tmp564;
    result_value_ptr[951] = 4 - _tmp265;
    result_value_ptr[952] = -_tmp564*x4;
    result_value_ptr[953] = -_tmp484*_tmp563;
    result_value_ptr[954] = -_tmp563*_tmp81;
    result_value_ptr[955] = _tmp310*_tmp563;
    result_value_ptr[956] = _tmp485*_tmp563;
    result_value_ptr[957] = _tmp208*_tmp227;
    result_value_ptr[958] = _tmp226*_tmp262;
    result_value_ptr[959] = _tmp102*_tmp251;
    result_value_ptr[960] = -_tmp226*_tmp263;
    result_value_ptr[961] = _tmp102*_tmp322;
    result_value_ptr[962] = -_tmp105*_tmp227;
    result_value_ptr[963] = -_tmp2*_tmp84*_tmp97*x3;
    result_value_ptr[964] = _tmp213*_tmp227;
    result_value_ptr[965] = _tmp102*_tmp325 + _tmp226*_tmp257 + _tmp227*_tmp28;
    result_value_ptr[966] = -_tmp216*_tmp227;
    result_value_ptr[967] = -_tmp226*_tmp45;
    result_value_ptr[968] = _tmp226*_tmp264;
    result_value_ptr[969] = _tmp226*_tmp265;
    result_value_ptr[970] = _tmp226*_tmp266;
    result_value_ptr[971] = -_tmp324*_tmp327;
    result_value_ptr[972] = -_tmp102*_tmp427;
    result_value_ptr[973] = -_tmp102*_tmp565;
    result_value_ptr[974] = _tmp102*_tmp274;
    result_value_ptr[975] = _tmp208*_tmp566;
    result_value_ptr[976] = _tmp267*_tmp567;
    result_value_ptr[977] = _tmp493*_tmp568;
    result_value_ptr[978] = _tmp567*_tmp67;
    result_value_ptr[979] = -_tmp110*_tmp568;
    result_value_ptr[980] = -_tmp105*_tmp566;
    result_value_ptr[981] = -_tmp212*_tmp566;
    result_value_ptr[982] = _tmp213*_tmp566;
    result_value_ptr[983] = _tmp28*_tmp566;
    result_value_ptr[984] = -_tmp216*_tmp566 - _tmp226*_tmp568 + _tmp271*_tmp567;
    result_value_ptr[985] = _tmp273*_tmp567;
    result_value_ptr[986] = _tmp274*_tmp567;
    result_value_ptr[987] = _tmp276*_tmp567;
    result_value_ptr[988] = -_tmp277*_tmp567;
    result_value_ptr[989] = _tmp341*_tmp568;
    result_value_ptr[990] = _tmp156*_tmp568;
    result_value_ptr[991] = _tmp343*_tmp568;
    result_value_ptr[992] = -_tmp344*_tmp568;
    result_value_ptr[993] = _tmp220;
    result_value_ptr[994] = -_tmp101;
    result_value_ptr[995] = -_tmp51*_tmp569;
    result_value_ptr[996] = _tmp36;
    result_value_ptr[997] = -_tmp127*_tmp237;
    result_value_ptr[998] = _tmp503*_tmp569;
    result_value_ptr[999] = _tmp458;
    result_value_ptr[1000] = -std::pow(_tmp127, Scalar(2));
    result_value_ptr[1001] = _tmp228 + _tmp504*_tmp569 - _tmp570*_tmp67;
    result_value_ptr[1002] = -4;
    result_value_ptr[1003] = -_tmp571;
    result_value_ptr[1004] = -_tmp127*_tmp239;
    result_value_ptr[1005] = _tmp127*_tmp241;
    result_value_ptr[1006] = _tmp127*_tmp243;
    result_value_ptr[1007] = _tmp569*x1;
    result_value_ptr[1008] = _tmp349*_tmp569;
    result_value_ptr[1009] = -_tmp350 - _tmp80;
    result_value_ptr[1010] = -_tmp351*_tmp569;
    result_value_ptr[1011] = _tmp220*_tmp572;
    result_value_ptr[1012] = _tmp248*_tmp574;
    result_value_ptr[1013] = -_tmp355*_tmp575;
    result_value_ptr[1014] = -_tmp572*x4;
    result_value_ptr[1015] = -_tmp253*_tmp574;
    result_value_ptr[1016] = -_tmp357*_tmp575;
    result_value_ptr[1017] = _tmp458*_tmp572;
    result_value_ptr[1018] = _tmp254*_tmp574;
    result_value_ptr[1019] = _tmp228*_tmp572;
    result_value_ptr[1020] = _tmp115 + _tmp184 + _tmp205 - _tmp372 + _tmp511*_tmp573 + _tmp515 - 4;
    result_value_ptr[1021] = -_tmp571*_tmp572;
    result_value_ptr[1022] = -_tmp574*_tmp576;
    result_value_ptr[1023] = -_tmp29*_tmp573;
    result_value_ptr[1024] = -_tmp102*_tmp573*_tmp84;
    result_value_ptr[1025] = -_tmp507*_tmp575;
    result_value_ptr[1026] = -_tmp359*_tmp575;
    result_value_ptr[1027] = _tmp508*_tmp575;
    result_value_ptr[1028] = -_tmp363*_tmp575;
    result_value_ptr[1029] = -_tmp220*_tmp577;
    result_value_ptr[1030] = _tmp262*_tmp578;
    result_value_ptr[1031] = -_tmp368*_tmp579;
    result_value_ptr[1032] = _tmp577*x4;
    result_value_ptr[1033] = -_tmp263*_tmp578;
    result_value_ptr[1034] = _tmp371*_tmp579;
    result_value_ptr[1035] = -_tmp458*_tmp577;
    result_value_ptr[1036] = _tmp257*_tmp578;
    result_value_ptr[1037] = -_tmp228*_tmp577;
    result_value_ptr[1038] = _tmp115*x1 + _tmp536 - 8*x4;
    result_value_ptr[1039] = _tmp3*_tmp577*x4 - _tmp30*_tmp35*_tmp97 - _tmp45*_tmp578;
    result_value_ptr[1040] = _tmp264*_tmp578;
    result_value_ptr[1041] = _tmp265*_tmp578;
    result_value_ptr[1042] = _tmp215*_tmp26*_tmp513;
    result_value_ptr[1043] = -_tmp177*_tmp249;
    result_value_ptr[1044] = _tmp189*_tmp538;
    result_value_ptr[1045] = -_tmp317*_tmp580;
    result_value_ptr[1046] = -_tmp35*_tmp581;
    result_value_ptr[1047] = -_tmp220*_tmp582;
    result_value_ptr[1048] = -_tmp267*_tmp583;
    result_value_ptr[1049] = -_tmp381*_tmp584;
    result_value_ptr[1050] = _tmp582*x4;
    result_value_ptr[1051] = -_tmp583*_tmp67;
    result_value_ptr[1052] = _tmp165*_tmp584;
    result_value_ptr[1053] = -_tmp458*_tmp582;
    result_value_ptr[1054] = -_tmp271*_tmp583;
    result_value_ptr[1055] = -_tmp228*_tmp582;
    result_value_ptr[1056] = _tmp142 + _tmp59 - 8;
    result_value_ptr[1057] = _tmp571*_tmp582;
    result_value_ptr[1058] = -_tmp273*_tmp583 - _tmp382*_tmp584;
    result_value_ptr[1059] = -_tmp274*_tmp583;
    result_value_ptr[1060] = -_tmp276*_tmp583;
    result_value_ptr[1061] = _tmp277*_tmp583;
    result_value_ptr[1062] = _tmp585;
    result_value_ptr[1063] = -_tmp520*_tmp584;
    result_value_ptr[1064] = Scalar(3.0)*_tmp44 + _tmp586;
    result_value_ptr[1065] = -_tmp585;
    result_value_ptr[1066] = _tmp527;
    result_value_ptr[1067] = -_tmp248*_tmp587;
    result_value_ptr[1068] = _tmp163*_tmp527;
    result_value_ptr[1069] = _tmp215*_tmp237;
    result_value_ptr[1070] = _tmp253*_tmp587;
    result_value_ptr[1071] = _tmp527*x4;
    result_value_ptr[1072] = _tmp570;
    result_value_ptr[1073] = -_tmp254*_tmp587;
    result_value_ptr[1074] = std::pow(_tmp215, Scalar(2))*_tmp67;
    result_value_ptr[1075] = -Scalar(1)/Scalar(4)*_tmp342;
    result_value_ptr[1076] = _tmp215*_tmp239 + (Scalar(1)/Scalar(4))*_tmp255*_tmp345 - _tmp42*_tmp527;
    result_value_ptr[1077] = -_tmp215*_tmp241;
    result_value_ptr[1078] = -_tmp215*_tmp243;
    result_value_ptr[1079] = _tmp14;
    result_value_ptr[1080] = (Scalar(1)/Scalar(4))*_tmp346;
    result_value_ptr[1081] = -_tmp35*_tmp527;
    result_value_ptr[1082] = _tmp136 + Scalar(-1.0);
    result_value_ptr[1083] = _tmp393*_tmp527;
    result_value_ptr[1084] = -_tmp394*_tmp527;
    result_value_ptr[1085] = Scalar(-2.0);
    result_value_ptr[1086] = _tmp262*_tmp588;
    result_value_ptr[1087] = -_tmp399*_tmp590;
    result_value_ptr[1088] = Scalar(2.0)*_tmp23 - Scalar(1.0)*x4;
    result_value_ptr[1089] = -_tmp263*_tmp588;
    result_value_ptr[1090] = _tmp400*_tmp590;
    result_value_ptr[1091] = -_tmp591 + Scalar(-1.0);
    result_value_ptr[1092] = _tmp257*_tmp588;
    result_value_ptr[1093] = -Scalar(1.0)*_tmp238;
    result_value_ptr[1094] = -_tmp45*_tmp588;
    result_value_ptr[1095] = Scalar(1.0)*_tmp148*_tmp7 - _tmp591;
    result_value_ptr[1096] = Scalar(1.0)*_tmp241 + _tmp264*_tmp588 + _tmp531*_tmp589;
    result_value_ptr[1097] = -Scalar(1.0)*_tmp242 + Scalar(-1.0);
    result_value_ptr[1098] = _tmp265*_tmp588;
    result_value_ptr[1099] = _tmp266*_tmp588;
    result_value_ptr[1100] = -_tmp403*_tmp590;
    result_value_ptr[1101] = _tmp404*_tmp590;
    result_value_ptr[1102] = -_tmp105*_tmp590;
    result_value_ptr[1103] = _tmp532*_tmp589;
    result_value_ptr[1104] = _tmp1*_tmp427;
    result_value_ptr[1105] = -_tmp267*_tmp592;
    result_value_ptr[1106] = -_tmp409*_tmp593;
    result_value_ptr[1107] = _tmp237*_tmp594;
    result_value_ptr[1108] = -_tmp592*_tmp67;
    result_value_ptr[1109] = -_tmp412*_tmp593;
    result_value_ptr[1110] = _tmp127*_tmp594;
    result_value_ptr[1111] = -_tmp271*_tmp592;
    result_value_ptr[1112] = _tmp238*_tmp594;
    result_value_ptr[1113] = -_tmp273*_tmp592;
    result_value_ptr[1114] = _tmp239*_tmp594;
    result_value_ptr[1115] = -_tmp1*_tmp595;
    result_value_ptr[1116] = -_tmp274*_tmp592 + _tmp415*_tmp593 - _tmp594*(-_tmp154*x0 - 1);
    result_value_ptr[1117] = -_tmp276*_tmp592;
    result_value_ptr[1118] = _tmp277*_tmp592;
    result_value_ptr[1119] = -_tmp416*_tmp593;
    result_value_ptr[1120] = -_tmp278*_tmp593;
    result_value_ptr[1121] = _tmp417*_tmp593;
    result_value_ptr[1122] = -_tmp418*_tmp593;
    result_value_ptr[1123] = -_tmp233*_tmp248;
    result_value_ptr[1124] = -_tmp262*_tmp596;
    result_value_ptr[1125] = _tmp423*_tmp598;
    result_value_ptr[1126] = _tmp233*_tmp253;
    result_value_ptr[1127] = _tmp263*_tmp596;
    result_value_ptr[1128] = -_tmp139*_tmp598;
    result_value_ptr[1129] = -_tmp233*_tmp254;
    result_value_ptr[1130] = -_tmp257*_tmp596;
    result_value_ptr[1131] = _tmp385;
    result_value_ptr[1132] = _tmp45*_tmp596;
    result_value_ptr[1133] = _tmp233*_tmp576;
    result_value_ptr[1134] = -_tmp264*_tmp596;
    result_value_ptr[1135] = -_tmp265*_tmp596 + _tmp298*_tmp597 + _tmp489;
    result_value_ptr[1136] = _tmp18*_tmp599;
    result_value_ptr[1137] = -_tmp266*_tmp596;
    result_value_ptr[1138] = -_tmp597*_tmp600;
    result_value_ptr[1139] = -_tmp428*_tmp598;
    result_value_ptr[1140] = -_tmp293*_tmp597;
    result_value_ptr[1141] = -_tmp177*_tmp396*_tmp597;
    result_value_ptr[1142] = -_tmp248*_tmp601;
    result_value_ptr[1143] = _tmp544*_tmp603;
    result_value_ptr[1144] = _tmp253*_tmp601;
    result_value_ptr[1145] = _tmp602*_tmp604;
    result_value_ptr[1146] = -_tmp254*_tmp601;
    result_value_ptr[1147] = -_tmp169*_tmp605;
    result_value_ptr[1148] = _tmp576*_tmp601;
    result_value_ptr[1149] = _tmp140*_tmp605;
    result_value_ptr[1150] = -_tmp483*_tmp602 + _tmp599*_tmp605;
    result_value_ptr[1151] = -_tmp603*_tmp70;
    result_value_ptr[1152] = _tmp602*x1;
    result_value_ptr[1153] = -_tmp602*_tmp606;
    result_value_ptr[1154] = _tmp107*_tmp602;
    result_value_ptr[1155] = -_tmp262*_tmp607;
    result_value_ptr[1156] = _tmp267*_tmp608;
    result_value_ptr[1157] = _tmp28*_tmp410;
    result_value_ptr[1158] = _tmp263*_tmp607;
    result_value_ptr[1159] = _tmp608*_tmp67;
    result_value_ptr[1160] = -_tmp28*_tmp437;
    result_value_ptr[1161] = -_tmp257*_tmp607;
    result_value_ptr[1162] = _tmp271*_tmp608;
    result_value_ptr[1163] = _tmp45*_tmp607;
    result_value_ptr[1164] = _tmp273*_tmp608;
    result_value_ptr[1165] = -_tmp264*_tmp607;
    result_value_ptr[1166] = _tmp274*_tmp608;
    result_value_ptr[1167] = -_tmp265*_tmp607;
    result_value_ptr[1168] = _tmp276*_tmp608;
    result_value_ptr[1169] = -_tmp266*_tmp607 - _tmp277*_tmp608 + _tmp28*_tmp438;
    result_value_ptr[1170] = _tmp28*_tmp439;
    result_value_ptr[1171] = -_tmp28*_tmp440;
    result_value_ptr[1172] = -_tmp28*_tmp441;
    result_value_ptr[1173] = _tmp28*_tmp442;
    result_value_ptr[1174] = _tmp284*_tmp609*_tmp8;
    result_value_ptr[1175] = -_tmp290*_tmp292;
    result_value_ptr[1176] = _tmp51*x0;
    result_value_ptr[1177] = -_tmp205*_tmp208;
    result_value_ptr[1178] = _tmp290*x2;
    result_value_ptr[1179] = -_tmp134*_tmp84;
    result_value_ptr[1180] = _tmp287*_tmp610;
    result_value_ptr[1181] = -_tmp290*_tmp294;
    result_value_ptr[1182] = -_tmp148*_tmp514;
    result_value_ptr[1183] = -_tmp11 + _tmp288*_tmp610 - _tmp290*_tmp295;
    result_value_ptr[1184] = -_tmp289*_tmp610;
    result_value_ptr[1185] = -_tmp609;
    result_value_ptr[1186] = -_tmp290*_tmp610;
    result_value_ptr[1187] = _tmp290*_tmp296;
    result_value_ptr[1188] = _tmp290*_tmp297;
    result_value_ptr[1189] = _tmp290*_tmp299;
    result_value_ptr[1190] = -_tmp349*x0;
    result_value_ptr[1191] = _tmp76;
    result_value_ptr[1192] = _tmp351*x0;
    result_value_ptr[1193] = _tmp285*_tmp30;
    result_value_ptr[1194] = -_tmp303*_tmp611;
    result_value_ptr[1195] = -_tmp355*_tmp613;
    result_value_ptr[1196] = -_tmp130*_tmp473;
    result_value_ptr[1197] = -_tmp307*_tmp611;
    result_value_ptr[1198] = -_tmp357*_tmp613;
    result_value_ptr[1199] = _tmp287*_tmp30;
    result_value_ptr[1200] = _tmp308*_tmp611;
    result_value_ptr[1201] = _tmp47*_tmp612;
    result_value_ptr[1202] = _tmp288*_tmp30;
    result_value_ptr[1203] = -_tmp275*_tmp29*_tmp311 - _tmp29*_tmp309*_tmp320 - _tmp312*_tmp612*_tmp72;
    result_value_ptr[1204] = -_tmp47*_tmp614;
    result_value_ptr[1205] = -_tmp290*_tmp30;
    result_value_ptr[1206] = -_tmp611*_tmp81;
    result_value_ptr[1207] = _tmp310*_tmp611;
    result_value_ptr[1208] = _tmp485*_tmp611;
    result_value_ptr[1209] = -_tmp359*_tmp613;
    result_value_ptr[1210] = _tmp214*_tmp361*_tmp612;
    result_value_ptr[1211] = -_tmp363*_tmp613;
    result_value_ptr[1212] = _tmp150*_tmp284*_tmp615*x2;
    result_value_ptr[1213] = _tmp319;
    result_value_ptr[1214] = -_tmp368*_tmp616;
    result_value_ptr[1215] = -_tmp205*_tmp615*_tmp84;
    result_value_ptr[1216] = _tmp323;
    result_value_ptr[1217] = _tmp371*_tmp616;
    result_value_ptr[1218] = _tmp287*_tmp617;
    result_value_ptr[1219] = _tmp326;
    result_value_ptr[1220] = -_tmp314*_tmp595;
    result_value_ptr[1221] = _tmp288*_tmp617;
    result_value_ptr[1222] = -_tmp289*_tmp617;
    result_value_ptr[1223] = -_tmp11*_tmp127*_tmp177 - _tmp328 - _tmp561*_tmp615;
    result_value_ptr[1224] = -_tmp290*_tmp617;
    result_value_ptr[1225] = -_tmp329;
    result_value_ptr[1226] = -_tmp331;
    result_value_ptr[1227] = _tmp332;
    result_value_ptr[1228] = _tmp127*_tmp189*_tmp67;
    result_value_ptr[1229] = -_tmp539*_tmp580;
    result_value_ptr[1230] = -_tmp127*_tmp581;
    result_value_ptr[1231] = -_tmp101*_tmp284*_tmp561;
    result_value_ptr[1232] = _tmp493*_tmp618;
    result_value_ptr[1233] = _tmp208 + _tmp30;
    result_value_ptr[1234] = _tmp101*_tmp155*_tmp205;
    result_value_ptr[1235] = -_tmp110*_tmp618;
    result_value_ptr[1236] = -_tmp267;
    result_value_ptr[1237] = -_tmp287*_tmp619;
    result_value_ptr[1238] = -_tmp226*_tmp618;
    result_value_ptr[1239] = _tmp142 - _tmp427;
    result_value_ptr[1240] = -_tmp288*_tmp619;
    result_value_ptr[1241] = _tmp289*_tmp619;
    result_value_ptr[1242] = _tmp101*_tmp614;
    result_value_ptr[1243] = -_tmp142 + _tmp290*_tmp619 + _tmp341*_tmp618;
    result_value_ptr[1244] = _tmp156*_tmp618;
    result_value_ptr[1245] = _tmp343*_tmp618;
    result_value_ptr[1246] = -_tmp344*_tmp618;
    result_value_ptr[1247] = _tmp100*_tmp386;
    result_value_ptr[1248] = Scalar(-3.0);
    result_value_ptr[1249] = _tmp142;
    result_value_ptr[1250] = _tmp292*_tmp620;
    result_value_ptr[1251] = _tmp303*_tmp622;
    result_value_ptr[1252] = -_tmp163*_tmp623;
    result_value_ptr[1253] = -_tmp620*x2;
    result_value_ptr[1254] = _tmp307*_tmp622;
    result_value_ptr[1255] = -_tmp623*x4;
    result_value_ptr[1256] = _tmp294*_tmp620;
    result_value_ptr[1257] = -_tmp308*_tmp622;
    result_value_ptr[1258] = _tmp42*_tmp623;
    result_value_ptr[1259] = _tmp295*_tmp620;
    result_value_ptr[1260] = _tmp298*_tmp309*_tmp621;
    result_value_ptr[1261] = -_tmp296*_tmp620 + _tmp35*_tmp623 + _tmp622*_tmp81;
    result_value_ptr[1262] = -_tmp297*_tmp620;
    result_value_ptr[1263] = -_tmp299*_tmp620;
    result_value_ptr[1264] = -_tmp310*_tmp622;
    result_value_ptr[1265] = 3 - _tmp424;
    result_value_ptr[1266] = -_tmp391 - Scalar(0.5)*x2 + Scalar(0.5)*x4;
    result_value_ptr[1267] = -_tmp393*_tmp623;
    result_value_ptr[1268] = _tmp394*_tmp623;
    result_value_ptr[1269] = _tmp292*_tmp624;
    result_value_ptr[1270] = -_tmp306;
    result_value_ptr[1271] = _tmp399*_tmp625;
    result_value_ptr[1272] = -_tmp624*x2;
    result_value_ptr[1273] = -_tmp322*x2;
    result_value_ptr[1274] = -_tmp400*_tmp625;
    result_value_ptr[1275] = _tmp294*_tmp624;
    result_value_ptr[1276] = -_tmp325*x2;
    result_value_ptr[1277] = -_tmp402*_tmp625;
    result_value_ptr[1278] = _tmp295*_tmp624;
    result_value_ptr[1279] = _tmp327*_tmp65;
    result_value_ptr[1280] = -_tmp296*_tmp624;
    result_value_ptr[1281] = -_tmp297*_tmp624 + 4*_tmp37 + _tmp403*_tmp625;
    result_value_ptr[1282] = -_tmp299*_tmp624;
    result_value_ptr[1283] = _tmp330*_tmp37;
    result_value_ptr[1284] = -_tmp274*x2;
    result_value_ptr[1285] = -_tmp404*_tmp625;
    result_value_ptr[1286] = _tmp105*_tmp625;
    result_value_ptr[1287] = -_tmp406*_tmp625;
    result_value_ptr[1288] = _tmp292*_tmp626;
    result_value_ptr[1289] = _tmp339*_tmp92;
    result_value_ptr[1290] = _tmp409*_tmp627;
    result_value_ptr[1291] = -_tmp626*x2;
    result_value_ptr[1292] = -_tmp229 - _tmp628;
    result_value_ptr[1293] = _tmp412*_tmp627;
    result_value_ptr[1294] = _tmp294*_tmp626;
    result_value_ptr[1295] = -_tmp229 + _tmp628;
    result_value_ptr[1296] = -_tmp415*_tmp627;
    result_value_ptr[1297] = _tmp295*_tmp626;
    result_value_ptr[1298] = _tmp13*_tmp229 + _tmp424;
    result_value_ptr[1299] = -_tmp296*_tmp626;
    result_value_ptr[1300] = -_tmp297*_tmp626;
    result_value_ptr[1301] = -_tmp299*_tmp626 + _tmp416*_tmp627 + _tmp76 - 12;
    result_value_ptr[1302] = -_tmp189*_tmp92 + _tmp424 + _tmp628;
    result_value_ptr[1303] = _tmp229 - _tmp350 - _tmp628;
    result_value_ptr[1304] = _tmp278*_tmp627;
    result_value_ptr[1305] = -_tmp417*_tmp627;
    result_value_ptr[1306] = _tmp418*_tmp627;
    result_value_ptr[1307] = _tmp303*_tmp630;
    result_value_ptr[1308] = _tmp251*_tmp95;
    result_value_ptr[1309] = _tmp205*_tmp632*_tmp67;
    result_value_ptr[1310] = _tmp307*_tmp630;
    result_value_ptr[1311] = _tmp322*_tmp95;
    result_value_ptr[1312] = -_tmp139*_tmp633;
    result_value_ptr[1313] = -_tmp308*_tmp630;
    result_value_ptr[1314] = _tmp325*_tmp95;
    result_value_ptr[1315] = 6*_tmp632;
    result_value_ptr[1316] = _tmp484*_tmp630;
    result_value_ptr[1317] = -_tmp327*_tmp95*x3;
    result_value_ptr[1318] = _tmp630*_tmp81;
    result_value_ptr[1319] = -_tmp427*_tmp95;
    result_value_ptr[1320] = -_tmp310*_tmp630 - _tmp425*_tmp549*_tmp632 - _tmp565*_tmp95;
    result_value_ptr[1321] = -_tmp485*_tmp630;
    result_value_ptr[1322] = _tmp274*_tmp95;
    result_value_ptr[1323] = -_tmp428*_tmp633;
    result_value_ptr[1324] = -_tmp1*_tmp633;
    result_value_ptr[1325] = -_tmp154*_tmp186*_tmp47*_tmp631;
    result_value_ptr[1326] = _tmp303*_tmp635;
    result_value_ptr[1327] = -_tmp233*_tmp339;
    result_value_ptr[1328] = _tmp115*_tmp544;
    result_value_ptr[1329] = _tmp307*_tmp635;
    result_value_ptr[1330] = _tmp110*_tmp140;
    result_value_ptr[1331] = _tmp205*_tmp548;
    result_value_ptr[1332] = -_tmp308*_tmp635;
    result_value_ptr[1333] = _tmp140*_tmp226;
    result_value_ptr[1334] = -8*_tmp360;
    result_value_ptr[1335] = _tmp309*_tmp472*_tmp634;
    result_value_ptr[1336] = -_tmp140*_tmp341;
    result_value_ptr[1337] = _tmp635*_tmp81;
    result_value_ptr[1338] = -_tmp140*_tmp156;
    result_value_ptr[1339] = -_tmp310*_tmp635;
    result_value_ptr[1340] = -_tmp115*_tmp70 - 4*_tmp13*_tmp242*_tmp634 - _tmp140*_tmp343;
    result_value_ptr[1341] = _tmp140*_tmp344;
    result_value_ptr[1342] = _tmp142;
    result_value_ptr[1343] = -_tmp142 - _tmp205 - _tmp472;
    result_value_ptr[1344] = 8*_tmp23;
    result_value_ptr[1345] = -_tmp242*x1;
    result_value_ptr[1346] = -_tmp493*_tmp636;
    result_value_ptr[1347] = -_tmp410*_tmp637;
    result_value_ptr[1348] = -_tmp322*x0;
    result_value_ptr[1349] = _tmp110*_tmp636;
    result_value_ptr[1350] = _tmp437*_tmp637;
    result_value_ptr[1351] = -_tmp325*x0;
    result_value_ptr[1352] = _tmp226*_tmp636;
    result_value_ptr[1353] = -_tmp438*_tmp637;
    result_value_ptr[1354] = _tmp26*_tmp327;
    result_value_ptr[1355] = -_tmp341*_tmp636;
    result_value_ptr[1356] = 4*_tmp84;
    result_value_ptr[1357] = -_tmp156*_tmp636;
    result_value_ptr[1358] = _tmp330*_tmp84;
    result_value_ptr[1359] = -_tmp343*_tmp636;
    result_value_ptr[1360] = -_tmp274*x0 + _tmp344*_tmp636 - _tmp439*_tmp637;
    result_value_ptr[1361] = _tmp440*_tmp637;
    result_value_ptr[1362] = _tmp441*_tmp637;
    result_value_ptr[1363] = -_tmp442*_tmp637;
    result_value_ptr[1364] = -_tmp51*_tmp629;
    result_value_ptr[1365] = _tmp355*x1;
    result_value_ptr[1366] = _tmp163*_tmp77;
    result_value_ptr[1367] = _tmp503*_tmp629;
    result_value_ptr[1368] = _tmp357*x1;
    result_value_ptr[1369] = _tmp77*x4;
    result_value_ptr[1370] = _tmp504*_tmp629;
    result_value_ptr[1371] = _tmp204;
    result_value_ptr[1372] = -_tmp42*_tmp77;
    result_value_ptr[1373] = _tmp629*x1;
    result_value_ptr[1374] = _tmp312*_tmp59;
    result_value_ptr[1375] = -_tmp35*_tmp77;
    result_value_ptr[1376] = _tmp349*_tmp629 + _tmp359*x1 + _tmp391 + Scalar(1.5);
    result_value_ptr[1377] = 6 - 12*x4;
    result_value_ptr[1378] = -_tmp351*_tmp629;
    result_value_ptr[1379] = -_tmp361*_tmp78;
    result_value_ptr[1380] = _tmp363*x1;
    result_value_ptr[1381] = _tmp393*_tmp77;
    result_value_ptr[1382] = -_tmp394*_tmp77;
    result_value_ptr[1383] = -_tmp30*_tmp51;
    result_value_ptr[1384] = _tmp368*_tmp638;
    result_value_ptr[1385] = _tmp399*_tmp639;
    result_value_ptr[1386] = _tmp134*_tmp214*_tmp29;
    result_value_ptr[1387] = -_tmp371*_tmp638;
    result_value_ptr[1388] = -_tmp400*_tmp639;
    result_value_ptr[1389] = _tmp148*_tmp155*_tmp199;
    result_value_ptr[1390] = _tmp638*_tmp640;
    result_value_ptr[1391] = -_tmp402*_tmp639;
    result_value_ptr[1392] = _tmp13*_tmp29;
    result_value_ptr[1393] = _tmp638*_tmp641;
    result_value_ptr[1394] = _tmp403*_tmp639;
    result_value_ptr[1395] = _tmp30*_tmp349;
    result_value_ptr[1396] = -12*_tmp26 - _tmp404*_tmp639 - _tmp638*_tmp642;
    result_value_ptr[1397] = -_tmp30*_tmp351;
    result_value_ptr[1398] = _tmp638*_tmp643;
    result_value_ptr[1399] = _tmp638*_tmp644;
    result_value_ptr[1400] = _tmp105*_tmp639;
    result_value_ptr[1401] = -_tmp406*_tmp639;
    result_value_ptr[1402] = -_tmp51*_tmp646;
    result_value_ptr[1403] = -_tmp381*_tmp648;
    result_value_ptr[1404] = -_tmp409*_tmp650;
    result_value_ptr[1405] = _tmp503*_tmp646;
    result_value_ptr[1406] = _tmp165*_tmp648;
    result_value_ptr[1407] = -_tmp105*_tmp649*_tmp78;
    result_value_ptr[1408] = _tmp504*_tmp646;
    result_value_ptr[1409] = -_tmp382*_tmp648;
    result_value_ptr[1410] = _tmp414*_tmp649*_tmp84;
    result_value_ptr[1411] = _tmp646*x1;
    result_value_ptr[1412] = _tmp651;
    result_value_ptr[1413] = -_tmp416*_tmp650;
    result_value_ptr[1414] = _tmp349*_tmp646;
    result_value_ptr[1415] = -6*_tmp645 - _tmp76*x1;
    result_value_ptr[1416] = -_tmp189*_tmp386*_tmp647 - _tmp450*_tmp649 - _tmp646*(_tmp1*_tmp7 + x1);
    result_value_ptr[1417] = _tmp586*_tmp647;
    result_value_ptr[1418] = -_tmp651;
    result_value_ptr[1419] = _tmp417*_tmp650;
    result_value_ptr[1420] = -_tmp418*_tmp650;
    result_value_ptr[1421] = _tmp355*_tmp652;
    result_value_ptr[1422] = -_tmp368*_tmp653;
    result_value_ptr[1423] = _tmp357*_tmp652;
    result_value_ptr[1424] = _tmp371*_tmp653;
    result_value_ptr[1425] = -_tmp270 - _tmp47 - 8;
    result_value_ptr[1426] = -_tmp640*_tmp653;
    result_value_ptr[1427] = _tmp507*_tmp652;
    result_value_ptr[1428] = -_tmp641*_tmp653;
    result_value_ptr[1429] = _tmp359*_tmp652;
    result_value_ptr[1430] = _tmp642*_tmp653;
    result_value_ptr[1431] = -_tmp508*_tmp652 - _tmp643*_tmp653;
    result_value_ptr[1432] = _tmp363*_tmp652;
    result_value_ptr[1433] = -_tmp644*_tmp653;
    result_value_ptr[1434] = -_tmp140*_tmp355;
    result_value_ptr[1435] = _tmp381*_tmp654;
    result_value_ptr[1436] = -_tmp544*_tmp656;
    result_value_ptr[1437] = -_tmp140*_tmp357;
    result_value_ptr[1438] = -_tmp165*_tmp654;
    result_value_ptr[1439] = -_tmp604*_tmp655;
    result_value_ptr[1440] = _tmp427;
    result_value_ptr[1441] = _tmp382*_tmp654;
    result_value_ptr[1442] = _tmp483*_tmp655;
    result_value_ptr[1443] = -_tmp312*_tmp489;
    result_value_ptr[1444] = -_tmp657;
    result_value_ptr[1445] = _tmp656*_tmp70;
    result_value_ptr[1446] = -_tmp140*_tmp359;
    result_value_ptr[1447] = _tmp520*_tmp654;
    result_value_ptr[1448] = _tmp183*_tmp361;
    result_value_ptr[1449] = -_tmp140*_tmp363 + Scalar(1.5)*_tmp65 - _tmp655*x1 - Scalar(1.5)*x2 + Scalar(-1.5);
    result_value_ptr[1450] = _tmp657;
    result_value_ptr[1451] = _tmp606*_tmp655;
    result_value_ptr[1452] = -_tmp107*_tmp655;
    result_value_ptr[1453] = -_tmp381*_tmp658;
    result_value_ptr[1454] = _tmp410*_tmp659;
    result_value_ptr[1455] = _tmp165*_tmp658;
    result_value_ptr[1456] = -_tmp437*_tmp659;
    result_value_ptr[1457] = -_tmp382*_tmp658;
    result_value_ptr[1458] = _tmp438*_tmp659;
    result_value_ptr[1459] = _tmp660;
    result_value_ptr[1460] = _tmp439*_tmp659;
    result_value_ptr[1461] = -_tmp520*_tmp658;
    result_value_ptr[1462] = Scalar(0.375)*_tmp44;
    result_value_ptr[1463] = -_tmp440*_tmp659 - _tmp660;
    result_value_ptr[1464] = -_tmp441*_tmp659;
    result_value_ptr[1465] = _tmp442*_tmp659;
    result_value_ptr[1466] = _tmp163*_tmp232;
    result_value_ptr[1467] = -_tmp399*_tmp661;
    result_value_ptr[1468] = -_tmp423*_tmp663;
    result_value_ptr[1469] = _tmp232*x4;
    result_value_ptr[1470] = _tmp400*_tmp661;
    result_value_ptr[1471] = _tmp139*_tmp663;
    result_value_ptr[1472] = -_tmp232*_tmp42;
    result_value_ptr[1473] = _tmp189*_tmp3*_tmp401;
    result_value_ptr[1474] = 3*_tmp662 - 6;
    result_value_ptr[1475] = -_tmp232*_tmp35;
    result_value_ptr[1476] = -_tmp403*_tmp661;
    result_value_ptr[1477] = _tmp426*_tmp663;
    result_value_ptr[1478] = _tmp128 + _tmp392;
    result_value_ptr[1479] = _tmp404*_tmp661;
    result_value_ptr[1480] = _tmp428*_tmp663;
    result_value_ptr[1481] = _tmp1*_tmp663 - _tmp106*_tmp3 + _tmp232*_tmp393;
    result_value_ptr[1482] = -_tmp232*_tmp394;
    result_value_ptr[1483] = _tmp406*_tmp661;
    result_value_ptr[1484] = _tmp429*_tmp663;
    result_value_ptr[1485] = -_tmp205*_tmp312*_tmp37;
    result_value_ptr[1486] = -_tmp110*_tmp409;
    result_value_ptr[1487] = -_tmp340*_tmp544;
    result_value_ptr[1488] = -_tmp199*_tmp312;
    result_value_ptr[1489] = -_tmp110*_tmp412;
    result_value_ptr[1490] = -_tmp226*_tmp604;
    result_value_ptr[1491] = _tmp42*_tmp664;
    result_value_ptr[1492] = _tmp110*_tmp415;
    result_value_ptr[1493] = _tmp226*_tmp483;
    result_value_ptr[1494] = _tmp35*_tmp664;
    result_value_ptr[1495] = -_tmp110*_tmp416;
    result_value_ptr[1496] = _tmp340*_tmp70;
    result_value_ptr[1497] = -_tmp147*_tmp312;
    result_value_ptr[1498] = -_tmp110*_tmp278;
    result_value_ptr[1499] = -_tmp226*x1;
    result_value_ptr[1500] = -_tmp393*_tmp664;
    result_value_ptr[1501] = _tmp110*_tmp417 + _tmp226*_tmp606 + _tmp394*_tmp664;
    result_value_ptr[1502] = -_tmp110*_tmp418;
    result_value_ptr[1503] = -_tmp107*_tmp226;
    result_value_ptr[1504] = -_tmp399;
    result_value_ptr[1505] = _tmp370*_tmp409;
    result_value_ptr[1506] = _tmp410*_tmp665;
    result_value_ptr[1507] = _tmp400;
    result_value_ptr[1508] = _tmp370*_tmp412;
    result_value_ptr[1509] = -_tmp437*_tmp665;
    result_value_ptr[1510] = _tmp402;
    result_value_ptr[1511] = -_tmp370*_tmp415;
    result_value_ptr[1512] = _tmp438*_tmp665;
    result_value_ptr[1513] = -_tmp403;
    result_value_ptr[1514] = _tmp370*_tmp416;
    result_value_ptr[1515] = _tmp439*_tmp665;
    result_value_ptr[1516] = _tmp404;
    result_value_ptr[1517] = _tmp278*_tmp370;
    result_value_ptr[1518] = -_tmp440*_tmp665;
    result_value_ptr[1519] = -_tmp105;
    result_value_ptr[1520] = -_tmp370*_tmp417;
    result_value_ptr[1521] = _tmp370*_tmp418 + _tmp406 - _tmp441*_tmp665;
    result_value_ptr[1522] = _tmp442*_tmp665;
    result_value_ptr[1523] = -_tmp122*_tmp47*_tmp642;
    result_value_ptr[1524] = -_tmp544*_tmp667;
    result_value_ptr[1525] = -Scalar(1)/Scalar(2)*_tmp242*_tmp44;
    result_value_ptr[1526] = _tmp139*_tmp668;
    result_value_ptr[1527] = -_tmp604*_tmp666;
    result_value_ptr[1528] = _tmp437*_tmp669;
    result_value_ptr[1529] = -_tmp122*_tmp298;
    result_value_ptr[1530] = _tmp483*_tmp666;
    result_value_ptr[1531] = -_tmp438*_tmp669;
    result_value_ptr[1532] = _tmp122*_tmp600;
    result_value_ptr[1533] = _tmp667*_tmp70;
    result_value_ptr[1534] = -_tmp439*_tmp669;
    result_value_ptr[1535] = _tmp428*_tmp668;
    result_value_ptr[1536] = -_tmp666*x1;
    result_value_ptr[1537] = _tmp440*_tmp669;
    result_value_ptr[1538] = _tmp122*_tmp293;
    result_value_ptr[1539] = _tmp606*_tmp666;
    result_value_ptr[1540] = _tmp154*_tmp81;
    result_value_ptr[1541] = -_tmp107*_tmp666 + _tmp122*_tmp154*_tmp177*x3 - _tmp23*_tmp260;

    return result;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
