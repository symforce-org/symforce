// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>
#include <Eigen/Sparse>

#include <sym/pose3.h>

namespace bundle_adjustment_fixed_size {

/**
 * This function was autogenerated. Do not modify by hand.
 *
 * Computes the linearization of the residual around the given state,
 * and returns the relevant information about the resulting linear system.
 *
 * Input args: The state to linearize around
 *
 * Output args:
 *     residual (Eigen::Matrix*): The residual vector
 *     jacobian: (72x26) jacobian of residual wrt args views_1_pose (6), landmarks_0_ (1),
 *               landmarks_1_ (1), landmarks_2_ (1), landmarks_3_ (1), landmarks_4_ (1),
 *               landmarks_5_ (1), landmarks_6_ (1), landmarks_7_ (1), landmarks_8_ (1),
 *               landmarks_9_ (1), landmarks_10_ (1), landmarks_11_ (1), landmarks_12_ (1),
 *               landmarks_13_ (1), landmarks_14_ (1), landmarks_15_ (1), landmarks_16_ (1),
 *               landmarks_17_ (1), landmarks_18_ (1), landmarks_19_ (1)
 *     hessian: (26x26) Gauss-Newton hessian for args views_1_pose (6), landmarks_0_ (1),
 *              landmarks_1_ (1), landmarks_2_ (1), landmarks_3_ (1), landmarks_4_ (1), landmarks_5_
 *              (1), landmarks_6_ (1), landmarks_7_ (1), landmarks_8_ (1), landmarks_9_ (1),
 *              landmarks_10_ (1), landmarks_11_ (1), landmarks_12_ (1), landmarks_13_ (1),
 *              landmarks_14_ (1), landmarks_15_ (1), landmarks_16_ (1), landmarks_17_ (1),
 *              landmarks_18_ (1), landmarks_19_ (1)
 *     rhs: (26x1) Gauss-Newton rhs for args views_1_pose (6), landmarks_0_ (1), landmarks_1_ (1),
 *          landmarks_2_ (1), landmarks_3_ (1), landmarks_4_ (1), landmarks_5_ (1), landmarks_6_
 *          (1), landmarks_7_ (1), landmarks_8_ (1), landmarks_9_ (1), landmarks_10_ (1),
 *          landmarks_11_ (1), landmarks_12_ (1), landmarks_13_ (1), landmarks_14_ (1),
 *          landmarks_15_ (1), landmarks_16_ (1), landmarks_17_ (1), landmarks_18_ (1),
 *          landmarks_19_ (1)
 */
template <typename Scalar>
void Linearization(
    const Eigen::Matrix<Scalar, 4, 1>& views_0_calibration, const sym::Pose3<Scalar>& views_0_pose,
    const Eigen::Matrix<Scalar, 4, 1>& views_1_calibration, const sym::Pose3<Scalar>& views_1_pose,
    const sym::Pose3<Scalar>& priors_0_0_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_0_0_sqrt_info,
    const sym::Pose3<Scalar>& priors_0_1_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_0_1_sqrt_info,
    const sym::Pose3<Scalar>& priors_1_0_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_1_0_sqrt_info,
    const sym::Pose3<Scalar>& priors_1_1_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_1_1_sqrt_info,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_0_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_0_target_coords, const Scalar matches_0_0_weight,
    const Scalar matches_0_0_inverse_range_prior,
    const Scalar matches_0_0_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_1_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_1_target_coords, const Scalar matches_0_1_weight,
    const Scalar matches_0_1_inverse_range_prior,
    const Scalar matches_0_1_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_2_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_2_target_coords, const Scalar matches_0_2_weight,
    const Scalar matches_0_2_inverse_range_prior,
    const Scalar matches_0_2_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_3_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_3_target_coords, const Scalar matches_0_3_weight,
    const Scalar matches_0_3_inverse_range_prior,
    const Scalar matches_0_3_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_4_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_4_target_coords, const Scalar matches_0_4_weight,
    const Scalar matches_0_4_inverse_range_prior,
    const Scalar matches_0_4_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_5_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_5_target_coords, const Scalar matches_0_5_weight,
    const Scalar matches_0_5_inverse_range_prior,
    const Scalar matches_0_5_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_6_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_6_target_coords, const Scalar matches_0_6_weight,
    const Scalar matches_0_6_inverse_range_prior,
    const Scalar matches_0_6_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_7_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_7_target_coords, const Scalar matches_0_7_weight,
    const Scalar matches_0_7_inverse_range_prior,
    const Scalar matches_0_7_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_8_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_8_target_coords, const Scalar matches_0_8_weight,
    const Scalar matches_0_8_inverse_range_prior,
    const Scalar matches_0_8_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_9_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_9_target_coords, const Scalar matches_0_9_weight,
    const Scalar matches_0_9_inverse_range_prior,
    const Scalar matches_0_9_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_10_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_10_target_coords, const Scalar matches_0_10_weight,
    const Scalar matches_0_10_inverse_range_prior,
    const Scalar matches_0_10_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_11_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_11_target_coords, const Scalar matches_0_11_weight,
    const Scalar matches_0_11_inverse_range_prior,
    const Scalar matches_0_11_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_12_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_12_target_coords, const Scalar matches_0_12_weight,
    const Scalar matches_0_12_inverse_range_prior,
    const Scalar matches_0_12_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_13_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_13_target_coords, const Scalar matches_0_13_weight,
    const Scalar matches_0_13_inverse_range_prior,
    const Scalar matches_0_13_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_14_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_14_target_coords, const Scalar matches_0_14_weight,
    const Scalar matches_0_14_inverse_range_prior,
    const Scalar matches_0_14_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_15_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_15_target_coords, const Scalar matches_0_15_weight,
    const Scalar matches_0_15_inverse_range_prior,
    const Scalar matches_0_15_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_16_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_16_target_coords, const Scalar matches_0_16_weight,
    const Scalar matches_0_16_inverse_range_prior,
    const Scalar matches_0_16_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_17_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_17_target_coords, const Scalar matches_0_17_weight,
    const Scalar matches_0_17_inverse_range_prior,
    const Scalar matches_0_17_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_18_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_18_target_coords, const Scalar matches_0_18_weight,
    const Scalar matches_0_18_inverse_range_prior,
    const Scalar matches_0_18_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_19_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_19_target_coords, const Scalar matches_0_19_weight,
    const Scalar matches_0_19_inverse_range_prior,
    const Scalar matches_0_19_inverse_range_prior_sigma, const Scalar landmarks_0_,
    const Scalar landmarks_1_, const Scalar landmarks_2_, const Scalar landmarks_3_,
    const Scalar landmarks_4_, const Scalar landmarks_5_, const Scalar landmarks_6_,
    const Scalar landmarks_7_, const Scalar landmarks_8_, const Scalar landmarks_9_,
    const Scalar landmarks_10_, const Scalar landmarks_11_, const Scalar landmarks_12_,
    const Scalar landmarks_13_, const Scalar landmarks_14_, const Scalar landmarks_15_,
    const Scalar landmarks_16_, const Scalar landmarks_17_, const Scalar landmarks_18_,
    const Scalar landmarks_19_, const Scalar costs_reprojection_error_gnc_scale,
    const Scalar costs_reprojection_error_gnc_mu, const Scalar epsilon,
    Eigen::Matrix<Scalar, 72, 1>* const residual = nullptr,
    Eigen::SparseMatrix<Scalar>* const jacobian = nullptr,
    Eigen::SparseMatrix<Scalar>* const hessian = nullptr,
    Eigen::Matrix<Scalar, 26, 1>* const rhs = nullptr) {
  // Total ops: 10350

  // Unused inputs
  (void)priors_0_0_target_T_src;
  (void)priors_0_0_sqrt_info;
  (void)priors_1_1_target_T_src;
  (void)priors_1_1_sqrt_info;

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _views_0_pose = views_0_pose.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _views_1_pose = views_1_pose.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_0_1_target_T_src = priors_0_1_target_T_src.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_1_0_target_T_src = priors_1_0_target_T_src.Data();

  // Intermediate terms (2278)
  const Scalar _tmp0 = 2 * _views_0_pose[3];
  const Scalar _tmp1 = _tmp0 * _views_0_pose[2];
  const Scalar _tmp2 = 2 * _views_0_pose[0];
  const Scalar _tmp3 = _tmp2 * _views_0_pose[1];
  const Scalar _tmp4 = -_tmp1 + _tmp3;
  const Scalar _tmp5 = -2 * std::pow(_views_0_pose[0], Scalar(2));
  const Scalar _tmp6 = 1 - 2 * std::pow(_views_0_pose[2], Scalar(2));
  const Scalar _tmp7 = _tmp5 + _tmp6;
  const Scalar _tmp8 = 2 * _views_0_pose[1] * _views_0_pose[2];
  const Scalar _tmp9 = _tmp2 * _views_0_pose[3];
  const Scalar _tmp10 = _tmp8 + _tmp9;
  const Scalar _tmp11 = -_priors_0_1_target_T_src[5] - _tmp10 * _views_0_pose[6] +
                        _tmp10 * _views_1_pose[6] - _tmp4 * _views_0_pose[4] +
                        _tmp4 * _views_1_pose[4] - _tmp7 * _views_0_pose[5] +
                        _tmp7 * _views_1_pose[5];
  const Scalar _tmp12 = _views_0_pose[0] * _views_1_pose[0];
  const Scalar _tmp13 = _views_0_pose[2] * _views_1_pose[2];
  const Scalar _tmp14 = _views_0_pose[1] * _views_1_pose[1];
  const Scalar _tmp15 = _views_0_pose[3] * _views_1_pose[3];
  const Scalar _tmp16 = _tmp12 + _tmp13 + _tmp14 + _tmp15;
  const Scalar _tmp17 = _views_0_pose[0] * _views_1_pose[3];
  const Scalar _tmp18 = _views_0_pose[3] * _views_1_pose[0];
  const Scalar _tmp19 = _views_0_pose[1] * _views_1_pose[2];
  const Scalar _tmp20 = _views_0_pose[2] * _views_1_pose[1];
  const Scalar _tmp21 = -_tmp17 + _tmp18 - _tmp19 + _tmp20;
  const Scalar _tmp22 = _views_0_pose[1] * _views_1_pose[3];
  const Scalar _tmp23 = _views_0_pose[2] * _views_1_pose[0];
  const Scalar _tmp24 = _views_0_pose[0] * _views_1_pose[2];
  const Scalar _tmp25 = _views_0_pose[3] * _views_1_pose[1];
  const Scalar _tmp26 = -_tmp22 - _tmp23 + _tmp24 + _tmp25;
  const Scalar _tmp27 = _views_0_pose[2] * _views_1_pose[3];
  const Scalar _tmp28 = _views_0_pose[1] * _views_1_pose[0];
  const Scalar _tmp29 = _views_0_pose[3] * _views_1_pose[2];
  const Scalar _tmp30 = _views_0_pose[0] * _views_1_pose[1];
  const Scalar _tmp31 = -_tmp27 + _tmp28 + _tmp29 - _tmp30;
  const Scalar _tmp32 = _priors_0_1_target_T_src[0] * _tmp31 -
                        _priors_0_1_target_T_src[1] * _tmp16 -
                        _priors_0_1_target_T_src[2] * _tmp21 + _priors_0_1_target_T_src[3] * _tmp26;
  const Scalar _tmp33 = _priors_0_1_target_T_src[3] * _tmp16;
  const Scalar _tmp34 = _priors_0_1_target_T_src[0] * _tmp21;
  const Scalar _tmp35 = _priors_0_1_target_T_src[1] * _tmp26;
  const Scalar _tmp36 = _priors_0_1_target_T_src[2] * _tmp31;
  const Scalar _tmp37 = -_tmp34 - _tmp35 - _tmp36;
  const Scalar _tmp38 = _tmp33 - _tmp37;
  const Scalar _tmp39 = 2 * std::min<Scalar>(0, (((_tmp38) > 0) - ((_tmp38) < 0))) + 1;
  const Scalar _tmp40 = 2 * _tmp39;
  const Scalar _tmp41 = -epsilon;
  const Scalar _tmp42 = _tmp41 + 1;
  const Scalar _tmp43 = std::min<Scalar>(_tmp42, std::fabs(_tmp38));
  const Scalar _tmp44 = std::acos(_tmp43) / std::sqrt(Scalar(1 - std::pow(_tmp43, Scalar(2))));
  const Scalar _tmp45 = _tmp40 * _tmp44;
  const Scalar _tmp46 = _tmp32 * _tmp45;
  const Scalar _tmp47 = -2 * std::pow(_views_0_pose[1], Scalar(2));
  const Scalar _tmp48 = _tmp47 + _tmp5 + 1;
  const Scalar _tmp49 = _tmp2 * _views_0_pose[2];
  const Scalar _tmp50 = _tmp0 * _views_0_pose[1];
  const Scalar _tmp51 = _tmp49 + _tmp50;
  const Scalar _tmp52 = _tmp8 - _tmp9;
  const Scalar _tmp53 = -_priors_0_1_target_T_src[6] - _tmp48 * _views_0_pose[6] +
                        _tmp48 * _views_1_pose[6] - _tmp51 * _views_0_pose[4] +
                        _tmp51 * _views_1_pose[4] - _tmp52 * _views_0_pose[5] +
                        _tmp52 * _views_1_pose[5];
  const Scalar _tmp54 = -_priors_0_1_target_T_src[0] * _tmp16 -
                        _priors_0_1_target_T_src[1] * _tmp31 +
                        _priors_0_1_target_T_src[2] * _tmp26 + _priors_0_1_target_T_src[3] * _tmp21;
  const Scalar _tmp55 = _tmp44 * _tmp54;
  const Scalar _tmp56 = _tmp40 * _tmp55;
  const Scalar _tmp57 = -_priors_0_1_target_T_src[0] * _tmp26 +
                        _priors_0_1_target_T_src[1] * _tmp21 -
                        _priors_0_1_target_T_src[2] * _tmp16 + _priors_0_1_target_T_src[3] * _tmp31;
  const Scalar _tmp58 = _tmp45 * _tmp57;
  const Scalar _tmp59 = _tmp1 + _tmp3;
  const Scalar _tmp60 = _tmp47 + _tmp6;
  const Scalar _tmp61 = _tmp49 - _tmp50;
  const Scalar _tmp62 = -_priors_0_1_target_T_src[4] - _tmp59 * _views_0_pose[5] +
                        _tmp59 * _views_1_pose[5] - _tmp60 * _views_0_pose[4] +
                        _tmp60 * _views_1_pose[4] - _tmp61 * _views_0_pose[6] +
                        _tmp61 * _views_1_pose[6];
  const Scalar _tmp63 = _tmp11 * priors_0_1_sqrt_info(0, 4) + _tmp46 * priors_0_1_sqrt_info(0, 1) +
                        _tmp53 * priors_0_1_sqrt_info(0, 5) + _tmp56 * priors_0_1_sqrt_info(0, 0) +
                        _tmp58 * priors_0_1_sqrt_info(0, 2) + _tmp62 * priors_0_1_sqrt_info(0, 3);
  const Scalar _tmp64 = _tmp40 * priors_0_1_sqrt_info(1, 0);
  const Scalar _tmp65 = _tmp11 * priors_0_1_sqrt_info(1, 4) + _tmp46 * priors_0_1_sqrt_info(1, 1) +
                        _tmp53 * priors_0_1_sqrt_info(1, 5) + _tmp55 * _tmp64 +
                        _tmp58 * priors_0_1_sqrt_info(1, 2) + _tmp62 * priors_0_1_sqrt_info(1, 3);
  const Scalar _tmp66 = _tmp57 * priors_0_1_sqrt_info(2, 2);
  const Scalar _tmp67 = _tmp11 * priors_0_1_sqrt_info(2, 4) + _tmp45 * _tmp66 +
                        _tmp46 * priors_0_1_sqrt_info(2, 1) + _tmp53 * priors_0_1_sqrt_info(2, 5) +
                        _tmp56 * priors_0_1_sqrt_info(2, 0) + _tmp62 * priors_0_1_sqrt_info(2, 3);
  const Scalar _tmp68 = _tmp11 * priors_0_1_sqrt_info(3, 4) + _tmp46 * priors_0_1_sqrt_info(3, 1) +
                        _tmp53 * priors_0_1_sqrt_info(3, 5) + _tmp56 * priors_0_1_sqrt_info(3, 0) +
                        _tmp58 * priors_0_1_sqrt_info(3, 2) + _tmp62 * priors_0_1_sqrt_info(3, 3);
  const Scalar _tmp69 = _tmp11 * priors_0_1_sqrt_info(4, 4) + _tmp46 * priors_0_1_sqrt_info(4, 1) +
                        _tmp53 * priors_0_1_sqrt_info(4, 5) + _tmp56 * priors_0_1_sqrt_info(4, 0) +
                        _tmp58 * priors_0_1_sqrt_info(4, 2) + _tmp62 * priors_0_1_sqrt_info(4, 3);
  const Scalar _tmp70 = _tmp11 * priors_0_1_sqrt_info(5, 4) + _tmp46 * priors_0_1_sqrt_info(5, 1) +
                        _tmp53 * priors_0_1_sqrt_info(5, 5) + _tmp56 * priors_0_1_sqrt_info(5, 0) +
                        _tmp58 * priors_0_1_sqrt_info(5, 2) + _tmp62 * priors_0_1_sqrt_info(5, 3);
  const Scalar _tmp71 = std::pow(_views_1_pose[2], Scalar(2));
  const Scalar _tmp72 = 2 * _tmp71;
  const Scalar _tmp73 = -_tmp72;
  const Scalar _tmp74 = std::pow(_views_1_pose[1], Scalar(2));
  const Scalar _tmp75 = 2 * _tmp74;
  const Scalar _tmp76 = -_tmp75;
  const Scalar _tmp77 = _tmp73 + _tmp76 + 1;
  const Scalar _tmp78 = 2 * _views_1_pose[0];
  const Scalar _tmp79 = _tmp78 * _views_1_pose[2];
  const Scalar _tmp80 = 2 * _views_1_pose[1];
  const Scalar _tmp81 = _tmp80 * _views_1_pose[3];
  const Scalar _tmp82 = -_tmp81;
  const Scalar _tmp83 = _tmp79 + _tmp82;
  const Scalar _tmp84 = _tmp83 * _views_1_pose[6];
  const Scalar _tmp85 = _tmp78 * _views_1_pose[1];
  const Scalar _tmp86 = 2 * _views_1_pose[2] * _views_1_pose[3];
  const Scalar _tmp87 = _tmp85 + _tmp86;
  const Scalar _tmp88 = _tmp87 * _views_1_pose[5];
  const Scalar _tmp89 = _tmp83 * _views_0_pose[6] + _tmp87 * _views_0_pose[5];
  const Scalar _tmp90 = -_priors_1_0_target_T_src[4] + _tmp77 * _views_0_pose[4] -
                        _tmp77 * _views_1_pose[4] - _tmp84 - _tmp88 + _tmp89;
  const Scalar _tmp91 = std::pow(_views_1_pose[0], Scalar(2));
  const Scalar _tmp92 = 2 * _tmp91;
  const Scalar _tmp93 = 1 - _tmp92;
  const Scalar _tmp94 = _tmp73 + _tmp93;
  const Scalar _tmp95 = _tmp78 * _views_1_pose[3];
  const Scalar _tmp96 = _tmp80 * _views_1_pose[2];
  const Scalar _tmp97 = _tmp95 + _tmp96;
  const Scalar _tmp98 = _tmp97 * _views_1_pose[6];
  const Scalar _tmp99 = -_tmp86;
  const Scalar _tmp100 = _tmp85 + _tmp99;
  const Scalar _tmp101 = _tmp100 * _views_1_pose[4];
  const Scalar _tmp102 = _tmp100 * _views_0_pose[4] + _tmp97 * _views_0_pose[6];
  const Scalar _tmp103 = -_priors_1_0_target_T_src[5] - _tmp101 + _tmp102 +
                         _tmp94 * _views_0_pose[5] - _tmp94 * _views_1_pose[5] - _tmp98;
  const Scalar _tmp104 = _tmp76 + _tmp93;
  const Scalar _tmp105 = -_tmp95;
  const Scalar _tmp106 = _tmp105 + _tmp96;
  const Scalar _tmp107 = _tmp106 * _views_1_pose[5];
  const Scalar _tmp108 = _tmp79 + _tmp81;
  const Scalar _tmp109 = _tmp108 * _views_1_pose[4];
  const Scalar _tmp110 = _tmp106 * _views_0_pose[5] + _tmp108 * _views_0_pose[4];
  const Scalar _tmp111 = -_priors_1_0_target_T_src[6] + _tmp104 * _views_0_pose[6] -
                         _tmp104 * _views_1_pose[6] - _tmp107 - _tmp109 + _tmp110;
  const Scalar _tmp112 = _priors_1_0_target_T_src[3] * _tmp16;
  const Scalar _tmp113 = _tmp27 - _tmp28 - _tmp29 + _tmp30;
  const Scalar _tmp114 = _priors_1_0_target_T_src[2] * _tmp113;
  const Scalar _tmp115 = _tmp22 + _tmp23 - _tmp24 - _tmp25;
  const Scalar _tmp116 = _priors_1_0_target_T_src[1] * _tmp115;
  const Scalar _tmp117 = _tmp17 - _tmp18 + _tmp19 - _tmp20;
  const Scalar _tmp118 = _priors_1_0_target_T_src[0] * _tmp117;
  const Scalar _tmp119 = -_tmp114 - _tmp116 - _tmp118;
  const Scalar _tmp120 = _tmp112 - _tmp119;
  const Scalar _tmp121 = 2 * std::min<Scalar>(0, (((_tmp120) > 0) - ((_tmp120) < 0))) + 1;
  const Scalar _tmp122 = 2 * _tmp121;
  const Scalar _tmp123 =
      -_priors_1_0_target_T_src[0] * _tmp115 + _priors_1_0_target_T_src[1] * _tmp117 -
      _priors_1_0_target_T_src[2] * _tmp16 + _priors_1_0_target_T_src[3] * _tmp113;
  const Scalar _tmp124 = std::min<Scalar>(_tmp42, std::fabs(_tmp120));
  const Scalar _tmp125 = std::acos(_tmp124) / std::sqrt(Scalar(1 - std::pow(_tmp124, Scalar(2))));
  const Scalar _tmp126 = _tmp123 * _tmp125;
  const Scalar _tmp127 = _tmp122 * _tmp126;
  const Scalar _tmp128 =
      _priors_1_0_target_T_src[0] * _tmp113 - _priors_1_0_target_T_src[1] * _tmp16 -
      _priors_1_0_target_T_src[2] * _tmp117 + _priors_1_0_target_T_src[3] * _tmp115;
  const Scalar _tmp129 = _tmp122 * _tmp125;
  const Scalar _tmp130 = _tmp128 * _tmp129;
  const Scalar _tmp131 =
      -_priors_1_0_target_T_src[0] * _tmp16 - _priors_1_0_target_T_src[1] * _tmp113 +
      _priors_1_0_target_T_src[2] * _tmp115 + _priors_1_0_target_T_src[3] * _tmp117;
  const Scalar _tmp132 = _tmp129 * _tmp131;
  const Scalar _tmp133 =
      _tmp103 * priors_1_0_sqrt_info(0, 4) + _tmp111 * priors_1_0_sqrt_info(0, 5) +
      _tmp127 * priors_1_0_sqrt_info(0, 2) + _tmp130 * priors_1_0_sqrt_info(0, 1) +
      _tmp132 * priors_1_0_sqrt_info(0, 0) + _tmp90 * priors_1_0_sqrt_info(0, 3);
  const Scalar _tmp134 =
      _tmp103 * priors_1_0_sqrt_info(1, 4) + _tmp111 * priors_1_0_sqrt_info(1, 5) +
      _tmp127 * priors_1_0_sqrt_info(1, 2) + _tmp130 * priors_1_0_sqrt_info(1, 1) +
      _tmp132 * priors_1_0_sqrt_info(1, 0) + _tmp90 * priors_1_0_sqrt_info(1, 3);
  const Scalar _tmp135 = _tmp128 * priors_1_0_sqrt_info(2, 1);
  const Scalar _tmp136 = _tmp122 * priors_1_0_sqrt_info(2, 0);
  const Scalar _tmp137 = _tmp103 * priors_1_0_sqrt_info(2, 4) +
                         _tmp111 * priors_1_0_sqrt_info(2, 5) + _tmp125 * _tmp131 * _tmp136 +
                         _tmp127 * priors_1_0_sqrt_info(2, 2) + _tmp129 * _tmp135 +
                         _tmp90 * priors_1_0_sqrt_info(2, 3);
  const Scalar _tmp138 = _tmp122 * priors_1_0_sqrt_info(3, 2);
  const Scalar _tmp139 = _tmp103 * priors_1_0_sqrt_info(3, 4) +
                         _tmp111 * priors_1_0_sqrt_info(3, 5) + _tmp126 * _tmp138 +
                         _tmp130 * priors_1_0_sqrt_info(3, 1) +
                         _tmp132 * priors_1_0_sqrt_info(3, 0) + _tmp90 * priors_1_0_sqrt_info(3, 3);
  const Scalar _tmp140 =
      _tmp103 * priors_1_0_sqrt_info(4, 4) + _tmp111 * priors_1_0_sqrt_info(4, 5) +
      _tmp127 * priors_1_0_sqrt_info(4, 2) + _tmp130 * priors_1_0_sqrt_info(4, 1) +
      _tmp132 * priors_1_0_sqrt_info(4, 0) + _tmp90 * priors_1_0_sqrt_info(4, 3);
  const Scalar _tmp141 =
      _tmp103 * priors_1_0_sqrt_info(5, 4) + _tmp111 * priors_1_0_sqrt_info(5, 5) +
      _tmp127 * priors_1_0_sqrt_info(5, 2) + _tmp130 * priors_1_0_sqrt_info(5, 1) +
      _tmp132 * priors_1_0_sqrt_info(5, 0) + _tmp90 * priors_1_0_sqrt_info(5, 3);
  const Scalar _tmp142 = Scalar(1.0) / (views_0_calibration(1, 0));
  const Scalar _tmp143 = _tmp142 * _tmp4;
  const Scalar _tmp144 = -views_0_calibration(2, 0);
  const Scalar _tmp145 = _tmp144 + matches_0_0_source_coords(0, 0);
  const Scalar _tmp146 = std::pow(views_0_calibration(0, 0), Scalar(-2));
  const Scalar _tmp147 = -views_0_calibration(3, 0);
  const Scalar _tmp148 = _tmp147 + matches_0_0_source_coords(1, 0);
  const Scalar _tmp149 = std::pow(views_0_calibration(1, 0), Scalar(-2));
  const Scalar _tmp150 = epsilon + 1;
  const Scalar _tmp151 = std::pow(Scalar(std::pow(_tmp145, Scalar(2)) * _tmp146 +
                                         std::pow(_tmp148, Scalar(2)) * _tmp149 + _tmp150),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp152 = _tmp148 * _tmp151;
  const Scalar _tmp153 = _views_0_pose[4] - _views_1_pose[4];
  const Scalar _tmp154 = Scalar(1.0) / (views_0_calibration(0, 0));
  const Scalar _tmp155 = _tmp154 * _tmp60;
  const Scalar _tmp156 = _tmp145 * _tmp151;
  const Scalar _tmp157 =
      _tmp143 * _tmp152 + _tmp151 * _tmp51 + _tmp153 * landmarks_0_ + _tmp155 * _tmp156;
  const Scalar _tmp158 = _tmp154 * _tmp59;
  const Scalar _tmp159 = _tmp142 * _tmp7;
  const Scalar _tmp160 = _views_0_pose[5] - _views_1_pose[5];
  const Scalar _tmp161 =
      _tmp151 * _tmp52 + _tmp152 * _tmp159 + _tmp156 * _tmp158 + _tmp160 * landmarks_0_;
  const Scalar _tmp162 = _tmp154 * _tmp61;
  const Scalar _tmp163 = _tmp10 * _tmp142;
  const Scalar _tmp164 = _views_0_pose[6] - _views_1_pose[6];
  const Scalar _tmp165 =
      _tmp151 * _tmp48 + _tmp152 * _tmp163 + _tmp156 * _tmp162 + _tmp164 * landmarks_0_;
  const Scalar _tmp166 = _tmp161 * _tmp87 + _tmp165 * _tmp83;
  const Scalar _tmp167 = _tmp157 * _tmp77 + _tmp166;
  const Scalar _tmp168 = _tmp106 * _tmp161 + _tmp108 * _tmp157;
  const Scalar _tmp169 = _tmp104 * _tmp165 + _tmp168;
  const Scalar _tmp170 = std::max<Scalar>(_tmp169, epsilon);
  const Scalar _tmp171 = Scalar(1.0) / (_tmp170);
  const Scalar _tmp172 = _tmp171 * views_1_calibration(0, 0);
  const Scalar _tmp173 =
      _tmp167 * _tmp172 - matches_0_0_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp174 = _tmp100 * _tmp157 + _tmp165 * _tmp97;
  const Scalar _tmp175 = _tmp161 * _tmp94 + _tmp174;
  const Scalar _tmp176 = _tmp171 * views_1_calibration(1, 0);
  const Scalar _tmp177 =
      _tmp175 * _tmp176 - matches_0_0_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp178 = std::pow(_tmp173, Scalar(2)) + std::pow(_tmp177, Scalar(2)) + epsilon;
  const Scalar _tmp179 = std::pow(_tmp178, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp180 = std::sqrt(matches_0_0_weight);
  const Scalar _tmp181 = std::pow(costs_reprojection_error_gnc_scale, Scalar(-2));
  const Scalar _tmp182 = Scalar(1.0) / (_tmp150 - costs_reprojection_error_gnc_mu);
  const Scalar _tmp183 = epsilon + std::fabs(_tmp182);
  const Scalar _tmp184 = _tmp181 / _tmp183;
  const Scalar _tmp185 = _tmp178 * _tmp184 + 1;
  const Scalar _tmp186 = 2 - _tmp182;
  const Scalar _tmp187 =
      _tmp186 + epsilon * (2 * std::min<Scalar>(0, (((_tmp186) > 0) - ((_tmp186) < 0))) + 1);
  const Scalar _tmp188 = (Scalar(1) / Scalar(2)) * _tmp187;
  const Scalar _tmp189 = 2 * _tmp183 / _tmp187;
  const Scalar _tmp190 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp185, _tmp188) - 1)));
  const Scalar _tmp191 = std::max<Scalar>(0, (((_tmp169) > 0) - ((_tmp169) < 0)));
  const Scalar _tmp192 = _tmp180 * _tmp190 * _tmp191;
  const Scalar _tmp193 = _tmp179 * _tmp192;
  const Scalar _tmp194 = _tmp173 * _tmp193;
  const Scalar _tmp195 = _tmp177 * _tmp193;
  const Scalar _tmp196 = _tmp144 + matches_0_1_source_coords(0, 0);
  const Scalar _tmp197 = _tmp147 + matches_0_1_source_coords(1, 0);
  const Scalar _tmp198 = std::pow(Scalar(_tmp146 * std::pow(_tmp196, Scalar(2)) +
                                         _tmp149 * std::pow(_tmp197, Scalar(2)) + _tmp150),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp199 = _tmp197 * _tmp198;
  const Scalar _tmp200 = _tmp196 * _tmp198;
  const Scalar _tmp201 =
      _tmp143 * _tmp199 + _tmp153 * landmarks_1_ + _tmp155 * _tmp200 + _tmp198 * _tmp51;
  const Scalar _tmp202 =
      _tmp158 * _tmp200 + _tmp159 * _tmp199 + _tmp160 * landmarks_1_ + _tmp198 * _tmp52;
  const Scalar _tmp203 =
      _tmp162 * _tmp200 + _tmp163 * _tmp199 + _tmp164 * landmarks_1_ + _tmp198 * _tmp48;
  const Scalar _tmp204 = _tmp202 * _tmp87 + _tmp203 * _tmp83;
  const Scalar _tmp205 = _tmp201 * _tmp77 + _tmp204;
  const Scalar _tmp206 = _tmp106 * _tmp202 + _tmp108 * _tmp201;
  const Scalar _tmp207 = _tmp104 * _tmp203 + _tmp206;
  const Scalar _tmp208 = std::max<Scalar>(_tmp207, epsilon);
  const Scalar _tmp209 = Scalar(1.0) / (_tmp208);
  const Scalar _tmp210 = _tmp209 * views_1_calibration(0, 0);
  const Scalar _tmp211 =
      _tmp205 * _tmp210 - matches_0_1_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp212 = _tmp100 * _tmp201 + _tmp203 * _tmp97;
  const Scalar _tmp213 = _tmp202 * _tmp94 + _tmp212;
  const Scalar _tmp214 = _tmp209 * views_1_calibration(1, 0);
  const Scalar _tmp215 =
      _tmp213 * _tmp214 - matches_0_1_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp216 = std::pow(_tmp211, Scalar(2)) + std::pow(_tmp215, Scalar(2)) + epsilon;
  const Scalar _tmp217 = std::pow(_tmp216, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp218 = _tmp184 * _tmp216 + 1;
  const Scalar _tmp219 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp218, _tmp188) - 1)));
  const Scalar _tmp220 = std::sqrt(matches_0_1_weight);
  const Scalar _tmp221 = std::max<Scalar>(0, (((_tmp207) > 0) - ((_tmp207) < 0)));
  const Scalar _tmp222 = _tmp219 * _tmp220 * _tmp221;
  const Scalar _tmp223 = _tmp217 * _tmp222;
  const Scalar _tmp224 = _tmp211 * _tmp223;
  const Scalar _tmp225 = _tmp215 * _tmp223;
  const Scalar _tmp226 = _tmp147 + matches_0_2_source_coords(1, 0);
  const Scalar _tmp227 = _tmp144 + matches_0_2_source_coords(0, 0);
  const Scalar _tmp228 = std::pow(Scalar(_tmp146 * std::pow(_tmp227, Scalar(2)) +
                                         _tmp149 * std::pow(_tmp226, Scalar(2)) + _tmp150),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp229 = _tmp226 * _tmp228;
  const Scalar _tmp230 = _tmp227 * _tmp228;
  const Scalar _tmp231 =
      _tmp143 * _tmp229 + _tmp153 * landmarks_2_ + _tmp155 * _tmp230 + _tmp228 * _tmp51;
  const Scalar _tmp232 =
      _tmp162 * _tmp230 + _tmp163 * _tmp229 + _tmp164 * landmarks_2_ + _tmp228 * _tmp48;
  const Scalar _tmp233 =
      _tmp158 * _tmp230 + _tmp159 * _tmp229 + _tmp160 * landmarks_2_ + _tmp228 * _tmp52;
  const Scalar _tmp234 = _tmp232 * _tmp83 + _tmp233 * _tmp87;
  const Scalar _tmp235 = _tmp231 * _tmp77 + _tmp234;
  const Scalar _tmp236 = _tmp106 * _tmp233 + _tmp108 * _tmp231;
  const Scalar _tmp237 = _tmp104 * _tmp232 + _tmp236;
  const Scalar _tmp238 = std::max<Scalar>(_tmp237, epsilon);
  const Scalar _tmp239 = Scalar(1.0) / (_tmp238);
  const Scalar _tmp240 = _tmp239 * views_1_calibration(0, 0);
  const Scalar _tmp241 =
      _tmp235 * _tmp240 - matches_0_2_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp242 = _tmp100 * _tmp231 + _tmp232 * _tmp97;
  const Scalar _tmp243 = _tmp233 * _tmp94 + _tmp242;
  const Scalar _tmp244 = _tmp239 * views_1_calibration(1, 0);
  const Scalar _tmp245 =
      _tmp243 * _tmp244 - matches_0_2_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp246 = std::pow(_tmp241, Scalar(2)) + std::pow(_tmp245, Scalar(2)) + epsilon;
  const Scalar _tmp247 = std::pow(_tmp246, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp248 = std::max<Scalar>(0, (((_tmp237) > 0) - ((_tmp237) < 0)));
  const Scalar _tmp249 = std::sqrt(matches_0_2_weight);
  const Scalar _tmp250 = _tmp184 * _tmp246 + 1;
  const Scalar _tmp251 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp250, _tmp188) - 1)));
  const Scalar _tmp252 = _tmp248 * _tmp249 * _tmp251;
  const Scalar _tmp253 = _tmp247 * _tmp252;
  const Scalar _tmp254 = _tmp241 * _tmp253;
  const Scalar _tmp255 = _tmp245 * _tmp253;
  const Scalar _tmp256 = _tmp144 + matches_0_3_source_coords(0, 0);
  const Scalar _tmp257 = _tmp147 + matches_0_3_source_coords(1, 0);
  const Scalar _tmp258 = std::pow(Scalar(_tmp146 * std::pow(_tmp256, Scalar(2)) +
                                         _tmp149 * std::pow(_tmp257, Scalar(2)) + _tmp150),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp259 = _tmp257 * _tmp258;
  const Scalar _tmp260 = _tmp256 * _tmp258;
  const Scalar _tmp261 =
      _tmp143 * _tmp259 + _tmp153 * landmarks_3_ + _tmp155 * _tmp260 + _tmp258 * _tmp51;
  const Scalar _tmp262 =
      _tmp158 * _tmp260 + _tmp159 * _tmp259 + _tmp160 * landmarks_3_ + _tmp258 * _tmp52;
  const Scalar _tmp263 =
      _tmp162 * _tmp260 + _tmp163 * _tmp259 + _tmp164 * landmarks_3_ + _tmp258 * _tmp48;
  const Scalar _tmp264 = _tmp262 * _tmp87 + _tmp263 * _tmp83;
  const Scalar _tmp265 = _tmp261 * _tmp77 + _tmp264;
  const Scalar _tmp266 = _tmp106 * _tmp262 + _tmp108 * _tmp261;
  const Scalar _tmp267 = _tmp104 * _tmp263 + _tmp266;
  const Scalar _tmp268 = std::max<Scalar>(_tmp267, epsilon);
  const Scalar _tmp269 = Scalar(1.0) / (_tmp268);
  const Scalar _tmp270 = _tmp269 * views_1_calibration(0, 0);
  const Scalar _tmp271 =
      _tmp265 * _tmp270 - matches_0_3_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp272 = _tmp100 * _tmp261 + _tmp263 * _tmp97;
  const Scalar _tmp273 = _tmp262 * _tmp94 + _tmp272;
  const Scalar _tmp274 = _tmp269 * views_1_calibration(1, 0);
  const Scalar _tmp275 =
      _tmp273 * _tmp274 - matches_0_3_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp276 = std::pow(_tmp271, Scalar(2)) + std::pow(_tmp275, Scalar(2)) + epsilon;
  const Scalar _tmp277 = std::pow(_tmp276, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp278 = std::sqrt(matches_0_3_weight);
  const Scalar _tmp279 = _tmp184 * _tmp276 + 1;
  const Scalar _tmp280 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp279, _tmp188) - 1)));
  const Scalar _tmp281 = std::max<Scalar>(0, (((_tmp267) > 0) - ((_tmp267) < 0)));
  const Scalar _tmp282 = _tmp278 * _tmp280 * _tmp281;
  const Scalar _tmp283 = _tmp277 * _tmp282;
  const Scalar _tmp284 = _tmp271 * _tmp283;
  const Scalar _tmp285 = _tmp275 * _tmp283;
  const Scalar _tmp286 = _tmp147 + matches_0_4_source_coords(1, 0);
  const Scalar _tmp287 = _tmp144 + matches_0_4_source_coords(0, 0);
  const Scalar _tmp288 = std::pow(Scalar(_tmp146 * std::pow(_tmp287, Scalar(2)) +
                                         _tmp149 * std::pow(_tmp286, Scalar(2)) + _tmp150),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp289 = _tmp286 * _tmp288;
  const Scalar _tmp290 = _tmp287 * _tmp288;
  const Scalar _tmp291 =
      _tmp143 * _tmp289 + _tmp153 * landmarks_4_ + _tmp155 * _tmp290 + _tmp288 * _tmp51;
  const Scalar _tmp292 =
      _tmp162 * _tmp290 + _tmp163 * _tmp289 + _tmp164 * landmarks_4_ + _tmp288 * _tmp48;
  const Scalar _tmp293 =
      _tmp158 * _tmp290 + _tmp159 * _tmp289 + _tmp160 * landmarks_4_ + _tmp288 * _tmp52;
  const Scalar _tmp294 = _tmp292 * _tmp83 + _tmp293 * _tmp87;
  const Scalar _tmp295 = _tmp291 * _tmp77 + _tmp294;
  const Scalar _tmp296 = _tmp106 * _tmp293 + _tmp108 * _tmp291;
  const Scalar _tmp297 = _tmp104 * _tmp292 + _tmp296;
  const Scalar _tmp298 = std::max<Scalar>(_tmp297, epsilon);
  const Scalar _tmp299 = Scalar(1.0) / (_tmp298);
  const Scalar _tmp300 = _tmp299 * views_1_calibration(0, 0);
  const Scalar _tmp301 =
      _tmp295 * _tmp300 - matches_0_4_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp302 = _tmp100 * _tmp291 + _tmp292 * _tmp97;
  const Scalar _tmp303 = _tmp293 * _tmp94 + _tmp302;
  const Scalar _tmp304 = _tmp299 * views_1_calibration(1, 0);
  const Scalar _tmp305 =
      _tmp303 * _tmp304 - matches_0_4_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp306 = std::pow(_tmp301, Scalar(2)) + std::pow(_tmp305, Scalar(2)) + epsilon;
  const Scalar _tmp307 = std::pow(_tmp306, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp308 = std::sqrt(matches_0_4_weight);
  const Scalar _tmp309 = std::max<Scalar>(0, (((_tmp297) > 0) - ((_tmp297) < 0)));
  const Scalar _tmp310 = _tmp184 * _tmp306 + 1;
  const Scalar _tmp311 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp310, _tmp188) - 1)));
  const Scalar _tmp312 = _tmp308 * _tmp309 * _tmp311;
  const Scalar _tmp313 = _tmp307 * _tmp312;
  const Scalar _tmp314 = _tmp301 * _tmp313;
  const Scalar _tmp315 = _tmp305 * _tmp313;
  const Scalar _tmp316 = _tmp147 + matches_0_5_source_coords(1, 0);
  const Scalar _tmp317 = _tmp144 + matches_0_5_source_coords(0, 0);
  const Scalar _tmp318 = std::pow(Scalar(_tmp146 * std::pow(_tmp317, Scalar(2)) +
                                         _tmp149 * std::pow(_tmp316, Scalar(2)) + _tmp150),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp319 = _tmp316 * _tmp318;
  const Scalar _tmp320 = _tmp317 * _tmp318;
  const Scalar _tmp321 =
      _tmp143 * _tmp319 + _tmp153 * landmarks_5_ + _tmp155 * _tmp320 + _tmp318 * _tmp51;
  const Scalar _tmp322 =
      _tmp158 * _tmp320 + _tmp159 * _tmp319 + _tmp160 * landmarks_5_ + _tmp318 * _tmp52;
  const Scalar _tmp323 =
      _tmp162 * _tmp320 + _tmp163 * _tmp319 + _tmp164 * landmarks_5_ + _tmp318 * _tmp48;
  const Scalar _tmp324 = _tmp322 * _tmp87 + _tmp323 * _tmp83;
  const Scalar _tmp325 = _tmp321 * _tmp77 + _tmp324;
  const Scalar _tmp326 = _tmp106 * _tmp322 + _tmp108 * _tmp321;
  const Scalar _tmp327 = _tmp104 * _tmp323 + _tmp326;
  const Scalar _tmp328 = std::max<Scalar>(_tmp327, epsilon);
  const Scalar _tmp329 = Scalar(1.0) / (_tmp328);
  const Scalar _tmp330 = _tmp329 * views_1_calibration(0, 0);
  const Scalar _tmp331 =
      _tmp325 * _tmp330 - matches_0_5_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp332 = _tmp100 * _tmp321 + _tmp323 * _tmp97;
  const Scalar _tmp333 = _tmp322 * _tmp94 + _tmp332;
  const Scalar _tmp334 = _tmp329 * views_1_calibration(1, 0);
  const Scalar _tmp335 =
      _tmp333 * _tmp334 - matches_0_5_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp336 = std::pow(_tmp331, Scalar(2)) + std::pow(_tmp335, Scalar(2)) + epsilon;
  const Scalar _tmp337 = std::pow(_tmp336, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp338 = std::sqrt(matches_0_5_weight);
  const Scalar _tmp339 = std::max<Scalar>(0, (((_tmp327) > 0) - ((_tmp327) < 0)));
  const Scalar _tmp340 = _tmp184 * _tmp336 + 1;
  const Scalar _tmp341 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp340, _tmp188) - 1)));
  const Scalar _tmp342 = _tmp338 * _tmp339 * _tmp341;
  const Scalar _tmp343 = _tmp337 * _tmp342;
  const Scalar _tmp344 = _tmp331 * _tmp343;
  const Scalar _tmp345 = _tmp335 * _tmp343;
  const Scalar _tmp346 = _tmp144 + matches_0_6_source_coords(0, 0);
  const Scalar _tmp347 = _tmp147 + matches_0_6_source_coords(1, 0);
  const Scalar _tmp348 = std::pow(Scalar(_tmp146 * std::pow(_tmp346, Scalar(2)) +
                                         _tmp149 * std::pow(_tmp347, Scalar(2)) + _tmp150),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp349 = _tmp347 * _tmp348;
  const Scalar _tmp350 = _tmp346 * _tmp348;
  const Scalar _tmp351 =
      _tmp143 * _tmp349 + _tmp153 * landmarks_6_ + _tmp155 * _tmp350 + _tmp348 * _tmp51;
  const Scalar _tmp352 =
      _tmp158 * _tmp350 + _tmp159 * _tmp349 + _tmp160 * landmarks_6_ + _tmp348 * _tmp52;
  const Scalar _tmp353 =
      _tmp162 * _tmp350 + _tmp163 * _tmp349 + _tmp164 * landmarks_6_ + _tmp348 * _tmp48;
  const Scalar _tmp354 = _tmp352 * _tmp87 + _tmp353 * _tmp83;
  const Scalar _tmp355 = _tmp351 * _tmp77 + _tmp354;
  const Scalar _tmp356 = _tmp106 * _tmp352 + _tmp108 * _tmp351;
  const Scalar _tmp357 = _tmp104 * _tmp353 + _tmp356;
  const Scalar _tmp358 = std::max<Scalar>(_tmp357, epsilon);
  const Scalar _tmp359 = Scalar(1.0) / (_tmp358);
  const Scalar _tmp360 = _tmp359 * views_1_calibration(0, 0);
  const Scalar _tmp361 =
      _tmp355 * _tmp360 - matches_0_6_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp362 = _tmp100 * _tmp351 + _tmp353 * _tmp97;
  const Scalar _tmp363 = _tmp352 * _tmp94 + _tmp362;
  const Scalar _tmp364 = _tmp359 * views_1_calibration(1, 0);
  const Scalar _tmp365 =
      _tmp363 * _tmp364 - matches_0_6_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp366 = std::pow(_tmp361, Scalar(2)) + std::pow(_tmp365, Scalar(2)) + epsilon;
  const Scalar _tmp367 = std::pow(_tmp366, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp368 = std::sqrt(matches_0_6_weight);
  const Scalar _tmp369 = std::max<Scalar>(0, (((_tmp357) > 0) - ((_tmp357) < 0)));
  const Scalar _tmp370 = _tmp184 * _tmp366 + 1;
  const Scalar _tmp371 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp370, _tmp188) - 1)));
  const Scalar _tmp372 = _tmp368 * _tmp369 * _tmp371;
  const Scalar _tmp373 = _tmp367 * _tmp372;
  const Scalar _tmp374 = _tmp361 * _tmp373;
  const Scalar _tmp375 = _tmp365 * _tmp373;
  const Scalar _tmp376 = _tmp147 + matches_0_7_source_coords(1, 0);
  const Scalar _tmp377 = _tmp144 + matches_0_7_source_coords(0, 0);
  const Scalar _tmp378 = std::pow(Scalar(_tmp146 * std::pow(_tmp377, Scalar(2)) +
                                         _tmp149 * std::pow(_tmp376, Scalar(2)) + _tmp150),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp379 = _tmp376 * _tmp378;
  const Scalar _tmp380 = _tmp377 * _tmp378;
  const Scalar _tmp381 =
      _tmp143 * _tmp379 + _tmp153 * landmarks_7_ + _tmp155 * _tmp380 + _tmp378 * _tmp51;
  const Scalar _tmp382 =
      _tmp158 * _tmp380 + _tmp159 * _tmp379 + _tmp160 * landmarks_7_ + _tmp378 * _tmp52;
  const Scalar _tmp383 =
      _tmp162 * _tmp380 + _tmp163 * _tmp379 + _tmp164 * landmarks_7_ + _tmp378 * _tmp48;
  const Scalar _tmp384 = _tmp382 * _tmp87 + _tmp383 * _tmp83;
  const Scalar _tmp385 = _tmp381 * _tmp77 + _tmp384;
  const Scalar _tmp386 = _tmp106 * _tmp382 + _tmp108 * _tmp381;
  const Scalar _tmp387 = _tmp104 * _tmp383 + _tmp386;
  const Scalar _tmp388 = std::max<Scalar>(_tmp387, epsilon);
  const Scalar _tmp389 = Scalar(1.0) / (_tmp388);
  const Scalar _tmp390 = _tmp389 * views_1_calibration(0, 0);
  const Scalar _tmp391 =
      _tmp385 * _tmp390 - matches_0_7_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp392 = _tmp100 * _tmp381 + _tmp383 * _tmp97;
  const Scalar _tmp393 = _tmp382 * _tmp94 + _tmp392;
  const Scalar _tmp394 = _tmp389 * views_1_calibration(1, 0);
  const Scalar _tmp395 =
      _tmp393 * _tmp394 - matches_0_7_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp396 = std::pow(_tmp391, Scalar(2)) + std::pow(_tmp395, Scalar(2)) + epsilon;
  const Scalar _tmp397 = std::pow(_tmp396, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp398 = std::sqrt(matches_0_7_weight);
  const Scalar _tmp399 = std::max<Scalar>(0, (((_tmp387) > 0) - ((_tmp387) < 0)));
  const Scalar _tmp400 = _tmp184 * _tmp396 + 1;
  const Scalar _tmp401 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp400, _tmp188) - 1)));
  const Scalar _tmp402 = _tmp398 * _tmp399 * _tmp401;
  const Scalar _tmp403 = _tmp397 * _tmp402;
  const Scalar _tmp404 = _tmp391 * _tmp403;
  const Scalar _tmp405 = _tmp395 * _tmp403;
  const Scalar _tmp406 = _tmp147 + matches_0_8_source_coords(1, 0);
  const Scalar _tmp407 = _tmp144 + matches_0_8_source_coords(0, 0);
  const Scalar _tmp408 = std::pow(Scalar(_tmp146 * std::pow(_tmp407, Scalar(2)) +
                                         _tmp149 * std::pow(_tmp406, Scalar(2)) + _tmp150),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp409 = _tmp406 * _tmp408;
  const Scalar _tmp410 = _tmp407 * _tmp408;
  const Scalar _tmp411 =
      _tmp143 * _tmp409 + _tmp153 * landmarks_8_ + _tmp155 * _tmp410 + _tmp408 * _tmp51;
  const Scalar _tmp412 =
      _tmp158 * _tmp410 + _tmp159 * _tmp409 + _tmp160 * landmarks_8_ + _tmp408 * _tmp52;
  const Scalar _tmp413 =
      _tmp162 * _tmp410 + _tmp163 * _tmp409 + _tmp164 * landmarks_8_ + _tmp408 * _tmp48;
  const Scalar _tmp414 = _tmp412 * _tmp87 + _tmp413 * _tmp83;
  const Scalar _tmp415 = _tmp411 * _tmp77 + _tmp414;
  const Scalar _tmp416 = _tmp106 * _tmp412 + _tmp108 * _tmp411;
  const Scalar _tmp417 = _tmp104 * _tmp413 + _tmp416;
  const Scalar _tmp418 = std::max<Scalar>(_tmp417, epsilon);
  const Scalar _tmp419 = Scalar(1.0) / (_tmp418);
  const Scalar _tmp420 = _tmp419 * views_1_calibration(0, 0);
  const Scalar _tmp421 =
      _tmp415 * _tmp420 - matches_0_8_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp422 = _tmp100 * _tmp411 + _tmp413 * _tmp97;
  const Scalar _tmp423 = _tmp412 * _tmp94 + _tmp422;
  const Scalar _tmp424 = _tmp419 * views_1_calibration(1, 0);
  const Scalar _tmp425 =
      _tmp423 * _tmp424 - matches_0_8_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp426 = std::pow(_tmp421, Scalar(2)) + std::pow(_tmp425, Scalar(2)) + epsilon;
  const Scalar _tmp427 = std::pow(_tmp426, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp428 = std::sqrt(matches_0_8_weight);
  const Scalar _tmp429 = _tmp184 * _tmp426 + 1;
  const Scalar _tmp430 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp429, _tmp188) - 1)));
  const Scalar _tmp431 = std::max<Scalar>(0, (((_tmp417) > 0) - ((_tmp417) < 0)));
  const Scalar _tmp432 = _tmp428 * _tmp430 * _tmp431;
  const Scalar _tmp433 = _tmp427 * _tmp432;
  const Scalar _tmp434 = _tmp421 * _tmp433;
  const Scalar _tmp435 = _tmp425 * _tmp433;
  const Scalar _tmp436 = _tmp147 + matches_0_9_source_coords(1, 0);
  const Scalar _tmp437 = _tmp144 + matches_0_9_source_coords(0, 0);
  const Scalar _tmp438 = std::pow(Scalar(_tmp146 * std::pow(_tmp437, Scalar(2)) +
                                         _tmp149 * std::pow(_tmp436, Scalar(2)) + _tmp150),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp439 = _tmp436 * _tmp438;
  const Scalar _tmp440 = _tmp437 * _tmp438;
  const Scalar _tmp441 =
      _tmp143 * _tmp439 + _tmp153 * landmarks_9_ + _tmp155 * _tmp440 + _tmp438 * _tmp51;
  const Scalar _tmp442 =
      _tmp158 * _tmp440 + _tmp159 * _tmp439 + _tmp160 * landmarks_9_ + _tmp438 * _tmp52;
  const Scalar _tmp443 =
      _tmp162 * _tmp440 + _tmp163 * _tmp439 + _tmp164 * landmarks_9_ + _tmp438 * _tmp48;
  const Scalar _tmp444 = _tmp442 * _tmp87 + _tmp443 * _tmp83;
  const Scalar _tmp445 = _tmp441 * _tmp77 + _tmp444;
  const Scalar _tmp446 = _tmp106 * _tmp442 + _tmp108 * _tmp441;
  const Scalar _tmp447 = _tmp104 * _tmp443 + _tmp446;
  const Scalar _tmp448 = std::max<Scalar>(_tmp447, epsilon);
  const Scalar _tmp449 = Scalar(1.0) / (_tmp448);
  const Scalar _tmp450 = _tmp449 * views_1_calibration(0, 0);
  const Scalar _tmp451 =
      _tmp445 * _tmp450 - matches_0_9_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp452 = _tmp100 * _tmp441 + _tmp443 * _tmp97;
  const Scalar _tmp453 = _tmp442 * _tmp94 + _tmp452;
  const Scalar _tmp454 = _tmp449 * views_1_calibration(1, 0);
  const Scalar _tmp455 =
      _tmp453 * _tmp454 - matches_0_9_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp456 = std::pow(_tmp451, Scalar(2)) + std::pow(_tmp455, Scalar(2)) + epsilon;
  const Scalar _tmp457 = std::pow(_tmp456, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp458 = std::sqrt(matches_0_9_weight);
  const Scalar _tmp459 = std::max<Scalar>(0, (((_tmp447) > 0) - ((_tmp447) < 0)));
  const Scalar _tmp460 = _tmp184 * _tmp456 + 1;
  const Scalar _tmp461 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp460, _tmp188) - 1)));
  const Scalar _tmp462 = _tmp458 * _tmp459 * _tmp461;
  const Scalar _tmp463 = _tmp457 * _tmp462;
  const Scalar _tmp464 = _tmp451 * _tmp463;
  const Scalar _tmp465 = _tmp455 * _tmp463;
  const Scalar _tmp466 = _tmp147 + matches_0_10_source_coords(1, 0);
  const Scalar _tmp467 = _tmp144 + matches_0_10_source_coords(0, 0);
  const Scalar _tmp468 = std::pow(Scalar(_tmp146 * std::pow(_tmp467, Scalar(2)) +
                                         _tmp149 * std::pow(_tmp466, Scalar(2)) + _tmp150),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp469 = _tmp466 * _tmp468;
  const Scalar _tmp470 = _tmp467 * _tmp468;
  const Scalar _tmp471 =
      _tmp143 * _tmp469 + _tmp153 * landmarks_10_ + _tmp155 * _tmp470 + _tmp468 * _tmp51;
  const Scalar _tmp472 =
      _tmp162 * _tmp470 + _tmp163 * _tmp469 + _tmp164 * landmarks_10_ + _tmp468 * _tmp48;
  const Scalar _tmp473 =
      _tmp158 * _tmp470 + _tmp159 * _tmp469 + _tmp160 * landmarks_10_ + _tmp468 * _tmp52;
  const Scalar _tmp474 = _tmp472 * _tmp83 + _tmp473 * _tmp87;
  const Scalar _tmp475 = _tmp471 * _tmp77 + _tmp474;
  const Scalar _tmp476 = _tmp106 * _tmp473 + _tmp108 * _tmp471;
  const Scalar _tmp477 = _tmp104 * _tmp472 + _tmp476;
  const Scalar _tmp478 = std::max<Scalar>(_tmp477, epsilon);
  const Scalar _tmp479 = Scalar(1.0) / (_tmp478);
  const Scalar _tmp480 = _tmp479 * views_1_calibration(0, 0);
  const Scalar _tmp481 =
      _tmp475 * _tmp480 - matches_0_10_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp482 = _tmp100 * _tmp471 + _tmp472 * _tmp97;
  const Scalar _tmp483 = _tmp473 * _tmp94 + _tmp482;
  const Scalar _tmp484 = _tmp479 * views_1_calibration(1, 0);
  const Scalar _tmp485 =
      _tmp483 * _tmp484 - matches_0_10_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp486 = std::pow(_tmp481, Scalar(2)) + std::pow(_tmp485, Scalar(2)) + epsilon;
  const Scalar _tmp487 = std::pow(_tmp486, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp488 = std::sqrt(matches_0_10_weight);
  const Scalar _tmp489 = _tmp184 * _tmp486 + 1;
  const Scalar _tmp490 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp489, _tmp188) - 1)));
  const Scalar _tmp491 = std::max<Scalar>(0, (((_tmp477) > 0) - ((_tmp477) < 0)));
  const Scalar _tmp492 = _tmp488 * _tmp490 * _tmp491;
  const Scalar _tmp493 = _tmp487 * _tmp492;
  const Scalar _tmp494 = _tmp481 * _tmp493;
  const Scalar _tmp495 = _tmp485 * _tmp493;
  const Scalar _tmp496 = _tmp147 + matches_0_11_source_coords(1, 0);
  const Scalar _tmp497 = _tmp144 + matches_0_11_source_coords(0, 0);
  const Scalar _tmp498 = std::pow(Scalar(_tmp146 * std::pow(_tmp497, Scalar(2)) +
                                         _tmp149 * std::pow(_tmp496, Scalar(2)) + _tmp150),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp499 = _tmp496 * _tmp498;
  const Scalar _tmp500 = _tmp497 * _tmp498;
  const Scalar _tmp501 =
      _tmp143 * _tmp499 + _tmp153 * landmarks_11_ + _tmp155 * _tmp500 + _tmp498 * _tmp51;
  const Scalar _tmp502 =
      _tmp158 * _tmp500 + _tmp159 * _tmp499 + _tmp160 * landmarks_11_ + _tmp498 * _tmp52;
  const Scalar _tmp503 =
      _tmp162 * _tmp500 + _tmp163 * _tmp499 + _tmp164 * landmarks_11_ + _tmp48 * _tmp498;
  const Scalar _tmp504 = _tmp502 * _tmp87 + _tmp503 * _tmp83;
  const Scalar _tmp505 = _tmp501 * _tmp77 + _tmp504;
  const Scalar _tmp506 = _tmp106 * _tmp502 + _tmp108 * _tmp501;
  const Scalar _tmp507 = _tmp104 * _tmp503 + _tmp506;
  const Scalar _tmp508 = std::max<Scalar>(_tmp507, epsilon);
  const Scalar _tmp509 = Scalar(1.0) / (_tmp508);
  const Scalar _tmp510 = _tmp509 * views_1_calibration(0, 0);
  const Scalar _tmp511 =
      _tmp505 * _tmp510 - matches_0_11_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp512 = _tmp100 * _tmp501 + _tmp503 * _tmp97;
  const Scalar _tmp513 = _tmp502 * _tmp94 + _tmp512;
  const Scalar _tmp514 = _tmp509 * views_1_calibration(1, 0);
  const Scalar _tmp515 =
      _tmp513 * _tmp514 - matches_0_11_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp516 = std::pow(_tmp511, Scalar(2)) + std::pow(_tmp515, Scalar(2)) + epsilon;
  const Scalar _tmp517 = std::pow(_tmp516, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp518 = _tmp184 * _tmp516 + 1;
  const Scalar _tmp519 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp518, _tmp188) - 1)));
  const Scalar _tmp520 = std::sqrt(matches_0_11_weight);
  const Scalar _tmp521 = std::max<Scalar>(0, (((_tmp507) > 0) - ((_tmp507) < 0)));
  const Scalar _tmp522 = _tmp519 * _tmp520 * _tmp521;
  const Scalar _tmp523 = _tmp517 * _tmp522;
  const Scalar _tmp524 = _tmp511 * _tmp523;
  const Scalar _tmp525 = _tmp515 * _tmp523;
  const Scalar _tmp526 = _tmp147 + matches_0_12_source_coords(1, 0);
  const Scalar _tmp527 = _tmp144 + matches_0_12_source_coords(0, 0);
  const Scalar _tmp528 = std::pow(Scalar(_tmp146 * std::pow(_tmp527, Scalar(2)) +
                                         _tmp149 * std::pow(_tmp526, Scalar(2)) + _tmp150),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp529 = _tmp526 * _tmp528;
  const Scalar _tmp530 = _tmp527 * _tmp528;
  const Scalar _tmp531 =
      _tmp143 * _tmp529 + _tmp153 * landmarks_12_ + _tmp155 * _tmp530 + _tmp51 * _tmp528;
  const Scalar _tmp532 =
      _tmp162 * _tmp530 + _tmp163 * _tmp529 + _tmp164 * landmarks_12_ + _tmp48 * _tmp528;
  const Scalar _tmp533 =
      _tmp158 * _tmp530 + _tmp159 * _tmp529 + _tmp160 * landmarks_12_ + _tmp52 * _tmp528;
  const Scalar _tmp534 = _tmp532 * _tmp83 + _tmp533 * _tmp87;
  const Scalar _tmp535 = _tmp531 * _tmp77 + _tmp534;
  const Scalar _tmp536 = _tmp106 * _tmp533 + _tmp108 * _tmp531;
  const Scalar _tmp537 = _tmp104 * _tmp532 + _tmp536;
  const Scalar _tmp538 = std::max<Scalar>(_tmp537, epsilon);
  const Scalar _tmp539 = Scalar(1.0) / (_tmp538);
  const Scalar _tmp540 = _tmp539 * views_1_calibration(0, 0);
  const Scalar _tmp541 =
      _tmp535 * _tmp540 - matches_0_12_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp542 = _tmp100 * _tmp531 + _tmp532 * _tmp97;
  const Scalar _tmp543 = _tmp533 * _tmp94 + _tmp542;
  const Scalar _tmp544 = _tmp539 * views_1_calibration(1, 0);
  const Scalar _tmp545 =
      _tmp543 * _tmp544 - matches_0_12_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp546 = std::pow(_tmp541, Scalar(2)) + std::pow(_tmp545, Scalar(2)) + epsilon;
  const Scalar _tmp547 = std::pow(_tmp546, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp548 = _tmp184 * _tmp546 + 1;
  const Scalar _tmp549 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp548, _tmp188) - 1)));
  const Scalar _tmp550 = std::sqrt(matches_0_12_weight);
  const Scalar _tmp551 = std::max<Scalar>(0, (((_tmp537) > 0) - ((_tmp537) < 0)));
  const Scalar _tmp552 = _tmp549 * _tmp550 * _tmp551;
  const Scalar _tmp553 = _tmp547 * _tmp552;
  const Scalar _tmp554 = _tmp541 * _tmp553;
  const Scalar _tmp555 = _tmp545 * _tmp553;
  const Scalar _tmp556 = _tmp147 + matches_0_13_source_coords(1, 0);
  const Scalar _tmp557 = _tmp144 + matches_0_13_source_coords(0, 0);
  const Scalar _tmp558 = std::pow(Scalar(_tmp146 * std::pow(_tmp557, Scalar(2)) +
                                         _tmp149 * std::pow(_tmp556, Scalar(2)) + _tmp150),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp559 = _tmp556 * _tmp558;
  const Scalar _tmp560 = _tmp557 * _tmp558;
  const Scalar _tmp561 =
      _tmp143 * _tmp559 + _tmp153 * landmarks_13_ + _tmp155 * _tmp560 + _tmp51 * _tmp558;
  const Scalar _tmp562 =
      _tmp158 * _tmp560 + _tmp159 * _tmp559 + _tmp160 * landmarks_13_ + _tmp52 * _tmp558;
  const Scalar _tmp563 =
      _tmp162 * _tmp560 + _tmp163 * _tmp559 + _tmp164 * landmarks_13_ + _tmp48 * _tmp558;
  const Scalar _tmp564 = _tmp562 * _tmp87 + _tmp563 * _tmp83;
  const Scalar _tmp565 = _tmp561 * _tmp77 + _tmp564;
  const Scalar _tmp566 = _tmp106 * _tmp562 + _tmp108 * _tmp561;
  const Scalar _tmp567 = _tmp104 * _tmp563 + _tmp566;
  const Scalar _tmp568 = std::max<Scalar>(_tmp567, epsilon);
  const Scalar _tmp569 = Scalar(1.0) / (_tmp568);
  const Scalar _tmp570 = _tmp569 * views_1_calibration(0, 0);
  const Scalar _tmp571 =
      _tmp565 * _tmp570 - matches_0_13_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp572 = _tmp100 * _tmp561 + _tmp563 * _tmp97;
  const Scalar _tmp573 = _tmp562 * _tmp94 + _tmp572;
  const Scalar _tmp574 = _tmp569 * views_1_calibration(1, 0);
  const Scalar _tmp575 =
      _tmp573 * _tmp574 - matches_0_13_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp576 = std::pow(_tmp571, Scalar(2)) + std::pow(_tmp575, Scalar(2)) + epsilon;
  const Scalar _tmp577 = std::pow(_tmp576, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp578 = _tmp184 * _tmp576 + 1;
  const Scalar _tmp579 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp578, _tmp188) - 1)));
  const Scalar _tmp580 = std::sqrt(matches_0_13_weight);
  const Scalar _tmp581 = std::max<Scalar>(0, (((_tmp567) > 0) - ((_tmp567) < 0)));
  const Scalar _tmp582 = _tmp579 * _tmp580 * _tmp581;
  const Scalar _tmp583 = _tmp577 * _tmp582;
  const Scalar _tmp584 = _tmp571 * _tmp583;
  const Scalar _tmp585 = _tmp575 * _tmp583;
  const Scalar _tmp586 = _tmp147 + matches_0_14_source_coords(1, 0);
  const Scalar _tmp587 = _tmp144 + matches_0_14_source_coords(0, 0);
  const Scalar _tmp588 = std::pow(Scalar(_tmp146 * std::pow(_tmp587, Scalar(2)) +
                                         _tmp149 * std::pow(_tmp586, Scalar(2)) + _tmp150),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp589 = _tmp586 * _tmp588;
  const Scalar _tmp590 = _tmp587 * _tmp588;
  const Scalar _tmp591 =
      _tmp143 * _tmp589 + _tmp153 * landmarks_14_ + _tmp155 * _tmp590 + _tmp51 * _tmp588;
  const Scalar _tmp592 =
      _tmp158 * _tmp590 + _tmp159 * _tmp589 + _tmp160 * landmarks_14_ + _tmp52 * _tmp588;
  const Scalar _tmp593 =
      _tmp162 * _tmp590 + _tmp163 * _tmp589 + _tmp164 * landmarks_14_ + _tmp48 * _tmp588;
  const Scalar _tmp594 = _tmp592 * _tmp87 + _tmp593 * _tmp83;
  const Scalar _tmp595 = _tmp591 * _tmp77 + _tmp594;
  const Scalar _tmp596 = _tmp106 * _tmp592 + _tmp108 * _tmp591;
  const Scalar _tmp597 = _tmp104 * _tmp593 + _tmp596;
  const Scalar _tmp598 = std::max<Scalar>(_tmp597, epsilon);
  const Scalar _tmp599 = Scalar(1.0) / (_tmp598);
  const Scalar _tmp600 = _tmp599 * views_1_calibration(0, 0);
  const Scalar _tmp601 =
      _tmp595 * _tmp600 - matches_0_14_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp602 = _tmp100 * _tmp591 + _tmp593 * _tmp97;
  const Scalar _tmp603 = _tmp592 * _tmp94 + _tmp602;
  const Scalar _tmp604 = _tmp599 * views_1_calibration(1, 0);
  const Scalar _tmp605 =
      _tmp603 * _tmp604 - matches_0_14_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp606 = std::pow(_tmp601, Scalar(2)) + std::pow(_tmp605, Scalar(2)) + epsilon;
  const Scalar _tmp607 = std::pow(_tmp606, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp608 = std::sqrt(matches_0_14_weight);
  const Scalar _tmp609 = _tmp184 * _tmp606 + 1;
  const Scalar _tmp610 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp609, _tmp188) - 1)));
  const Scalar _tmp611 = std::max<Scalar>(0, (((_tmp597) > 0) - ((_tmp597) < 0)));
  const Scalar _tmp612 = _tmp608 * _tmp610 * _tmp611;
  const Scalar _tmp613 = _tmp607 * _tmp612;
  const Scalar _tmp614 = _tmp601 * _tmp613;
  const Scalar _tmp615 = _tmp605 * _tmp613;
  const Scalar _tmp616 = _tmp147 + matches_0_15_source_coords(1, 0);
  const Scalar _tmp617 = _tmp144 + matches_0_15_source_coords(0, 0);
  const Scalar _tmp618 = std::pow(Scalar(_tmp146 * std::pow(_tmp617, Scalar(2)) +
                                         _tmp149 * std::pow(_tmp616, Scalar(2)) + _tmp150),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp619 = _tmp616 * _tmp618;
  const Scalar _tmp620 = _tmp617 * _tmp618;
  const Scalar _tmp621 =
      _tmp143 * _tmp619 + _tmp153 * landmarks_15_ + _tmp155 * _tmp620 + _tmp51 * _tmp618;
  const Scalar _tmp622 =
      _tmp162 * _tmp620 + _tmp163 * _tmp619 + _tmp164 * landmarks_15_ + _tmp48 * _tmp618;
  const Scalar _tmp623 =
      _tmp158 * _tmp620 + _tmp159 * _tmp619 + _tmp160 * landmarks_15_ + _tmp52 * _tmp618;
  const Scalar _tmp624 = _tmp622 * _tmp83 + _tmp623 * _tmp87;
  const Scalar _tmp625 = _tmp621 * _tmp77 + _tmp624;
  const Scalar _tmp626 = _tmp106 * _tmp623 + _tmp108 * _tmp621;
  const Scalar _tmp627 = _tmp104 * _tmp622 + _tmp626;
  const Scalar _tmp628 = std::max<Scalar>(_tmp627, epsilon);
  const Scalar _tmp629 = Scalar(1.0) / (_tmp628);
  const Scalar _tmp630 = _tmp629 * views_1_calibration(0, 0);
  const Scalar _tmp631 =
      _tmp625 * _tmp630 - matches_0_15_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp632 = _tmp100 * _tmp621 + _tmp622 * _tmp97;
  const Scalar _tmp633 = _tmp623 * _tmp94 + _tmp632;
  const Scalar _tmp634 = _tmp629 * views_1_calibration(1, 0);
  const Scalar _tmp635 =
      _tmp633 * _tmp634 - matches_0_15_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp636 = std::pow(_tmp631, Scalar(2)) + std::pow(_tmp635, Scalar(2)) + epsilon;
  const Scalar _tmp637 = std::pow(_tmp636, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp638 = _tmp184 * _tmp636 + 1;
  const Scalar _tmp639 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp638, _tmp188) - 1)));
  const Scalar _tmp640 = std::sqrt(matches_0_15_weight);
  const Scalar _tmp641 = std::max<Scalar>(0, (((_tmp627) > 0) - ((_tmp627) < 0)));
  const Scalar _tmp642 = _tmp639 * _tmp640 * _tmp641;
  const Scalar _tmp643 = _tmp637 * _tmp642;
  const Scalar _tmp644 = _tmp631 * _tmp643;
  const Scalar _tmp645 = _tmp635 * _tmp643;
  const Scalar _tmp646 = _tmp147 + matches_0_16_source_coords(1, 0);
  const Scalar _tmp647 = _tmp144 + matches_0_16_source_coords(0, 0);
  const Scalar _tmp648 = std::pow(Scalar(_tmp146 * std::pow(_tmp647, Scalar(2)) +
                                         _tmp149 * std::pow(_tmp646, Scalar(2)) + _tmp150),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp649 = _tmp646 * _tmp648;
  const Scalar _tmp650 = _tmp647 * _tmp648;
  const Scalar _tmp651 =
      _tmp143 * _tmp649 + _tmp153 * landmarks_16_ + _tmp155 * _tmp650 + _tmp51 * _tmp648;
  const Scalar _tmp652 =
      _tmp158 * _tmp650 + _tmp159 * _tmp649 + _tmp160 * landmarks_16_ + _tmp52 * _tmp648;
  const Scalar _tmp653 =
      _tmp162 * _tmp650 + _tmp163 * _tmp649 + _tmp164 * landmarks_16_ + _tmp48 * _tmp648;
  const Scalar _tmp654 = _tmp652 * _tmp87 + _tmp653 * _tmp83;
  const Scalar _tmp655 = _tmp651 * _tmp77 + _tmp654;
  const Scalar _tmp656 = _tmp106 * _tmp652 + _tmp108 * _tmp651;
  const Scalar _tmp657 = _tmp104 * _tmp653 + _tmp656;
  const Scalar _tmp658 = std::max<Scalar>(_tmp657, epsilon);
  const Scalar _tmp659 = Scalar(1.0) / (_tmp658);
  const Scalar _tmp660 = _tmp659 * views_1_calibration(0, 0);
  const Scalar _tmp661 =
      _tmp655 * _tmp660 - matches_0_16_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp662 = _tmp100 * _tmp651 + _tmp653 * _tmp97;
  const Scalar _tmp663 = _tmp652 * _tmp94 + _tmp662;
  const Scalar _tmp664 = _tmp659 * views_1_calibration(1, 0);
  const Scalar _tmp665 =
      _tmp663 * _tmp664 - matches_0_16_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp666 = std::pow(_tmp661, Scalar(2)) + std::pow(_tmp665, Scalar(2)) + epsilon;
  const Scalar _tmp667 = std::pow(_tmp666, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp668 = std::sqrt(matches_0_16_weight);
  const Scalar _tmp669 = std::max<Scalar>(0, (((_tmp657) > 0) - ((_tmp657) < 0)));
  const Scalar _tmp670 = _tmp184 * _tmp666 + 1;
  const Scalar _tmp671 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp670, _tmp188) - 1)));
  const Scalar _tmp672 = _tmp668 * _tmp669 * _tmp671;
  const Scalar _tmp673 = _tmp667 * _tmp672;
  const Scalar _tmp674 = _tmp661 * _tmp673;
  const Scalar _tmp675 = _tmp665 * _tmp673;
  const Scalar _tmp676 = _tmp147 + matches_0_17_source_coords(1, 0);
  const Scalar _tmp677 = _tmp144 + matches_0_17_source_coords(0, 0);
  const Scalar _tmp678 = std::pow(Scalar(_tmp146 * std::pow(_tmp677, Scalar(2)) +
                                         _tmp149 * std::pow(_tmp676, Scalar(2)) + _tmp150),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp679 = _tmp676 * _tmp678;
  const Scalar _tmp680 = _tmp677 * _tmp678;
  const Scalar _tmp681 =
      _tmp143 * _tmp679 + _tmp153 * landmarks_17_ + _tmp155 * _tmp680 + _tmp51 * _tmp678;
  const Scalar _tmp682 =
      _tmp158 * _tmp680 + _tmp159 * _tmp679 + _tmp160 * landmarks_17_ + _tmp52 * _tmp678;
  const Scalar _tmp683 =
      _tmp162 * _tmp680 + _tmp163 * _tmp679 + _tmp164 * landmarks_17_ + _tmp48 * _tmp678;
  const Scalar _tmp684 = _tmp682 * _tmp87 + _tmp683 * _tmp83;
  const Scalar _tmp685 = _tmp681 * _tmp77 + _tmp684;
  const Scalar _tmp686 = _tmp106 * _tmp682 + _tmp108 * _tmp681;
  const Scalar _tmp687 = _tmp104 * _tmp683 + _tmp686;
  const Scalar _tmp688 = std::max<Scalar>(_tmp687, epsilon);
  const Scalar _tmp689 = Scalar(1.0) / (_tmp688);
  const Scalar _tmp690 = _tmp689 * views_1_calibration(0, 0);
  const Scalar _tmp691 =
      _tmp685 * _tmp690 - matches_0_17_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp692 = _tmp100 * _tmp681 + _tmp683 * _tmp97;
  const Scalar _tmp693 = _tmp682 * _tmp94 + _tmp692;
  const Scalar _tmp694 = _tmp689 * views_1_calibration(1, 0);
  const Scalar _tmp695 =
      _tmp693 * _tmp694 - matches_0_17_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp696 = std::pow(_tmp691, Scalar(2)) + std::pow(_tmp695, Scalar(2)) + epsilon;
  const Scalar _tmp697 = std::pow(_tmp696, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp698 = std::sqrt(matches_0_17_weight);
  const Scalar _tmp699 = std::max<Scalar>(0, (((_tmp687) > 0) - ((_tmp687) < 0)));
  const Scalar _tmp700 = _tmp184 * _tmp696 + 1;
  const Scalar _tmp701 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp700, _tmp188) - 1)));
  const Scalar _tmp702 = _tmp698 * _tmp699 * _tmp701;
  const Scalar _tmp703 = _tmp697 * _tmp702;
  const Scalar _tmp704 = _tmp691 * _tmp703;
  const Scalar _tmp705 = _tmp695 * _tmp703;
  const Scalar _tmp706 = _tmp147 + matches_0_18_source_coords(1, 0);
  const Scalar _tmp707 = _tmp144 + matches_0_18_source_coords(0, 0);
  const Scalar _tmp708 = std::pow(Scalar(_tmp146 * std::pow(_tmp707, Scalar(2)) +
                                         _tmp149 * std::pow(_tmp706, Scalar(2)) + _tmp150),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp709 = _tmp706 * _tmp708;
  const Scalar _tmp710 = _tmp707 * _tmp708;
  const Scalar _tmp711 =
      _tmp143 * _tmp709 + _tmp153 * landmarks_18_ + _tmp155 * _tmp710 + _tmp51 * _tmp708;
  const Scalar _tmp712 =
      _tmp162 * _tmp710 + _tmp163 * _tmp709 + _tmp164 * landmarks_18_ + _tmp48 * _tmp708;
  const Scalar _tmp713 =
      _tmp158 * _tmp710 + _tmp159 * _tmp709 + _tmp160 * landmarks_18_ + _tmp52 * _tmp708;
  const Scalar _tmp714 = _tmp712 * _tmp83 + _tmp713 * _tmp87;
  const Scalar _tmp715 = _tmp711 * _tmp77 + _tmp714;
  const Scalar _tmp716 = _tmp106 * _tmp713 + _tmp108 * _tmp711;
  const Scalar _tmp717 = _tmp104 * _tmp712 + _tmp716;
  const Scalar _tmp718 = std::max<Scalar>(_tmp717, epsilon);
  const Scalar _tmp719 = Scalar(1.0) / (_tmp718);
  const Scalar _tmp720 = _tmp719 * views_1_calibration(0, 0);
  const Scalar _tmp721 =
      _tmp715 * _tmp720 - matches_0_18_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp722 = _tmp100 * _tmp711 + _tmp712 * _tmp97;
  const Scalar _tmp723 = _tmp713 * _tmp94 + _tmp722;
  const Scalar _tmp724 = _tmp719 * views_1_calibration(1, 0);
  const Scalar _tmp725 =
      _tmp723 * _tmp724 - matches_0_18_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp726 = std::pow(_tmp721, Scalar(2)) + std::pow(_tmp725, Scalar(2)) + epsilon;
  const Scalar _tmp727 = std::pow(_tmp726, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp728 = std::max<Scalar>(0, (((_tmp717) > 0) - ((_tmp717) < 0)));
  const Scalar _tmp729 = std::sqrt(matches_0_18_weight);
  const Scalar _tmp730 = _tmp184 * _tmp726 + 1;
  const Scalar _tmp731 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp730, _tmp188) - 1)));
  const Scalar _tmp732 = _tmp728 * _tmp729 * _tmp731;
  const Scalar _tmp733 = _tmp727 * _tmp732;
  const Scalar _tmp734 = _tmp721 * _tmp733;
  const Scalar _tmp735 = _tmp725 * _tmp733;
  const Scalar _tmp736 = _tmp147 + matches_0_19_source_coords(1, 0);
  const Scalar _tmp737 = _tmp144 + matches_0_19_source_coords(0, 0);
  const Scalar _tmp738 = std::pow(Scalar(_tmp146 * std::pow(_tmp737, Scalar(2)) +
                                         _tmp149 * std::pow(_tmp736, Scalar(2)) + _tmp150),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp739 = _tmp736 * _tmp738;
  const Scalar _tmp740 = _tmp737 * _tmp738;
  const Scalar _tmp741 =
      _tmp143 * _tmp739 + _tmp153 * landmarks_19_ + _tmp155 * _tmp740 + _tmp51 * _tmp738;
  const Scalar _tmp742 =
      _tmp162 * _tmp740 + _tmp163 * _tmp739 + _tmp164 * landmarks_19_ + _tmp48 * _tmp738;
  const Scalar _tmp743 =
      _tmp158 * _tmp740 + _tmp159 * _tmp739 + _tmp160 * landmarks_19_ + _tmp52 * _tmp738;
  const Scalar _tmp744 = _tmp742 * _tmp83 + _tmp743 * _tmp87;
  const Scalar _tmp745 = _tmp741 * _tmp77 + _tmp744;
  const Scalar _tmp746 = _tmp106 * _tmp743 + _tmp108 * _tmp741;
  const Scalar _tmp747 = _tmp104 * _tmp742 + _tmp746;
  const Scalar _tmp748 = std::max<Scalar>(_tmp747, epsilon);
  const Scalar _tmp749 = Scalar(1.0) / (_tmp748);
  const Scalar _tmp750 = _tmp749 * views_1_calibration(0, 0);
  const Scalar _tmp751 =
      _tmp745 * _tmp750 - matches_0_19_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp752 = _tmp100 * _tmp741 + _tmp742 * _tmp97;
  const Scalar _tmp753 = _tmp743 * _tmp94 + _tmp752;
  const Scalar _tmp754 = _tmp749 * views_1_calibration(1, 0);
  const Scalar _tmp755 =
      _tmp753 * _tmp754 - matches_0_19_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp756 = std::pow(_tmp751, Scalar(2)) + std::pow(_tmp755, Scalar(2)) + epsilon;
  const Scalar _tmp757 = std::pow(_tmp756, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp758 = std::sqrt(matches_0_19_weight);
  const Scalar _tmp759 = std::max<Scalar>(0, (((_tmp747) > 0) - ((_tmp747) < 0)));
  const Scalar _tmp760 = _tmp184 * _tmp756 + 1;
  const Scalar _tmp761 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp760, _tmp188) - 1)));
  const Scalar _tmp762 = _tmp758 * _tmp759 * _tmp761;
  const Scalar _tmp763 = _tmp757 * _tmp762;
  const Scalar _tmp764 = _tmp751 * _tmp763;
  const Scalar _tmp765 = _tmp755 * _tmp763;
  const Scalar _tmp766 = landmarks_0_ - matches_0_0_inverse_range_prior;
  const Scalar _tmp767 = epsilon + matches_0_0_inverse_range_prior_sigma;
  const Scalar _tmp768 = matches_0_0_weight / _tmp767;
  const Scalar _tmp769 = landmarks_1_ - matches_0_1_inverse_range_prior;
  const Scalar _tmp770 = epsilon + matches_0_1_inverse_range_prior_sigma;
  const Scalar _tmp771 = matches_0_1_weight / _tmp770;
  const Scalar _tmp772 = landmarks_2_ - matches_0_2_inverse_range_prior;
  const Scalar _tmp773 = epsilon + matches_0_2_inverse_range_prior_sigma;
  const Scalar _tmp774 = matches_0_2_weight / _tmp773;
  const Scalar _tmp775 = landmarks_3_ - matches_0_3_inverse_range_prior;
  const Scalar _tmp776 = epsilon + matches_0_3_inverse_range_prior_sigma;
  const Scalar _tmp777 = matches_0_3_weight / _tmp776;
  const Scalar _tmp778 = landmarks_4_ - matches_0_4_inverse_range_prior;
  const Scalar _tmp779 = epsilon + matches_0_4_inverse_range_prior_sigma;
  const Scalar _tmp780 = matches_0_4_weight / _tmp779;
  const Scalar _tmp781 = landmarks_5_ - matches_0_5_inverse_range_prior;
  const Scalar _tmp782 = epsilon + matches_0_5_inverse_range_prior_sigma;
  const Scalar _tmp783 = matches_0_5_weight / _tmp782;
  const Scalar _tmp784 = landmarks_6_ - matches_0_6_inverse_range_prior;
  const Scalar _tmp785 = epsilon + matches_0_6_inverse_range_prior_sigma;
  const Scalar _tmp786 = matches_0_6_weight / _tmp785;
  const Scalar _tmp787 = landmarks_7_ - matches_0_7_inverse_range_prior;
  const Scalar _tmp788 = epsilon + matches_0_7_inverse_range_prior_sigma;
  const Scalar _tmp789 = matches_0_7_weight / _tmp788;
  const Scalar _tmp790 = landmarks_8_ - matches_0_8_inverse_range_prior;
  const Scalar _tmp791 = epsilon + matches_0_8_inverse_range_prior_sigma;
  const Scalar _tmp792 = matches_0_8_weight / _tmp791;
  const Scalar _tmp793 = landmarks_9_ - matches_0_9_inverse_range_prior;
  const Scalar _tmp794 = epsilon + matches_0_9_inverse_range_prior_sigma;
  const Scalar _tmp795 = matches_0_9_weight / _tmp794;
  const Scalar _tmp796 = landmarks_10_ - matches_0_10_inverse_range_prior;
  const Scalar _tmp797 = epsilon + matches_0_10_inverse_range_prior_sigma;
  const Scalar _tmp798 = matches_0_10_weight / _tmp797;
  const Scalar _tmp799 = landmarks_11_ - matches_0_11_inverse_range_prior;
  const Scalar _tmp800 = epsilon + matches_0_11_inverse_range_prior_sigma;
  const Scalar _tmp801 = matches_0_11_weight / _tmp800;
  const Scalar _tmp802 = landmarks_12_ - matches_0_12_inverse_range_prior;
  const Scalar _tmp803 = epsilon + matches_0_12_inverse_range_prior_sigma;
  const Scalar _tmp804 = matches_0_12_weight / _tmp803;
  const Scalar _tmp805 = landmarks_13_ - matches_0_13_inverse_range_prior;
  const Scalar _tmp806 = epsilon + matches_0_13_inverse_range_prior_sigma;
  const Scalar _tmp807 = matches_0_13_weight / _tmp806;
  const Scalar _tmp808 = landmarks_14_ - matches_0_14_inverse_range_prior;
  const Scalar _tmp809 = epsilon + matches_0_14_inverse_range_prior_sigma;
  const Scalar _tmp810 = matches_0_14_weight / _tmp809;
  const Scalar _tmp811 = landmarks_15_ - matches_0_15_inverse_range_prior;
  const Scalar _tmp812 = epsilon + matches_0_15_inverse_range_prior_sigma;
  const Scalar _tmp813 = matches_0_15_weight / _tmp812;
  const Scalar _tmp814 = landmarks_16_ - matches_0_16_inverse_range_prior;
  const Scalar _tmp815 = epsilon + matches_0_16_inverse_range_prior_sigma;
  const Scalar _tmp816 = matches_0_16_weight / _tmp815;
  const Scalar _tmp817 = landmarks_17_ - matches_0_17_inverse_range_prior;
  const Scalar _tmp818 = epsilon + matches_0_17_inverse_range_prior_sigma;
  const Scalar _tmp819 = matches_0_17_weight / _tmp818;
  const Scalar _tmp820 = landmarks_18_ - matches_0_18_inverse_range_prior;
  const Scalar _tmp821 = epsilon + matches_0_18_inverse_range_prior_sigma;
  const Scalar _tmp822 = matches_0_18_weight / _tmp821;
  const Scalar _tmp823 = landmarks_19_ - matches_0_19_inverse_range_prior;
  const Scalar _tmp824 = epsilon + matches_0_19_inverse_range_prior_sigma;
  const Scalar _tmp825 = matches_0_19_weight / _tmp824;
  const Scalar _tmp826 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp827 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp828 = (Scalar(1) / Scalar(2)) * _tmp19;
  const Scalar _tmp829 = (Scalar(1) / Scalar(2)) * _tmp20;
  const Scalar _tmp830 = _tmp826 - _tmp827 + _tmp828 - _tmp829;
  const Scalar _tmp831 = _priors_0_1_target_T_src[3] * _tmp830;
  const Scalar _tmp832 = (Scalar(1) / Scalar(2)) * _tmp27;
  const Scalar _tmp833 = (Scalar(1) / Scalar(2)) * _tmp28;
  const Scalar _tmp834 = (Scalar(1) / Scalar(2)) * _tmp29;
  const Scalar _tmp835 = (Scalar(1) / Scalar(2)) * _tmp30;
  const Scalar _tmp836 = -_tmp832 + _tmp833 + _tmp834 - _tmp835;
  const Scalar _tmp837 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp838 = (Scalar(1) / Scalar(2)) * _tmp12;
  const Scalar _tmp839 = (Scalar(1) / Scalar(2)) * _tmp13;
  const Scalar _tmp840 = (Scalar(1) / Scalar(2)) * _tmp14;
  const Scalar _tmp841 = _tmp837 + _tmp838 + _tmp839 + _tmp840;
  const Scalar _tmp842 = _priors_0_1_target_T_src[0] * _tmp841;
  const Scalar _tmp843 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp844 = (Scalar(1) / Scalar(2)) * _tmp23;
  const Scalar _tmp845 = (Scalar(1) / Scalar(2)) * _tmp24;
  const Scalar _tmp846 = (Scalar(1) / Scalar(2)) * _tmp25;
  const Scalar _tmp847 = _tmp843 + _tmp844 - _tmp845 - _tmp846;
  const Scalar _tmp848 = -_priors_0_1_target_T_src[2] * _tmp847 - _tmp842;
  const Scalar _tmp849 = -_priors_0_1_target_T_src[1] * _tmp836 - _tmp831 + _tmp848;
  const Scalar _tmp850 = std::fabs(_tmp33 + _tmp34 + _tmp35 + _tmp36);
  const Scalar _tmp851 = std::min<Scalar>(_tmp42, _tmp850);
  const Scalar _tmp852 = std::acos(_tmp851);
  const Scalar _tmp853 = 1 - std::pow(_tmp851, Scalar(2));
  const Scalar _tmp854 = _tmp39 * ((((_tmp42 - _tmp850) > 0) - ((_tmp42 - _tmp850) < 0)) + 1) *
                         (((-_tmp33 + _tmp37) > 0) - ((-_tmp33 + _tmp37) < 0));
  const Scalar _tmp855 = _tmp851 * _tmp852 * _tmp854 / (_tmp853 * std::sqrt(_tmp853));
  const Scalar _tmp856 = _tmp849 * _tmp855;
  const Scalar _tmp857 = _tmp57 * _tmp856;
  const Scalar _tmp858 = _priors_0_1_target_T_src[3] * _tmp841;
  const Scalar _tmp859 = -_priors_0_1_target_T_src[1] * _tmp847;
  const Scalar _tmp860 = -_priors_0_1_target_T_src[0] * _tmp830;
  const Scalar _tmp861 = _tmp852 / std::sqrt(_tmp853);
  const Scalar _tmp862 =
      _tmp861 * (_priors_0_1_target_T_src[2] * _tmp836 + _tmp858 + _tmp859 + _tmp860);
  const Scalar _tmp863 = _tmp40 * _tmp862;
  const Scalar _tmp864 = _priors_0_1_target_T_src[0] * _tmp847;
  const Scalar _tmp865 = _priors_0_1_target_T_src[2] * _tmp841;
  const Scalar _tmp866 = -_priors_0_1_target_T_src[1] * _tmp830 - _tmp865;
  const Scalar _tmp867 = _tmp40 * _tmp861;
  const Scalar _tmp868 = _tmp867 * (_priors_0_1_target_T_src[3] * _tmp836 + _tmp864 + _tmp866);
  const Scalar _tmp869 = _tmp854 / _tmp853;
  const Scalar _tmp870 = _tmp849 * _tmp869;
  const Scalar _tmp871 = _tmp57 * _tmp870;
  const Scalar _tmp872 = _tmp54 * _tmp870;
  const Scalar _tmp873 = _tmp54 * _tmp856;
  const Scalar _tmp874 = _tmp32 * _tmp855;
  const Scalar _tmp875 = _tmp849 * _tmp874;
  const Scalar _tmp876 = _priors_0_1_target_T_src[1] * _tmp841;
  const Scalar _tmp877 = _priors_0_1_target_T_src[3] * _tmp847;
  const Scalar _tmp878 = _priors_0_1_target_T_src[2] * _tmp830;
  const Scalar _tmp879 =
      _tmp867 * (-_priors_0_1_target_T_src[0] * _tmp836 + _tmp876 + _tmp877 - _tmp878);
  const Scalar _tmp880 = _tmp32 * _tmp869;
  const Scalar _tmp881 = _tmp849 * _tmp880;
  const Scalar _tmp882 =
      _tmp857 * priors_0_1_sqrt_info(4, 2) + _tmp863 * priors_0_1_sqrt_info(4, 0) +
      _tmp868 * priors_0_1_sqrt_info(4, 1) - _tmp871 * priors_0_1_sqrt_info(4, 2) -
      _tmp872 * priors_0_1_sqrt_info(4, 0) + _tmp873 * priors_0_1_sqrt_info(4, 0) +
      _tmp875 * priors_0_1_sqrt_info(4, 1) + _tmp879 * priors_0_1_sqrt_info(4, 2) -
      _tmp881 * priors_0_1_sqrt_info(4, 1);
  const Scalar _tmp883 = -_tmp74;
  const Scalar _tmp884 = _tmp71 + _tmp883;
  const Scalar _tmp885 = -_tmp91;
  const Scalar _tmp886 = std::pow(_views_1_pose[3], Scalar(2));
  const Scalar _tmp887 = _tmp885 + _tmp886;
  const Scalar _tmp888 = _tmp884 + _tmp887;
  const Scalar _tmp889 = -_tmp85;
  const Scalar _tmp890 = _tmp86 + _tmp889;
  const Scalar _tmp891 = -_tmp886;
  const Scalar _tmp892 = _tmp891 + _tmp91;
  const Scalar _tmp893 = _tmp884 + _tmp892;
  const Scalar _tmp894 = -_tmp96;
  const Scalar _tmp895 = _tmp105 + _tmp894;
  const Scalar _tmp896 =
      ((((_tmp41 + _tmp597) > 0) - ((_tmp41 + _tmp597) < 0)) + 1) / std::pow(_tmp598, Scalar(2));
  const Scalar _tmp897 = _tmp896 * (_tmp591 * _tmp890 + _tmp592 * _tmp893 + _tmp593 * _tmp895);
  const Scalar _tmp898 = (Scalar(1) / Scalar(2)) * views_1_calibration(1, 0);
  const Scalar _tmp899 = _tmp603 * _tmp898;
  const Scalar _tmp900 = _tmp604 * (_tmp593 * _tmp888 + _tmp596) - _tmp897 * _tmp899;
  const Scalar _tmp901 = 2 * _tmp605;
  const Scalar _tmp902 =
      -_tmp595 * _tmp601 * _tmp897 * views_1_calibration(0, 0) + _tmp900 * _tmp901;
  const Scalar _tmp903 = _tmp612 / (_tmp606 * std::sqrt(_tmp606));
  const Scalar _tmp904 = (Scalar(1) / Scalar(2)) * _tmp605;
  const Scalar _tmp905 = _tmp903 * _tmp904;
  const Scalar _tmp906 = _tmp188 - 1;
  const Scalar _tmp907 =
      _tmp181 * _tmp607 * _tmp608 * std::pow(_tmp609, _tmp906) * _tmp611 / _tmp610;
  const Scalar _tmp908 = _tmp904 * _tmp907;
  const Scalar _tmp909 = _tmp613 * _tmp900 - _tmp902 * _tmp905 + _tmp902 * _tmp908;
  const Scalar _tmp910 = _tmp501 * _tmp890 + _tmp502 * _tmp893 + _tmp503 * _tmp895;
  const Scalar _tmp911 =
      ((((_tmp41 + _tmp507) > 0) - ((_tmp41 + _tmp507) < 0)) + 1) / std::pow(_tmp508, Scalar(2));
  const Scalar _tmp912 = _tmp505 * _tmp911;
  const Scalar _tmp913 = _tmp513 * _tmp911;
  const Scalar _tmp914 = _tmp898 * _tmp913;
  const Scalar _tmp915 = _tmp514 * (_tmp503 * _tmp888 + _tmp506) - _tmp910 * _tmp914;
  const Scalar _tmp916 = 2 * _tmp515;
  const Scalar _tmp917 =
      -_tmp511 * _tmp910 * _tmp912 * views_1_calibration(0, 0) + _tmp915 * _tmp916;
  const Scalar _tmp918 = _tmp522 / (_tmp516 * std::sqrt(_tmp516));
  const Scalar _tmp919 = (Scalar(1) / Scalar(2)) * _tmp918;
  const Scalar _tmp920 = _tmp511 * _tmp919;
  const Scalar _tmp921 =
      _tmp181 * _tmp517 * std::pow(_tmp518, _tmp906) * _tmp520 * _tmp521 / _tmp519;
  const Scalar _tmp922 = (Scalar(1) / Scalar(2)) * _tmp921;
  const Scalar _tmp923 = _tmp511 * _tmp922;
  const Scalar _tmp924 = (Scalar(1) / Scalar(2)) * views_1_calibration(0, 0);
  const Scalar _tmp925 = _tmp505 * _tmp924;
  const Scalar _tmp926 = _tmp911 * _tmp925;
  const Scalar _tmp927 = -_tmp523 * _tmp910 * _tmp926 - _tmp917 * _tmp920 + _tmp917 * _tmp923;
  const Scalar _tmp928 = _tmp515 * _tmp919;
  const Scalar _tmp929 = _tmp515 * _tmp922;
  const Scalar _tmp930 = _tmp523 * _tmp915 - _tmp917 * _tmp928 + _tmp917 * _tmp929;
  const Scalar _tmp931 = -_tmp837 - _tmp838 - _tmp839 - _tmp840;
  const Scalar _tmp932 = _priors_1_0_target_T_src[0] * _tmp931;
  const Scalar _tmp933 = -_tmp932;
  const Scalar _tmp934 = -_tmp843 - _tmp844 + _tmp845 + _tmp846;
  const Scalar _tmp935 = _priors_1_0_target_T_src[3] * _tmp830;
  const Scalar _tmp936 = _tmp832 - _tmp833 - _tmp834 + _tmp835;
  const Scalar _tmp937 = -_priors_1_0_target_T_src[1] * _tmp936;
  const Scalar _tmp938 = -_priors_1_0_target_T_src[2] * _tmp934 + _tmp933 - _tmp935 + _tmp937;
  const Scalar _tmp939 = std::fabs(_tmp112 + _tmp114 + _tmp116 + _tmp118);
  const Scalar _tmp940 = std::min<Scalar>(_tmp42, _tmp939);
  const Scalar _tmp941 = 1 - std::pow(_tmp940, Scalar(2));
  const Scalar _tmp942 = _tmp121 * ((((_tmp42 - _tmp939) > 0) - ((_tmp42 - _tmp939) < 0)) + 1) *
                         (((-_tmp112 + _tmp119) > 0) - ((-_tmp112 + _tmp119) < 0));
  const Scalar _tmp943 = _tmp942 / _tmp941;
  const Scalar _tmp944 = _tmp938 * _tmp943;
  const Scalar _tmp945 = _tmp131 * _tmp944;
  const Scalar _tmp946 = _priors_1_0_target_T_src[2] * _tmp931;
  const Scalar _tmp947 = -_tmp946;
  const Scalar _tmp948 = -_priors_1_0_target_T_src[1] * _tmp830;
  const Scalar _tmp949 = _priors_1_0_target_T_src[3] * _tmp936;
  const Scalar _tmp950 = std::acos(_tmp940);
  const Scalar _tmp951 = _tmp950 / std::sqrt(_tmp941);
  const Scalar _tmp952 = _tmp122 * _tmp951;
  const Scalar _tmp953 =
      _tmp952 * (_priors_1_0_target_T_src[0] * _tmp934 + _tmp947 + _tmp948 + _tmp949);
  const Scalar _tmp954 = _priors_1_0_target_T_src[1] * _tmp931;
  const Scalar _tmp955 = -_priors_1_0_target_T_src[2] * _tmp830;
  const Scalar _tmp956 = -_priors_1_0_target_T_src[0] * _tmp936;
  const Scalar _tmp957 = _priors_1_0_target_T_src[3] * _tmp934 + _tmp954 + _tmp955 + _tmp956;
  const Scalar _tmp958 = _tmp952 * _tmp957;
  const Scalar _tmp959 =
      -_tmp107 - _tmp109 + _tmp110 + _tmp888 * _views_0_pose[6] - _tmp888 * _views_1_pose[6];
  const Scalar _tmp960 = _tmp890 * _views_0_pose[4] - _tmp890 * _views_1_pose[4] +
                         _tmp893 * _views_0_pose[5] - _tmp893 * _views_1_pose[5] +
                         _tmp895 * _views_0_pose[6] - _tmp895 * _views_1_pose[6];
  const Scalar _tmp961 = _tmp940 * _tmp942 * _tmp950 / (_tmp941 * std::sqrt(_tmp941));
  const Scalar _tmp962 = _tmp938 * _tmp961;
  const Scalar _tmp963 = _tmp131 * priors_1_0_sqrt_info(1, 0);
  const Scalar _tmp964 = _tmp128 * priors_1_0_sqrt_info(1, 1);
  const Scalar _tmp965 = _tmp123 * _tmp962;
  const Scalar _tmp966 = _tmp123 * _tmp944;
  const Scalar _tmp967 = _priors_1_0_target_T_src[3] * _tmp931;
  const Scalar _tmp968 = _priors_1_0_target_T_src[0] * _tmp830;
  const Scalar _tmp969 = _priors_1_0_target_T_src[2] * _tmp936;
  const Scalar _tmp970 =
      _tmp951 * (-_priors_1_0_target_T_src[1] * _tmp934 + _tmp967 - _tmp968 + _tmp969);
  const Scalar _tmp971 = _tmp122 * _tmp970;
  const Scalar _tmp972 =
      -_tmp944 * _tmp964 - _tmp945 * priors_1_0_sqrt_info(1, 0) +
      _tmp953 * priors_1_0_sqrt_info(1, 1) + _tmp958 * priors_1_0_sqrt_info(1, 2) +
      _tmp959 * priors_1_0_sqrt_info(1, 4) + _tmp960 * priors_1_0_sqrt_info(1, 5) +
      _tmp962 * _tmp963 + _tmp962 * _tmp964 + _tmp965 * priors_1_0_sqrt_info(1, 2) -
      _tmp966 * priors_1_0_sqrt_info(1, 2) + _tmp971 * priors_1_0_sqrt_info(1, 0);
  const Scalar _tmp973 = _tmp561 * _tmp890 + _tmp562 * _tmp893 + _tmp563 * _tmp895;
  const Scalar _tmp974 =
      ((((_tmp41 + _tmp567) > 0) - ((_tmp41 + _tmp567) < 0)) + 1) / std::pow(_tmp568, Scalar(2));
  const Scalar _tmp975 = _tmp565 * _tmp974;
  const Scalar _tmp976 = _tmp573 * _tmp974;
  const Scalar _tmp977 = _tmp898 * _tmp976;
  const Scalar _tmp978 = _tmp574 * (_tmp563 * _tmp888 + _tmp566) - _tmp973 * _tmp977;
  const Scalar _tmp979 = 2 * _tmp575;
  const Scalar _tmp980 =
      -_tmp571 * _tmp973 * _tmp975 * views_1_calibration(0, 0) + _tmp978 * _tmp979;
  const Scalar _tmp981 = (Scalar(1) / Scalar(2)) * _tmp575;
  const Scalar _tmp982 = _tmp582 / (_tmp576 * std::sqrt(_tmp576));
  const Scalar _tmp983 = _tmp981 * _tmp982;
  const Scalar _tmp984 =
      _tmp181 * _tmp577 * std::pow(_tmp578, _tmp906) * _tmp580 * _tmp581 / _tmp579;
  const Scalar _tmp985 = _tmp981 * _tmp984;
  const Scalar _tmp986 = _tmp583 * _tmp978 - _tmp980 * _tmp983 + _tmp980 * _tmp985;
  const Scalar _tmp987 = _tmp131 * priors_1_0_sqrt_info(2, 0);
  const Scalar _tmp988 =
      -_tmp135 * _tmp944 + _tmp135 * _tmp962 + _tmp136 * _tmp970 -
      _tmp945 * priors_1_0_sqrt_info(2, 0) + _tmp953 * priors_1_0_sqrt_info(2, 1) +
      _tmp958 * priors_1_0_sqrt_info(2, 2) + _tmp959 * priors_1_0_sqrt_info(2, 4) +
      _tmp960 * priors_1_0_sqrt_info(2, 5) + _tmp962 * _tmp987 +
      _tmp965 * priors_1_0_sqrt_info(2, 2) - _tmp966 * priors_1_0_sqrt_info(2, 2);
  const Scalar _tmp989 = _tmp201 * _tmp890 + _tmp202 * _tmp893 + _tmp203 * _tmp895;
  const Scalar _tmp990 =
      ((((_tmp207 + _tmp41) > 0) - ((_tmp207 + _tmp41) < 0)) + 1) / std::pow(_tmp208, Scalar(2));
  const Scalar _tmp991 = _tmp205 * _tmp990;
  const Scalar _tmp992 = _tmp213 * _tmp990;
  const Scalar _tmp993 = _tmp898 * _tmp992;
  const Scalar _tmp994 = _tmp214 * (_tmp203 * _tmp888 + _tmp206) - _tmp989 * _tmp993;
  const Scalar _tmp995 = 2 * _tmp215;
  const Scalar _tmp996 =
      -_tmp211 * _tmp989 * _tmp991 * views_1_calibration(0, 0) + _tmp994 * _tmp995;
  const Scalar _tmp997 = (Scalar(1) / Scalar(2)) * _tmp215;
  const Scalar _tmp998 = _tmp222 / (_tmp216 * std::sqrt(_tmp216));
  const Scalar _tmp999 = _tmp997 * _tmp998;
  const Scalar _tmp1000 =
      _tmp181 * _tmp217 * std::pow(_tmp218, _tmp906) * _tmp220 * _tmp221 / _tmp219;
  const Scalar _tmp1001 = _tmp1000 * _tmp997;
  const Scalar _tmp1002 = _tmp1001 * _tmp996 + _tmp223 * _tmp994 - _tmp996 * _tmp999;
  const Scalar _tmp1003 = _tmp471 * _tmp890 + _tmp472 * _tmp895 + _tmp473 * _tmp893;
  const Scalar _tmp1004 =
      ((((_tmp41 + _tmp477) > 0) - ((_tmp41 + _tmp477) < 0)) + 1) / std::pow(_tmp478, Scalar(2));
  const Scalar _tmp1005 = _tmp1004 * _tmp475;
  const Scalar _tmp1006 = _tmp1004 * _tmp483;
  const Scalar _tmp1007 = _tmp1006 * _tmp898;
  const Scalar _tmp1008 = -_tmp1003 * _tmp1007 + _tmp484 * (_tmp472 * _tmp888 + _tmp476);
  const Scalar _tmp1009 = 2 * _tmp485;
  const Scalar _tmp1010 =
      -_tmp1003 * _tmp1005 * _tmp481 * views_1_calibration(0, 0) + _tmp1008 * _tmp1009;
  const Scalar _tmp1011 = (Scalar(1) / Scalar(2)) * _tmp181;
  const Scalar _tmp1012 = _tmp487 * _tmp488 * std::pow(_tmp489, _tmp906) * _tmp491 / _tmp490;
  const Scalar _tmp1013 = _tmp1011 * _tmp1012;
  const Scalar _tmp1014 = _tmp1013 * _tmp485;
  const Scalar _tmp1015 = _tmp492 / (_tmp486 * std::sqrt(_tmp486));
  const Scalar _tmp1016 = (Scalar(1) / Scalar(2)) * _tmp1015;
  const Scalar _tmp1017 = _tmp1016 * _tmp485;
  const Scalar _tmp1018 = _tmp1008 * _tmp493 + _tmp1010 * _tmp1014 - _tmp1010 * _tmp1017;
  const Scalar _tmp1019 = _tmp54 * priors_0_1_sqrt_info(2, 0);
  const Scalar _tmp1020 =
      _tmp1019 * _tmp856 - _tmp1019 * _tmp870 + _tmp66 * _tmp856 - _tmp66 * _tmp870 +
      _tmp863 * priors_0_1_sqrt_info(2, 0) + _tmp868 * priors_0_1_sqrt_info(2, 1) +
      _tmp875 * priors_0_1_sqrt_info(2, 1) + _tmp879 * priors_0_1_sqrt_info(2, 2) -
      _tmp881 * priors_0_1_sqrt_info(2, 1);
  const Scalar _tmp1021 = _tmp351 * _tmp890 + _tmp352 * _tmp893 + _tmp353 * _tmp895;
  const Scalar _tmp1022 =
      ((((_tmp357 + _tmp41) > 0) - ((_tmp357 + _tmp41) < 0)) + 1) / std::pow(_tmp358, Scalar(2));
  const Scalar _tmp1023 = _tmp1022 * _tmp363;
  const Scalar _tmp1024 = _tmp1023 * _tmp898;
  const Scalar _tmp1025 = -_tmp1021 * _tmp1024 + _tmp364 * (_tmp353 * _tmp888 + _tmp356);
  const Scalar _tmp1026 = 2 * _tmp365;
  const Scalar _tmp1027 = _tmp1022 * _tmp355;
  const Scalar _tmp1028 =
      -_tmp1021 * _tmp1027 * _tmp361 * views_1_calibration(0, 0) + _tmp1025 * _tmp1026;
  const Scalar _tmp1029 = _tmp372 / (_tmp366 * std::sqrt(_tmp366));
  const Scalar _tmp1030 = _tmp1028 * _tmp1029;
  const Scalar _tmp1031 = (Scalar(1) / Scalar(2)) * _tmp361;
  const Scalar _tmp1032 = _tmp1027 * _tmp924;
  const Scalar _tmp1033 =
      _tmp181 * _tmp367 * _tmp368 * _tmp369 * std::pow(_tmp370, _tmp906) / _tmp371;
  const Scalar _tmp1034 = _tmp1031 * _tmp1033;
  const Scalar _tmp1035 =
      -_tmp1021 * _tmp1032 * _tmp373 + _tmp1028 * _tmp1034 - _tmp1030 * _tmp1031;
  const Scalar _tmp1036 = _tmp531 * _tmp890 + _tmp532 * _tmp895 + _tmp533 * _tmp893;
  const Scalar _tmp1037 =
      ((((_tmp41 + _tmp537) > 0) - ((_tmp41 + _tmp537) < 0)) + 1) / std::pow(_tmp538, Scalar(2));
  const Scalar _tmp1038 = _tmp1037 * _tmp535;
  const Scalar _tmp1039 = _tmp1037 * _tmp543;
  const Scalar _tmp1040 = _tmp1039 * _tmp898;
  const Scalar _tmp1041 = -_tmp1036 * _tmp1040 + _tmp544 * (_tmp532 * _tmp888 + _tmp536);
  const Scalar _tmp1042 = 2 * _tmp545;
  const Scalar _tmp1043 =
      -_tmp1036 * _tmp1038 * _tmp541 * views_1_calibration(0, 0) + _tmp1041 * _tmp1042;
  const Scalar _tmp1044 = _tmp552 / (_tmp546 * std::sqrt(_tmp546));
  const Scalar _tmp1045 = (Scalar(1) / Scalar(2)) * _tmp541;
  const Scalar _tmp1046 = _tmp1044 * _tmp1045;
  const Scalar _tmp1047 = _tmp1038 * _tmp924;
  const Scalar _tmp1048 =
      _tmp181 * _tmp547 * std::pow(_tmp548, _tmp906) * _tmp550 * _tmp551 / _tmp549;
  const Scalar _tmp1049 = _tmp1045 * _tmp1048;
  const Scalar _tmp1050 =
      -_tmp1036 * _tmp1047 * _tmp553 - _tmp1043 * _tmp1046 + _tmp1043 * _tmp1049;
  const Scalar _tmp1051 = _tmp261 * _tmp890 + _tmp262 * _tmp893 + _tmp263 * _tmp895;
  const Scalar _tmp1052 =
      ((((_tmp267 + _tmp41) > 0) - ((_tmp267 + _tmp41) < 0)) + 1) / std::pow(_tmp268, Scalar(2));
  const Scalar _tmp1053 = _tmp1052 * _tmp265;
  const Scalar _tmp1054 = _tmp1052 * _tmp273;
  const Scalar _tmp1055 = _tmp1054 * _tmp898;
  const Scalar _tmp1056 = -_tmp1051 * _tmp1055 + _tmp274 * (_tmp263 * _tmp888 + _tmp266);
  const Scalar _tmp1057 = 2 * _tmp275;
  const Scalar _tmp1058 =
      -_tmp1051 * _tmp1053 * _tmp271 * views_1_calibration(0, 0) + _tmp1056 * _tmp1057;
  const Scalar _tmp1059 =
      _tmp181 * _tmp277 * _tmp278 * std::pow(_tmp279, _tmp906) * _tmp281 / _tmp280;
  const Scalar _tmp1060 = (Scalar(1) / Scalar(2)) * _tmp1059;
  const Scalar _tmp1061 = _tmp1060 * _tmp271;
  const Scalar _tmp1062 = _tmp1053 * _tmp924;
  const Scalar _tmp1063 = _tmp282 / (_tmp276 * std::sqrt(_tmp276));
  const Scalar _tmp1064 = (Scalar(1) / Scalar(2)) * _tmp1063;
  const Scalar _tmp1065 = _tmp1064 * _tmp271;
  const Scalar _tmp1066 =
      -_tmp1051 * _tmp1062 * _tmp283 + _tmp1058 * _tmp1061 - _tmp1058 * _tmp1065;
  const Scalar _tmp1067 =
      ((((_tmp327 + _tmp41) > 0) - ((_tmp327 + _tmp41) < 0)) + 1) / std::pow(_tmp328, Scalar(2));
  const Scalar _tmp1068 = _tmp1067 * (_tmp321 * _tmp890 + _tmp322 * _tmp893 + _tmp323 * _tmp895);
  const Scalar _tmp1069 = _tmp333 * _tmp898;
  const Scalar _tmp1070 = -_tmp1068 * _tmp1069 + _tmp334 * (_tmp323 * _tmp888 + _tmp326);
  const Scalar _tmp1071 = 2 * _tmp335;
  const Scalar _tmp1072 = _tmp1068 * _tmp325;
  const Scalar _tmp1073 = _tmp1070 * _tmp1071 - _tmp1072 * _tmp331 * views_1_calibration(0, 0);
  const Scalar _tmp1074 = _tmp342 / (_tmp336 * std::sqrt(_tmp336));
  const Scalar _tmp1075 = (Scalar(1) / Scalar(2)) * _tmp1074;
  const Scalar _tmp1076 = _tmp1075 * _tmp331;
  const Scalar _tmp1077 = _tmp337 * _tmp338 * _tmp339 * std::pow(_tmp340, _tmp906) / _tmp341;
  const Scalar _tmp1078 = _tmp1011 * _tmp1077;
  const Scalar _tmp1079 = _tmp1073 * _tmp1078;
  const Scalar _tmp1080 = -_tmp1072 * _tmp343 * _tmp924 - _tmp1073 * _tmp1076 + _tmp1079 * _tmp331;
  const Scalar _tmp1081 = _tmp681 * _tmp890 + _tmp682 * _tmp893 + _tmp683 * _tmp895;
  const Scalar _tmp1082 =
      ((((_tmp41 + _tmp687) > 0) - ((_tmp41 + _tmp687) < 0)) + 1) / std::pow(_tmp688, Scalar(2));
  const Scalar _tmp1083 = _tmp1082 * _tmp693;
  const Scalar _tmp1084 = _tmp1083 * _tmp898;
  const Scalar _tmp1085 = -_tmp1081 * _tmp1084 + _tmp694 * (_tmp683 * _tmp888 + _tmp686);
  const Scalar _tmp1086 = 2 * _tmp695;
  const Scalar _tmp1087 = _tmp1082 * _tmp685;
  const Scalar _tmp1088 = _tmp1081 * _tmp1087;
  const Scalar _tmp1089 = _tmp1085 * _tmp1086 - _tmp1088 * _tmp691 * views_1_calibration(0, 0);
  const Scalar _tmp1090 = (Scalar(1) / Scalar(2)) * _tmp691;
  const Scalar _tmp1091 =
      _tmp181 * _tmp697 * _tmp698 * _tmp699 * std::pow(_tmp700, _tmp906) / _tmp701;
  const Scalar _tmp1092 = _tmp1090 * _tmp1091;
  const Scalar _tmp1093 = _tmp702 / (_tmp696 * std::sqrt(_tmp696));
  const Scalar _tmp1094 = _tmp1090 * _tmp1093;
  const Scalar _tmp1095 = -_tmp1088 * _tmp703 * _tmp924 + _tmp1089 * _tmp1092 - _tmp1089 * _tmp1094;
  const Scalar _tmp1096 =
      ((((_tmp41 + _tmp747) > 0) - ((_tmp41 + _tmp747) < 0)) + 1) / std::pow(_tmp748, Scalar(2));
  const Scalar _tmp1097 = _tmp1096 * (_tmp741 * _tmp890 + _tmp742 * _tmp895 + _tmp743 * _tmp893);
  const Scalar _tmp1098 = _tmp753 * _tmp898;
  const Scalar _tmp1099 = -_tmp1097 * _tmp1098 + _tmp754 * (_tmp742 * _tmp888 + _tmp746);
  const Scalar _tmp1100 = 2 * _tmp755;
  const Scalar _tmp1101 = _tmp1097 * _tmp745;
  const Scalar _tmp1102 = _tmp1099 * _tmp1100 - _tmp1101 * _tmp751 * views_1_calibration(0, 0);
  const Scalar _tmp1103 = _tmp762 / (_tmp756 * std::sqrt(_tmp756));
  const Scalar _tmp1104 = (Scalar(1) / Scalar(2)) * _tmp755;
  const Scalar _tmp1105 = _tmp1103 * _tmp1104;
  const Scalar _tmp1106 =
      _tmp181 * _tmp757 * _tmp758 * _tmp759 * std::pow(_tmp760, _tmp906) / _tmp761;
  const Scalar _tmp1107 = _tmp1104 * _tmp1106;
  const Scalar _tmp1108 = _tmp1099 * _tmp763 - _tmp1102 * _tmp1105 + _tmp1102 * _tmp1107;
  const Scalar _tmp1109 = _tmp157 * _tmp890 + _tmp161 * _tmp893 + _tmp165 * _tmp895;
  const Scalar _tmp1110 =
      ((((_tmp169 + _tmp41) > 0) - ((_tmp169 + _tmp41) < 0)) + 1) / std::pow(_tmp170, Scalar(2));
  const Scalar _tmp1111 = _tmp1110 * _tmp175;
  const Scalar _tmp1112 = _tmp1111 * _tmp898;
  const Scalar _tmp1113 = -_tmp1109 * _tmp1112 + _tmp176 * (_tmp165 * _tmp888 + _tmp168);
  const Scalar _tmp1114 = _tmp1110 * _tmp167;
  const Scalar _tmp1115 = 2 * _tmp177;
  const Scalar _tmp1116 =
      -_tmp1109 * _tmp1114 * _tmp173 * views_1_calibration(0, 0) + _tmp1113 * _tmp1115;
  const Scalar _tmp1117 = (Scalar(1) / Scalar(2)) * _tmp177;
  const Scalar _tmp1118 =
      _tmp179 * _tmp180 * _tmp181 * std::pow(_tmp185, _tmp906) * _tmp191 / _tmp190;
  const Scalar _tmp1119 = _tmp1117 * _tmp1118;
  const Scalar _tmp1120 = _tmp192 / (_tmp178 * std::sqrt(_tmp178));
  const Scalar _tmp1121 = _tmp1117 * _tmp1120;
  const Scalar _tmp1122 = _tmp1113 * _tmp193 + _tmp1116 * _tmp1119 - _tmp1116 * _tmp1121;
  const Scalar _tmp1123 = _tmp381 * _tmp890 + _tmp382 * _tmp893 + _tmp383 * _tmp895;
  const Scalar _tmp1124 =
      ((((_tmp387 + _tmp41) > 0) - ((_tmp387 + _tmp41) < 0)) + 1) / std::pow(_tmp388, Scalar(2));
  const Scalar _tmp1125 = _tmp1124 * _tmp393;
  const Scalar _tmp1126 = _tmp1125 * _tmp898;
  const Scalar _tmp1127 = -_tmp1123 * _tmp1126 + _tmp394 * (_tmp383 * _tmp888 + _tmp386);
  const Scalar _tmp1128 = 2 * _tmp395;
  const Scalar _tmp1129 = _tmp1124 * _tmp385;
  const Scalar _tmp1130 = _tmp1123 * _tmp1129;
  const Scalar _tmp1131 = _tmp1127 * _tmp1128 - _tmp1130 * _tmp391 * views_1_calibration(0, 0);
  const Scalar _tmp1132 = (Scalar(1) / Scalar(2)) * _tmp395;
  const Scalar _tmp1133 =
      _tmp181 * _tmp397 * _tmp398 * _tmp399 * std::pow(_tmp400, _tmp906) / _tmp401;
  const Scalar _tmp1134 = _tmp1132 * _tmp1133;
  const Scalar _tmp1135 = _tmp402 / (_tmp396 * std::sqrt(_tmp396));
  const Scalar _tmp1136 = _tmp1132 * _tmp1135;
  const Scalar _tmp1137 = _tmp1127 * _tmp403 + _tmp1131 * _tmp1134 - _tmp1131 * _tmp1136;
  const Scalar _tmp1138 = _tmp131 * priors_1_0_sqrt_info(4, 0);
  const Scalar _tmp1139 = _tmp128 * _tmp944;
  const Scalar _tmp1140 = _tmp128 * _tmp961;
  const Scalar _tmp1141 = _tmp1140 * priors_1_0_sqrt_info(4, 1);
  const Scalar _tmp1142 =
      -_tmp1138 * _tmp944 + _tmp1138 * _tmp962 - _tmp1139 * priors_1_0_sqrt_info(4, 1) +
      _tmp1141 * _tmp938 + _tmp953 * priors_1_0_sqrt_info(4, 1) +
      _tmp958 * priors_1_0_sqrt_info(4, 2) + _tmp959 * priors_1_0_sqrt_info(4, 4) +
      _tmp960 * priors_1_0_sqrt_info(4, 5) + _tmp965 * priors_1_0_sqrt_info(4, 2) -
      _tmp966 * priors_1_0_sqrt_info(4, 2) + _tmp971 * priors_1_0_sqrt_info(4, 0);
  const Scalar _tmp1143 = _tmp711 * _tmp890 + _tmp712 * _tmp895 + _tmp713 * _tmp893;
  const Scalar _tmp1144 =
      ((((_tmp41 + _tmp717) > 0) - ((_tmp41 + _tmp717) < 0)) + 1) / std::pow(_tmp718, Scalar(2));
  const Scalar _tmp1145 = _tmp1144 * _tmp723;
  const Scalar _tmp1146 = _tmp1145 * _tmp898;
  const Scalar _tmp1147 = -_tmp1143 * _tmp1146 + _tmp724 * (_tmp712 * _tmp888 + _tmp716);
  const Scalar _tmp1148 = 2 * _tmp725;
  const Scalar _tmp1149 = _tmp1144 * _tmp715;
  const Scalar _tmp1150 =
      -_tmp1143 * _tmp1149 * _tmp721 * views_1_calibration(0, 0) + _tmp1147 * _tmp1148;
  const Scalar _tmp1151 = _tmp732 / (_tmp726 * std::sqrt(_tmp726));
  const Scalar _tmp1152 = (Scalar(1) / Scalar(2)) * _tmp1151;
  const Scalar _tmp1153 = _tmp1152 * _tmp725;
  const Scalar _tmp1154 =
      _tmp181 * _tmp727 * _tmp728 * _tmp729 * std::pow(_tmp730, _tmp906) / _tmp731;
  const Scalar _tmp1155 = (Scalar(1) / Scalar(2)) * _tmp1154;
  const Scalar _tmp1156 = _tmp1155 * _tmp725;
  const Scalar _tmp1157 = _tmp1147 * _tmp733 - _tmp1150 * _tmp1153 + _tmp1150 * _tmp1156;
  const Scalar _tmp1158 = _tmp231 * _tmp890 + _tmp232 * _tmp895 + _tmp233 * _tmp893;
  const Scalar _tmp1159 =
      ((((_tmp237 + _tmp41) > 0) - ((_tmp237 + _tmp41) < 0)) + 1) / std::pow(_tmp238, Scalar(2));
  const Scalar _tmp1160 = _tmp235 * _tmp924;
  const Scalar _tmp1161 = _tmp1159 * _tmp1160;
  const Scalar _tmp1162 = _tmp1159 * _tmp235;
  const Scalar _tmp1163 = _tmp1159 * _tmp243;
  const Scalar _tmp1164 = _tmp1163 * _tmp898;
  const Scalar _tmp1165 = -_tmp1158 * _tmp1164 + _tmp244 * (_tmp232 * _tmp888 + _tmp236);
  const Scalar _tmp1166 = 2 * _tmp245;
  const Scalar _tmp1167 =
      -_tmp1158 * _tmp1162 * _tmp241 * views_1_calibration(0, 0) + _tmp1165 * _tmp1166;
  const Scalar _tmp1168 = (Scalar(1) / Scalar(2)) * _tmp241;
  const Scalar _tmp1169 =
      _tmp181 * _tmp247 * _tmp248 * _tmp249 * std::pow(_tmp250, _tmp906) / _tmp251;
  const Scalar _tmp1170 = _tmp1168 * _tmp1169;
  const Scalar _tmp1171 = _tmp252 / (_tmp246 * std::sqrt(_tmp246));
  const Scalar _tmp1172 = _tmp1168 * _tmp1171;
  const Scalar _tmp1173 =
      -_tmp1158 * _tmp1161 * _tmp253 + _tmp1167 * _tmp1170 - _tmp1167 * _tmp1172;
  const Scalar _tmp1174 = _tmp128 * priors_1_0_sqrt_info(0, 1);
  const Scalar _tmp1175 = _tmp131 * priors_1_0_sqrt_info(0, 0);
  const Scalar _tmp1176 =
      -_tmp1174 * _tmp944 + _tmp1174 * _tmp962 - _tmp1175 * _tmp944 + _tmp1175 * _tmp962 +
      _tmp953 * priors_1_0_sqrt_info(0, 1) + _tmp958 * priors_1_0_sqrt_info(0, 2) +
      _tmp959 * priors_1_0_sqrt_info(0, 4) + _tmp960 * priors_1_0_sqrt_info(0, 5) +
      _tmp965 * priors_1_0_sqrt_info(0, 2) - _tmp966 * priors_1_0_sqrt_info(0, 2) +
      _tmp971 * priors_1_0_sqrt_info(0, 0);
  const Scalar _tmp1177 = _tmp1155 * _tmp721;
  const Scalar _tmp1178 = _tmp1152 * _tmp721;
  const Scalar _tmp1179 = _tmp1149 * _tmp924;
  const Scalar _tmp1180 =
      -_tmp1143 * _tmp1179 * _tmp733 + _tmp1150 * _tmp1177 - _tmp1150 * _tmp1178;
  const Scalar _tmp1181 = (Scalar(1) / Scalar(2)) * _tmp751;
  const Scalar _tmp1182 = _tmp1106 * _tmp1181;
  const Scalar _tmp1183 = _tmp1103 * _tmp1181;
  const Scalar _tmp1184 = -_tmp1101 * _tmp763 * _tmp924 + _tmp1102 * _tmp1182 - _tmp1102 * _tmp1183;
  const Scalar _tmp1185 = _tmp57 * priors_0_1_sqrt_info(5, 2);
  const Scalar _tmp1186 =
      _tmp1185 * _tmp856 - _tmp1185 * _tmp870 + _tmp863 * priors_0_1_sqrt_info(5, 0) +
      _tmp868 * priors_0_1_sqrt_info(5, 1) - _tmp872 * priors_0_1_sqrt_info(5, 0) +
      _tmp873 * priors_0_1_sqrt_info(5, 0) + _tmp875 * priors_0_1_sqrt_info(5, 1) +
      _tmp879 * priors_0_1_sqrt_info(5, 2) - _tmp881 * priors_0_1_sqrt_info(5, 1);
  const Scalar _tmp1187 =
      ((((_tmp297 + _tmp41) > 0) - ((_tmp297 + _tmp41) < 0)) + 1) / std::pow(_tmp298, Scalar(2));
  const Scalar _tmp1188 = _tmp1187 * (_tmp291 * _tmp890 + _tmp292 * _tmp895 + _tmp293 * _tmp893);
  const Scalar _tmp1189 = _tmp303 * _tmp898;
  const Scalar _tmp1190 = -_tmp1188 * _tmp1189 + _tmp304 * (_tmp292 * _tmp888 + _tmp296);
  const Scalar _tmp1191 = 2 * _tmp305;
  const Scalar _tmp1192 =
      -_tmp1188 * _tmp295 * _tmp301 * views_1_calibration(0, 0) + _tmp1190 * _tmp1191;
  const Scalar _tmp1193 = _tmp312 / (_tmp306 * std::sqrt(_tmp306));
  const Scalar _tmp1194 = (Scalar(1) / Scalar(2)) * _tmp305;
  const Scalar _tmp1195 = _tmp1193 * _tmp1194;
  const Scalar _tmp1196 =
      _tmp181 * _tmp307 * _tmp308 * _tmp309 * std::pow(_tmp310, _tmp906) / _tmp311;
  const Scalar _tmp1197 = _tmp1194 * _tmp1196;
  const Scalar _tmp1198 = _tmp1190 * _tmp313 - _tmp1192 * _tmp1195 + _tmp1192 * _tmp1197;
  const Scalar _tmp1199 = _tmp621 * _tmp890 + _tmp622 * _tmp895 + _tmp623 * _tmp893;
  const Scalar _tmp1200 =
      ((((_tmp41 + _tmp627) > 0) - ((_tmp41 + _tmp627) < 0)) + 1) / std::pow(_tmp628, Scalar(2));
  const Scalar _tmp1201 = _tmp1200 * _tmp633;
  const Scalar _tmp1202 = _tmp1201 * _tmp898;
  const Scalar _tmp1203 = -_tmp1199 * _tmp1202 + _tmp634 * (_tmp622 * _tmp888 + _tmp626);
  const Scalar _tmp1204 = 2 * _tmp635;
  const Scalar _tmp1205 =
      -_tmp1199 * _tmp1200 * _tmp625 * _tmp631 * views_1_calibration(0, 0) + _tmp1203 * _tmp1204;
  const Scalar _tmp1206 = _tmp642 / (_tmp636 * std::sqrt(_tmp636));
  const Scalar _tmp1207 = (Scalar(1) / Scalar(2)) * _tmp631;
  const Scalar _tmp1208 = _tmp1206 * _tmp1207;
  const Scalar _tmp1209 = _tmp625 * _tmp924;
  const Scalar _tmp1210 = _tmp1200 * _tmp1209;
  const Scalar _tmp1211 =
      _tmp181 * _tmp637 * std::pow(_tmp638, _tmp906) * _tmp640 * _tmp641 / _tmp639;
  const Scalar _tmp1212 = _tmp1207 * _tmp1211;
  const Scalar _tmp1213 =
      -_tmp1199 * _tmp1210 * _tmp643 - _tmp1205 * _tmp1208 + _tmp1205 * _tmp1212;
  const Scalar _tmp1214 = (Scalar(1) / Scalar(2)) * _tmp391;
  const Scalar _tmp1215 = _tmp1133 * _tmp1214;
  const Scalar _tmp1216 = _tmp1135 * _tmp1214;
  const Scalar _tmp1217 = -_tmp1130 * _tmp403 * _tmp924 + _tmp1131 * _tmp1215 - _tmp1131 * _tmp1216;
  const Scalar _tmp1218 = _tmp411 * _tmp890 + _tmp412 * _tmp893 + _tmp413 * _tmp895;
  const Scalar _tmp1219 =
      ((((_tmp41 + _tmp417) > 0) - ((_tmp41 + _tmp417) < 0)) + 1) / std::pow(_tmp418, Scalar(2));
  const Scalar _tmp1220 = _tmp1219 * _tmp415;
  const Scalar _tmp1221 = _tmp1218 * _tmp1220;
  const Scalar _tmp1222 = _tmp1219 * _tmp423;
  const Scalar _tmp1223 = _tmp1222 * _tmp898;
  const Scalar _tmp1224 = -_tmp1218 * _tmp1223 + _tmp424 * (_tmp413 * _tmp888 + _tmp416);
  const Scalar _tmp1225 = 2 * _tmp425;
  const Scalar _tmp1226 = -_tmp1221 * _tmp421 * views_1_calibration(0, 0) + _tmp1224 * _tmp1225;
  const Scalar _tmp1227 = (Scalar(1) / Scalar(2)) * _tmp425;
  const Scalar _tmp1228 =
      _tmp181 * _tmp427 * _tmp428 * std::pow(_tmp429, _tmp906) * _tmp431 / _tmp430;
  const Scalar _tmp1229 = _tmp1227 * _tmp1228;
  const Scalar _tmp1230 = _tmp432 / (_tmp426 * std::sqrt(_tmp426));
  const Scalar _tmp1231 = _tmp1227 * _tmp1230;
  const Scalar _tmp1232 = _tmp1224 * _tmp433 + _tmp1226 * _tmp1229 - _tmp1226 * _tmp1231;
  const Scalar _tmp1233 = _tmp131 * priors_1_0_sqrt_info(5, 0);
  const Scalar _tmp1234 = _tmp128 * priors_1_0_sqrt_info(5, 1);
  const Scalar _tmp1235 =
      -_tmp1139 * priors_1_0_sqrt_info(5, 1) - _tmp1233 * _tmp944 + _tmp1233 * _tmp962 +
      _tmp1234 * _tmp962 + _tmp953 * priors_1_0_sqrt_info(5, 1) +
      _tmp958 * priors_1_0_sqrt_info(5, 2) + _tmp959 * priors_1_0_sqrt_info(5, 4) +
      _tmp960 * priors_1_0_sqrt_info(5, 5) + _tmp965 * priors_1_0_sqrt_info(5, 2) -
      _tmp966 * priors_1_0_sqrt_info(5, 2) + _tmp971 * priors_1_0_sqrt_info(5, 0);
  const Scalar _tmp1236 = _tmp1114 * _tmp924;
  const Scalar _tmp1237 = (Scalar(1) / Scalar(2)) * _tmp173;
  const Scalar _tmp1238 = _tmp1120 * _tmp1237;
  const Scalar _tmp1239 = _tmp1118 * _tmp1237;
  const Scalar _tmp1240 =
      -_tmp1109 * _tmp1236 * _tmp193 - _tmp1116 * _tmp1238 + _tmp1116 * _tmp1239;
  const Scalar _tmp1241 = (Scalar(1) / Scalar(2)) * _tmp695;
  const Scalar _tmp1242 = _tmp1093 * _tmp1241;
  const Scalar _tmp1243 = _tmp1091 * _tmp1241;
  const Scalar _tmp1244 = _tmp1085 * _tmp703 - _tmp1089 * _tmp1242 + _tmp1089 * _tmp1243;
  const Scalar _tmp1245 = _tmp924 * _tmp975;
  const Scalar _tmp1246 = (Scalar(1) / Scalar(2)) * _tmp571;
  const Scalar _tmp1247 = _tmp1246 * _tmp982;
  const Scalar _tmp1248 = _tmp1246 * _tmp984;
  const Scalar _tmp1249 = -_tmp1245 * _tmp583 * _tmp973 - _tmp1247 * _tmp980 + _tmp1248 * _tmp980;
  const Scalar _tmp1250 = _tmp595 * _tmp924;
  const Scalar _tmp1251 = (Scalar(1) / Scalar(2)) * _tmp601;
  const Scalar _tmp1252 = _tmp1251 * _tmp907;
  const Scalar _tmp1253 = _tmp1251 * _tmp903;
  const Scalar _tmp1254 = -_tmp1250 * _tmp613 * _tmp897 + _tmp1252 * _tmp902 - _tmp1253 * _tmp902;
  const Scalar _tmp1255 = (Scalar(1) / Scalar(2)) * _tmp365;
  const Scalar _tmp1256 = _tmp1033 * _tmp1255;
  const Scalar _tmp1257 = _tmp1025 * _tmp373 + _tmp1028 * _tmp1256 - _tmp1030 * _tmp1255;
  const Scalar _tmp1258 = (Scalar(1) / Scalar(2)) * _tmp545;
  const Scalar _tmp1259 = _tmp1044 * _tmp1258;
  const Scalar _tmp1260 = _tmp1048 * _tmp1258;
  const Scalar _tmp1261 = _tmp1041 * _tmp553 - _tmp1043 * _tmp1259 + _tmp1043 * _tmp1260;
  const Scalar _tmp1262 = _tmp54 * priors_0_1_sqrt_info(0, 0);
  const Scalar _tmp1263 =
      _tmp1262 * _tmp856 - _tmp1262 * _tmp870 + _tmp857 * priors_0_1_sqrt_info(0, 2) +
      _tmp863 * priors_0_1_sqrt_info(0, 0) + _tmp868 * priors_0_1_sqrt_info(0, 1) -
      _tmp871 * priors_0_1_sqrt_info(0, 2) + _tmp875 * priors_0_1_sqrt_info(0, 1) +
      _tmp879 * priors_0_1_sqrt_info(0, 2) - _tmp881 * priors_0_1_sqrt_info(0, 1);
  const Scalar _tmp1264 = _tmp131 * priors_1_0_sqrt_info(3, 0);
  const Scalar _tmp1265 = _tmp1140 * priors_1_0_sqrt_info(3, 1);
  const Scalar _tmp1266 =
      -_tmp1139 * priors_1_0_sqrt_info(3, 1) - _tmp1264 * _tmp944 + _tmp1264 * _tmp962 +
      _tmp1265 * _tmp938 + _tmp138 * _tmp951 * _tmp957 + _tmp953 * priors_1_0_sqrt_info(3, 1) +
      _tmp959 * priors_1_0_sqrt_info(3, 4) + _tmp960 * priors_1_0_sqrt_info(3, 5) +
      _tmp965 * priors_1_0_sqrt_info(3, 2) - _tmp966 * priors_1_0_sqrt_info(3, 2) +
      _tmp971 * priors_1_0_sqrt_info(3, 0);
  const Scalar _tmp1267 = (Scalar(1) / Scalar(2)) * _tmp421;
  const Scalar _tmp1268 = _tmp1230 * _tmp1267;
  const Scalar _tmp1269 = _tmp1228 * _tmp1267;
  const Scalar _tmp1270 = -_tmp1221 * _tmp433 * _tmp924 - _tmp1226 * _tmp1268 + _tmp1226 * _tmp1269;
  const Scalar _tmp1271 = _tmp1064 * _tmp275;
  const Scalar _tmp1272 = _tmp1060 * _tmp275;
  const Scalar _tmp1273 = _tmp1056 * _tmp283 - _tmp1058 * _tmp1271 + _tmp1058 * _tmp1272;
  const Scalar _tmp1274 = (Scalar(1) / Scalar(2)) * _tmp245;
  const Scalar _tmp1275 = _tmp1169 * _tmp1274;
  const Scalar _tmp1276 = _tmp1171 * _tmp1274;
  const Scalar _tmp1277 = _tmp1165 * _tmp253 + _tmp1167 * _tmp1275 - _tmp1167 * _tmp1276;
  const Scalar _tmp1278 =
      _tmp857 * priors_0_1_sqrt_info(3, 2) + _tmp863 * priors_0_1_sqrt_info(3, 0) +
      _tmp868 * priors_0_1_sqrt_info(3, 1) - _tmp871 * priors_0_1_sqrt_info(3, 2) -
      _tmp872 * priors_0_1_sqrt_info(3, 0) + _tmp873 * priors_0_1_sqrt_info(3, 0) +
      _tmp875 * priors_0_1_sqrt_info(3, 1) + _tmp879 * priors_0_1_sqrt_info(3, 2) -
      _tmp881 * priors_0_1_sqrt_info(3, 1);
  const Scalar _tmp1279 = _tmp1075 * _tmp335;
  const Scalar _tmp1280 = _tmp1070 * _tmp343 - _tmp1073 * _tmp1279 + _tmp1079 * _tmp335;
  const Scalar _tmp1281 = _tmp295 * _tmp924;
  const Scalar _tmp1282 = (Scalar(1) / Scalar(2)) * _tmp301;
  const Scalar _tmp1283 = _tmp1196 * _tmp1282;
  const Scalar _tmp1284 = _tmp1193 * _tmp1282;
  const Scalar _tmp1285 =
      -_tmp1188 * _tmp1281 * _tmp313 + _tmp1192 * _tmp1283 - _tmp1192 * _tmp1284;
  const Scalar _tmp1286 = _tmp441 * _tmp890 + _tmp442 * _tmp893 + _tmp443 * _tmp895;
  const Scalar _tmp1287 =
      ((((_tmp41 + _tmp447) > 0) - ((_tmp41 + _tmp447) < 0)) + 1) / std::pow(_tmp448, Scalar(2));
  const Scalar _tmp1288 = _tmp1287 * _tmp445;
  const Scalar _tmp1289 = _tmp1287 * _tmp453;
  const Scalar _tmp1290 = _tmp1289 * _tmp898;
  const Scalar _tmp1291 = -_tmp1286 * _tmp1290 + _tmp454 * (_tmp443 * _tmp888 + _tmp446);
  const Scalar _tmp1292 = 2 * _tmp455;
  const Scalar _tmp1293 =
      -_tmp1286 * _tmp1288 * _tmp451 * views_1_calibration(0, 0) + _tmp1291 * _tmp1292;
  const Scalar _tmp1294 = (Scalar(1) / Scalar(2)) * _tmp455;
  const Scalar _tmp1295 =
      _tmp181 * _tmp457 * _tmp458 * _tmp459 * std::pow(_tmp460, _tmp906) / _tmp461;
  const Scalar _tmp1296 = _tmp1294 * _tmp1295;
  const Scalar _tmp1297 = _tmp462 / (_tmp456 * std::sqrt(_tmp456));
  const Scalar _tmp1298 = _tmp1294 * _tmp1297;
  const Scalar _tmp1299 = _tmp1291 * _tmp463 + _tmp1293 * _tmp1296 - _tmp1293 * _tmp1298;
  const Scalar _tmp1300 = (Scalar(1) / Scalar(2)) * _tmp635;
  const Scalar _tmp1301 = _tmp1211 * _tmp1300;
  const Scalar _tmp1302 = _tmp1206 * _tmp1300;
  const Scalar _tmp1303 = _tmp1203 * _tmp643 + _tmp1205 * _tmp1301 - _tmp1205 * _tmp1302;
  const Scalar _tmp1304 =
      ((((_tmp41 + _tmp657) > 0) - ((_tmp41 + _tmp657) < 0)) + 1) / std::pow(_tmp658, Scalar(2));
  const Scalar _tmp1305 = _tmp1304 * (_tmp651 * _tmp890 + _tmp652 * _tmp893 + _tmp653 * _tmp895);
  const Scalar _tmp1306 = _tmp663 * _tmp898;
  const Scalar _tmp1307 = -_tmp1305 * _tmp1306 + _tmp664 * (_tmp653 * _tmp888 + _tmp656);
  const Scalar _tmp1308 = 2 * _tmp665;
  const Scalar _tmp1309 =
      -_tmp1305 * _tmp655 * _tmp661 * views_1_calibration(0, 0) + _tmp1307 * _tmp1308;
  const Scalar _tmp1310 = (Scalar(1) / Scalar(2)) * _tmp665;
  const Scalar _tmp1311 =
      _tmp181 * _tmp667 * _tmp668 * _tmp669 * std::pow(_tmp670, _tmp906) / _tmp671;
  const Scalar _tmp1312 = _tmp1310 * _tmp1311;
  const Scalar _tmp1313 = _tmp672 / (_tmp666 * std::sqrt(_tmp666));
  const Scalar _tmp1314 = _tmp1310 * _tmp1313;
  const Scalar _tmp1315 = _tmp1307 * _tmp673 + _tmp1309 * _tmp1312 - _tmp1309 * _tmp1314;
  const Scalar _tmp1316 = _tmp1288 * _tmp924;
  const Scalar _tmp1317 = (Scalar(1) / Scalar(2)) * _tmp451;
  const Scalar _tmp1318 = _tmp1295 * _tmp1317;
  const Scalar _tmp1319 = _tmp1297 * _tmp1317;
  const Scalar _tmp1320 =
      -_tmp1286 * _tmp1316 * _tmp463 + _tmp1293 * _tmp1318 - _tmp1293 * _tmp1319;
  const Scalar _tmp1321 = (Scalar(1) / Scalar(2)) * _tmp211;
  const Scalar _tmp1322 = _tmp1000 * _tmp1321;
  const Scalar _tmp1323 = _tmp924 * _tmp991;
  const Scalar _tmp1324 = _tmp1321 * _tmp998;
  const Scalar _tmp1325 = _tmp1322 * _tmp996 - _tmp1323 * _tmp223 * _tmp989 - _tmp1324 * _tmp996;
  const Scalar _tmp1326 =
      _tmp64 * _tmp862 + _tmp857 * priors_0_1_sqrt_info(1, 2) +
      _tmp868 * priors_0_1_sqrt_info(1, 1) - _tmp871 * priors_0_1_sqrt_info(1, 2) -
      _tmp872 * priors_0_1_sqrt_info(1, 0) + _tmp873 * priors_0_1_sqrt_info(1, 0) +
      _tmp875 * priors_0_1_sqrt_info(1, 1) + _tmp879 * priors_0_1_sqrt_info(1, 2) -
      _tmp881 * priors_0_1_sqrt_info(1, 1);
  const Scalar _tmp1327 = _tmp655 * _tmp924;
  const Scalar _tmp1328 = (Scalar(1) / Scalar(2)) * _tmp661;
  const Scalar _tmp1329 = _tmp1311 * _tmp1328;
  const Scalar _tmp1330 = _tmp1313 * _tmp1328;
  const Scalar _tmp1331 =
      -_tmp1305 * _tmp1327 * _tmp673 + _tmp1309 * _tmp1329 - _tmp1309 * _tmp1330;
  const Scalar _tmp1332 = _tmp1005 * _tmp924;
  const Scalar _tmp1333 = _tmp1016 * _tmp481;
  const Scalar _tmp1334 = _tmp1013 * _tmp481;
  const Scalar _tmp1335 =
      -_tmp1003 * _tmp1332 * _tmp493 - _tmp1010 * _tmp1333 + _tmp1010 * _tmp1334;
  const Scalar _tmp1336 = -_tmp71;
  const Scalar _tmp1337 = _tmp1336 + _tmp883 + _tmp886 + _tmp91;
  const Scalar _tmp1338 = _tmp1337 * _tmp681 + _tmp684;
  const Scalar _tmp1339 = _tmp1083 * _tmp1338;
  const Scalar _tmp1340 = _tmp894 + _tmp95;
  const Scalar _tmp1341 = _tmp1336 + _tmp74;
  const Scalar _tmp1342 = _tmp1341 + _tmp892;
  const Scalar _tmp1343 = -_tmp79;
  const Scalar _tmp1344 = _tmp1343 + _tmp82;
  const Scalar _tmp1345 = _tmp1087 * _tmp924;
  const Scalar _tmp1346 = -_tmp1338 * _tmp1345 +
                          _tmp690 * (_tmp1340 * _tmp682 + _tmp1342 * _tmp683 + _tmp1344 * _tmp681);
  const Scalar _tmp1347 = 2 * _tmp691;
  const Scalar _tmp1348 = -_tmp1339 * _tmp695 * views_1_calibration(1, 0) + _tmp1346 * _tmp1347;
  const Scalar _tmp1349 = _tmp1092 * _tmp1348 - _tmp1094 * _tmp1348 + _tmp1346 * _tmp703;
  const Scalar _tmp1350 = _tmp911 * (_tmp1337 * _tmp501 + _tmp504);
  const Scalar _tmp1351 = -_tmp1350 * _tmp925 +
                          _tmp510 * (_tmp1340 * _tmp502 + _tmp1342 * _tmp503 + _tmp1344 * _tmp501);
  const Scalar _tmp1352 = 2 * _tmp511;
  const Scalar _tmp1353 = _tmp1350 * _tmp513;
  const Scalar _tmp1354 = _tmp1351 * _tmp1352 - _tmp1353 * _tmp515 * views_1_calibration(1, 0);
  const Scalar _tmp1355 = _tmp1351 * _tmp523 - _tmp1354 * _tmp920 + _tmp1354 * _tmp923;
  const Scalar _tmp1356 = _tmp1337 * _tmp411 + _tmp414;
  const Scalar _tmp1357 = _tmp1222 * _tmp1356;
  const Scalar _tmp1358 = _tmp1220 * _tmp924;
  const Scalar _tmp1359 = -_tmp1356 * _tmp1358 +
                          _tmp420 * (_tmp1340 * _tmp412 + _tmp1342 * _tmp413 + _tmp1344 * _tmp411);
  const Scalar _tmp1360 = 2 * _tmp421;
  const Scalar _tmp1361 = -_tmp1357 * _tmp425 * views_1_calibration(1, 0) + _tmp1359 * _tmp1360;
  const Scalar _tmp1362 = -_tmp1268 * _tmp1361 + _tmp1269 * _tmp1361 + _tmp1359 * _tmp433;
  const Scalar _tmp1363 = _tmp1229 * _tmp1361 - _tmp1231 * _tmp1361 - _tmp1357 * _tmp433 * _tmp898;
  const Scalar _tmp1364 = -_tmp826 + _tmp827 - _tmp828 + _tmp829;
  const Scalar _tmp1365 = -_priors_0_1_target_T_src[0] * _tmp936 - _tmp876;
  const Scalar _tmp1366 = -_priors_0_1_target_T_src[2] * _tmp1364 + _tmp1365 - _tmp877;
  const Scalar _tmp1367 = _tmp1366 * _tmp855;
  const Scalar _tmp1368 = _tmp1367 * _tmp32;
  const Scalar _tmp1369 = _priors_0_1_target_T_src[1] * _tmp936;
  const Scalar _tmp1370 = _tmp867 * (_priors_0_1_target_T_src[3] * _tmp1364 + _tmp1369 + _tmp848);
  const Scalar _tmp1371 = _tmp1366 * _tmp869;
  const Scalar _tmp1372 = _tmp1366 * _tmp880;
  const Scalar _tmp1373 = -_priors_0_1_target_T_src[2] * _tmp936 + _tmp858;
  const Scalar _tmp1374 = _tmp867 * (_priors_0_1_target_T_src[0] * _tmp1364 + _tmp1373 + _tmp859);
  const Scalar _tmp1375 = _priors_0_1_target_T_src[3] * _tmp936;
  const Scalar _tmp1376 = -_priors_0_1_target_T_src[1] * _tmp1364 + _tmp1375 - _tmp864 + _tmp865;
  const Scalar _tmp1377 = _tmp1376 * _tmp867;
  const Scalar _tmp1378 =
      _tmp1019 * _tmp1367 - _tmp1019 * _tmp1371 + _tmp1367 * _tmp66 +
      _tmp1368 * priors_0_1_sqrt_info(2, 1) + _tmp1370 * priors_0_1_sqrt_info(2, 2) -
      _tmp1371 * _tmp66 - _tmp1372 * priors_0_1_sqrt_info(2, 1) +
      _tmp1374 * priors_0_1_sqrt_info(2, 1) + _tmp1377 * priors_0_1_sqrt_info(2, 0);
  const Scalar _tmp1379 = -_tmp1353 * _tmp523 * _tmp898 - _tmp1354 * _tmp928 + _tmp1354 * _tmp929;
  const Scalar _tmp1380 = -_tmp954;
  const Scalar _tmp1381 = _priors_1_0_target_T_src[3] * _tmp847;
  const Scalar _tmp1382 = -_priors_1_0_target_T_src[0] * _tmp836 + _tmp1380 - _tmp1381 + _tmp955;
  const Scalar _tmp1383 = _tmp1382 * _tmp961;
  const Scalar _tmp1384 = _priors_1_0_target_T_src[1] * _tmp847;
  const Scalar _tmp1385 =
      _tmp952 * (-_priors_1_0_target_T_src[2] * _tmp836 - _tmp1384 + _tmp967 + _tmp968);
  const Scalar _tmp1386 = _tmp123 * _tmp1383;
  const Scalar _tmp1387 = -_priors_1_0_target_T_src[0] * _tmp847;
  const Scalar _tmp1388 = _priors_1_0_target_T_src[3] * _tmp836 + _tmp1387 + _tmp946 + _tmp948;
  const Scalar _tmp1389 = _tmp1388 * _tmp952;
  const Scalar _tmp1390 = -_priors_1_0_target_T_src[2] * _tmp847;
  const Scalar _tmp1391 =
      _tmp951 * (_priors_1_0_target_T_src[1] * _tmp836 + _tmp1390 + _tmp933 + _tmp935);
  const Scalar _tmp1392 = _tmp122 * _tmp1391;
  const Scalar _tmp1393 = _tmp1382 * _tmp943;
  const Scalar _tmp1394 = _tmp131 * _tmp1393;
  const Scalar _tmp1395 = _tmp1340 * _views_0_pose[5] - _tmp1340 * _views_1_pose[5] +
                          _tmp1342 * _views_0_pose[6] - _tmp1342 * _views_1_pose[6] +
                          _tmp1344 * _views_0_pose[4] - _tmp1344 * _views_1_pose[4];
  const Scalar _tmp1396 =
      _tmp1337 * _views_0_pose[4] - _tmp1337 * _views_1_pose[4] - _tmp84 - _tmp88 + _tmp89;
  const Scalar _tmp1397 = _tmp123 * _tmp1393;
  const Scalar _tmp1398 =
      _tmp1383 * _tmp963 + _tmp1383 * _tmp964 + _tmp1385 * priors_1_0_sqrt_info(1, 1) +
      _tmp1386 * priors_1_0_sqrt_info(1, 2) + _tmp1389 * priors_1_0_sqrt_info(1, 0) +
      _tmp1392 * priors_1_0_sqrt_info(1, 2) - _tmp1393 * _tmp964 -
      _tmp1394 * priors_1_0_sqrt_info(1, 0) + _tmp1395 * priors_1_0_sqrt_info(1, 3) +
      _tmp1396 * priors_1_0_sqrt_info(1, 5) - _tmp1397 * priors_1_0_sqrt_info(1, 2);
  const Scalar _tmp1399 = _tmp1337 * _tmp201 + _tmp204;
  const Scalar _tmp1400 = _tmp1399 * _tmp992;
  const Scalar _tmp1401 = -_tmp1323 * _tmp1399 +
                          _tmp210 * (_tmp1340 * _tmp202 + _tmp1342 * _tmp203 + _tmp1344 * _tmp201);
  const Scalar _tmp1402 = 2 * _tmp211;
  const Scalar _tmp1403 = -_tmp1400 * _tmp215 * views_1_calibration(1, 0) + _tmp1401 * _tmp1402;
  const Scalar _tmp1404 = _tmp1001 * _tmp1403 - _tmp1400 * _tmp223 * _tmp898 - _tmp1403 * _tmp999;
  const Scalar _tmp1405 = _tmp1337 * _tmp441 + _tmp444;
  const Scalar _tmp1406 = -_tmp1316 * _tmp1405 +
                          _tmp450 * (_tmp1340 * _tmp442 + _tmp1342 * _tmp443 + _tmp1344 * _tmp441);
  const Scalar _tmp1407 = 2 * _tmp451;
  const Scalar _tmp1408 =
      -_tmp1289 * _tmp1405 * _tmp455 * views_1_calibration(1, 0) + _tmp1406 * _tmp1407;
  const Scalar _tmp1409 = _tmp1318 * _tmp1408 - _tmp1319 * _tmp1408 + _tmp1406 * _tmp463;
  const Scalar _tmp1410 = _tmp1337 * _tmp261 + _tmp264;
  const Scalar _tmp1411 = -_tmp1062 * _tmp1410 +
                          _tmp270 * (_tmp1340 * _tmp262 + _tmp1342 * _tmp263 + _tmp1344 * _tmp261);
  const Scalar _tmp1412 = 2 * _tmp271;
  const Scalar _tmp1413 =
      -_tmp1054 * _tmp1410 * _tmp275 * views_1_calibration(1, 0) + _tmp1411 * _tmp1412;
  const Scalar _tmp1414 =
      -_tmp1055 * _tmp1410 * _tmp283 - _tmp1271 * _tmp1413 + _tmp1272 * _tmp1413;
  const Scalar _tmp1415 = _tmp1187 * (_tmp1337 * _tmp291 + _tmp294);
  const Scalar _tmp1416 = -_tmp1281 * _tmp1415 +
                          _tmp300 * (_tmp1340 * _tmp293 + _tmp1342 * _tmp292 + _tmp1344 * _tmp291);
  const Scalar _tmp1417 = 2 * _tmp301;
  const Scalar _tmp1418 = _tmp1415 * _tmp303;
  const Scalar _tmp1419 = _tmp1416 * _tmp1417 - _tmp1418 * _tmp305 * views_1_calibration(1, 0);
  const Scalar _tmp1420 = _tmp1196 * _tmp1419;
  const Scalar _tmp1421 = _tmp1194 * _tmp1420 - _tmp1195 * _tmp1419 - _tmp1418 * _tmp313 * _tmp898;
  const Scalar _tmp1422 =
      -_tmp1290 * _tmp1405 * _tmp463 + _tmp1296 * _tmp1408 - _tmp1298 * _tmp1408;
  const Scalar _tmp1423 = _tmp1304 * (_tmp1337 * _tmp651 + _tmp654);
  const Scalar _tmp1424 = -_tmp1327 * _tmp1423 +
                          _tmp660 * (_tmp1340 * _tmp652 + _tmp1342 * _tmp653 + _tmp1344 * _tmp651);
  const Scalar _tmp1425 = 2 * _tmp661;
  const Scalar _tmp1426 =
      -_tmp1423 * _tmp663 * _tmp665 * views_1_calibration(1, 0) + _tmp1424 * _tmp1425;
  const Scalar _tmp1427 =
      -_tmp1306 * _tmp1423 * _tmp673 + _tmp1312 * _tmp1426 - _tmp1314 * _tmp1426;
  const Scalar _tmp1428 = _tmp1337 * _tmp381 + _tmp384;
  const Scalar _tmp1429 = _tmp1125 * _tmp1428;
  const Scalar _tmp1430 = _tmp1129 * _tmp924;
  const Scalar _tmp1431 = -_tmp1428 * _tmp1430 +
                          _tmp390 * (_tmp1340 * _tmp382 + _tmp1342 * _tmp383 + _tmp1344 * _tmp381);
  const Scalar _tmp1432 = 2 * _tmp391;
  const Scalar _tmp1433 = -_tmp1429 * _tmp395 * views_1_calibration(1, 0) + _tmp1431 * _tmp1432;
  const Scalar _tmp1434 = _tmp1135 * _tmp1433;
  const Scalar _tmp1435 = -_tmp1132 * _tmp1434 + _tmp1134 * _tmp1433 - _tmp1429 * _tmp403 * _tmp898;
  const Scalar _tmp1436 = _tmp1337 * _tmp471 + _tmp474;
  const Scalar _tmp1437 = -_tmp1332 * _tmp1436 +
                          _tmp480 * (_tmp1340 * _tmp473 + _tmp1342 * _tmp472 + _tmp1344 * _tmp471);
  const Scalar _tmp1438 = 2 * _tmp481;
  const Scalar _tmp1439 = _tmp1006 * _tmp1436;
  const Scalar _tmp1440 = _tmp1437 * _tmp1438 - _tmp1439 * _tmp485 * views_1_calibration(1, 0);
  const Scalar _tmp1441 = -_tmp1333 * _tmp1440 + _tmp1334 * _tmp1440 + _tmp1437 * _tmp493;
  const Scalar _tmp1442 = _tmp1337 * _tmp157 + _tmp166;
  const Scalar _tmp1443 = -_tmp1236 * _tmp1442 +
                          _tmp172 * (_tmp1340 * _tmp161 + _tmp1342 * _tmp165 + _tmp1344 * _tmp157);
  const Scalar _tmp1444 = 2 * _tmp173;
  const Scalar _tmp1445 =
      -_tmp1111 * _tmp1442 * _tmp177 * views_1_calibration(1, 0) + _tmp1443 * _tmp1444;
  const Scalar _tmp1446 = -_tmp1238 * _tmp1445 + _tmp1239 * _tmp1445 + _tmp1443 * _tmp193;
  const Scalar _tmp1447 = _tmp1337 * _tmp591 + _tmp594;
  const Scalar _tmp1448 = _tmp1447 * _tmp896;
  const Scalar _tmp1449 = -_tmp1250 * _tmp1448 +
                          _tmp600 * (_tmp1340 * _tmp592 + _tmp1342 * _tmp593 + _tmp1344 * _tmp591);
  const Scalar _tmp1450 = 2 * _tmp601;
  const Scalar _tmp1451 =
      -_tmp1448 * _tmp603 * _tmp605 * views_1_calibration(1, 0) + _tmp1449 * _tmp1450;
  const Scalar _tmp1452 = _tmp1252 * _tmp1451 - _tmp1253 * _tmp1451 + _tmp1449 * _tmp613;
  const Scalar _tmp1453 = _tmp1337 * _tmp321 + _tmp324;
  const Scalar _tmp1454 = _tmp1067 * _tmp333;
  const Scalar _tmp1455 = _tmp1067 * _tmp325;
  const Scalar _tmp1456 = _tmp1455 * _tmp924;
  const Scalar _tmp1457 = -_tmp1453 * _tmp1456 +
                          _tmp330 * (_tmp1340 * _tmp322 + _tmp1342 * _tmp323 + _tmp1344 * _tmp321);
  const Scalar _tmp1458 = 2 * _tmp331;
  const Scalar _tmp1459 =
      -_tmp1453 * _tmp1454 * _tmp335 * views_1_calibration(1, 0) + _tmp1457 * _tmp1458;
  const Scalar _tmp1460 = _tmp1078 * _tmp331;
  const Scalar _tmp1461 = -_tmp1076 * _tmp1459 + _tmp1457 * _tmp343 + _tmp1459 * _tmp1460;
  const Scalar _tmp1462 = _tmp896 * _tmp899;
  const Scalar _tmp1463 = -_tmp1447 * _tmp1462 * _tmp613 - _tmp1451 * _tmp905 + _tmp1451 * _tmp908;
  const Scalar _tmp1464 = _tmp1337 * _tmp351 + _tmp354;
  const Scalar _tmp1465 = -_tmp1032 * _tmp1464 +
                          _tmp360 * (_tmp1340 * _tmp352 + _tmp1342 * _tmp353 + _tmp1344 * _tmp351);
  const Scalar _tmp1466 = 2 * _tmp361;
  const Scalar _tmp1467 =
      -_tmp1023 * _tmp1464 * _tmp365 * views_1_calibration(1, 0) + _tmp1465 * _tmp1466;
  const Scalar _tmp1468 = _tmp1029 * _tmp1255;
  const Scalar _tmp1469 =
      -_tmp1024 * _tmp1464 * _tmp373 + _tmp1256 * _tmp1467 - _tmp1467 * _tmp1468;
  const Scalar _tmp1470 = _tmp1337 * _tmp741 + _tmp744;
  const Scalar _tmp1471 = _tmp1096 * _tmp745;
  const Scalar _tmp1472 = _tmp1471 * _tmp924;
  const Scalar _tmp1473 = -_tmp1470 * _tmp1472 +
                          _tmp750 * (_tmp1340 * _tmp743 + _tmp1342 * _tmp742 + _tmp1344 * _tmp741);
  const Scalar _tmp1474 = 2 * _tmp751;
  const Scalar _tmp1475 =
      -_tmp1096 * _tmp1470 * _tmp753 * _tmp755 * views_1_calibration(1, 0) + _tmp1473 * _tmp1474;
  const Scalar _tmp1476 = _tmp1181 * _tmp1475;
  const Scalar _tmp1477 = -_tmp1103 * _tmp1476 + _tmp1106 * _tmp1476 + _tmp1473 * _tmp763;
  const Scalar _tmp1478 = _tmp1282 * _tmp1420 - _tmp1284 * _tmp1419 + _tmp1416 * _tmp313;
  const Scalar _tmp1479 = _tmp1096 * _tmp1098;
  const Scalar _tmp1480 =
      -_tmp1105 * _tmp1475 + _tmp1107 * _tmp1475 - _tmp1470 * _tmp1479 * _tmp763;
  const Scalar _tmp1481 =
      _tmp135 * _tmp1383 - _tmp135 * _tmp1393 + _tmp136 * _tmp1388 * _tmp951 + _tmp1383 * _tmp987 +
      _tmp1385 * priors_1_0_sqrt_info(2, 1) + _tmp1386 * priors_1_0_sqrt_info(2, 2) +
      _tmp1392 * priors_1_0_sqrt_info(2, 2) - _tmp1394 * priors_1_0_sqrt_info(2, 0) +
      _tmp1395 * priors_1_0_sqrt_info(2, 3) + _tmp1396 * priors_1_0_sqrt_info(2, 5) -
      _tmp1397 * priors_1_0_sqrt_info(2, 2);
  const Scalar _tmp1482 = _tmp1371 * _tmp57;
  const Scalar _tmp1483 = _tmp1367 * _tmp57;
  const Scalar _tmp1484 =
      _tmp1262 * _tmp1367 - _tmp1262 * _tmp1371 + _tmp1368 * priors_0_1_sqrt_info(0, 1) +
      _tmp1370 * priors_0_1_sqrt_info(0, 2) - _tmp1372 * priors_0_1_sqrt_info(0, 1) +
      _tmp1374 * priors_0_1_sqrt_info(0, 1) + _tmp1377 * priors_0_1_sqrt_info(0, 0) -
      _tmp1482 * priors_0_1_sqrt_info(0, 2) + _tmp1483 * priors_0_1_sqrt_info(0, 2);
  const Scalar _tmp1485 = _tmp1371 * _tmp54;
  const Scalar _tmp1486 = _tmp1367 * _tmp54;
  const Scalar _tmp1487 =
      _tmp1185 * _tmp1367 - _tmp1185 * _tmp1371 + _tmp1368 * priors_0_1_sqrt_info(5, 1) +
      _tmp1370 * priors_0_1_sqrt_info(5, 2) - _tmp1372 * priors_0_1_sqrt_info(5, 1) +
      _tmp1374 * priors_0_1_sqrt_info(5, 1) + _tmp1377 * priors_0_1_sqrt_info(5, 0) -
      _tmp1485 * priors_0_1_sqrt_info(5, 0) + _tmp1486 * priors_0_1_sqrt_info(5, 0);
  const Scalar _tmp1488 = _tmp1322 * _tmp1403 - _tmp1324 * _tmp1403 + _tmp1401 * _tmp223;
  const Scalar _tmp1489 = _tmp1241 * _tmp1348;
  const Scalar _tmp1490 = _tmp1091 * _tmp1489 - _tmp1093 * _tmp1489 - _tmp1339 * _tmp703 * _tmp898;
  const Scalar _tmp1491 = _tmp1337 * _tmp711 + _tmp714;
  const Scalar _tmp1492 = -_tmp1179 * _tmp1491 +
                          _tmp720 * (_tmp1340 * _tmp713 + _tmp1342 * _tmp712 + _tmp1344 * _tmp711);
  const Scalar _tmp1493 = 2 * _tmp721;
  const Scalar _tmp1494 =
      -Scalar(1) / Scalar(2) * _tmp1145 * _tmp1491 * _tmp725 * views_1_calibration(1, 0) +
      (Scalar(1) / Scalar(2)) * _tmp1492 * _tmp1493;
  const Scalar _tmp1495 = _tmp1494 * _tmp725;
  const Scalar _tmp1496 =
      -_tmp1146 * _tmp1491 * _tmp733 - _tmp1151 * _tmp1495 + _tmp1154 * _tmp1495;
  const Scalar _tmp1497 = _tmp1029 * _tmp1031;
  const Scalar _tmp1498 = _tmp1034 * _tmp1467 + _tmp1465 * _tmp373 - _tmp1467 * _tmp1497;
  const Scalar _tmp1499 = _tmp1061 * _tmp1413 - _tmp1065 * _tmp1413 + _tmp1411 * _tmp283;
  const Scalar _tmp1500 = _tmp1337 * _tmp561 + _tmp564;
  const Scalar _tmp1501 = -_tmp1245 * _tmp1500 +
                          _tmp570 * (_tmp1340 * _tmp562 + _tmp1342 * _tmp563 + _tmp1344 * _tmp561);
  const Scalar _tmp1502 = 2 * _tmp571;
  const Scalar _tmp1503 =
      -_tmp1500 * _tmp575 * _tmp976 * views_1_calibration(1, 0) + _tmp1501 * _tmp1502;
  const Scalar _tmp1504 = -_tmp1500 * _tmp583 * _tmp977 - _tmp1503 * _tmp983 + _tmp1503 * _tmp985;
  const Scalar _tmp1505 =
      _tmp1233 * _tmp1383 - _tmp1233 * _tmp1393 + _tmp1234 * _tmp1383 - _tmp1234 * _tmp1393 +
      _tmp1385 * priors_1_0_sqrt_info(5, 1) + _tmp1386 * priors_1_0_sqrt_info(5, 2) +
      _tmp1389 * priors_1_0_sqrt_info(5, 0) + _tmp1392 * priors_1_0_sqrt_info(5, 2) +
      _tmp1395 * priors_1_0_sqrt_info(5, 3) + _tmp1396 * priors_1_0_sqrt_info(5, 5) -
      _tmp1397 * priors_1_0_sqrt_info(5, 2);
  const Scalar _tmp1506 = _tmp123 * priors_1_0_sqrt_info(3, 2);
  const Scalar _tmp1507 = _tmp128 * _tmp1393;
  const Scalar _tmp1508 =
      _tmp1264 * _tmp1383 - _tmp1264 * _tmp1393 + _tmp1265 * _tmp1382 + _tmp138 * _tmp1391 +
      _tmp1383 * _tmp1506 + _tmp1385 * priors_1_0_sqrt_info(3, 1) +
      _tmp1389 * priors_1_0_sqrt_info(3, 0) + _tmp1395 * priors_1_0_sqrt_info(3, 3) +
      _tmp1396 * priors_1_0_sqrt_info(3, 5) - _tmp1397 * priors_1_0_sqrt_info(3, 2) -
      _tmp1507 * priors_1_0_sqrt_info(3, 1);
  const Scalar _tmp1509 = _tmp1159 * (_tmp1337 * _tmp231 + _tmp234);
  const Scalar _tmp1510 = -_tmp1160 * _tmp1509 +
                          _tmp240 * (_tmp1340 * _tmp233 + _tmp1342 * _tmp232 + _tmp1344 * _tmp231);
  const Scalar _tmp1511 = 2 * _tmp241;
  const Scalar _tmp1512 = _tmp1509 * _tmp243;
  const Scalar _tmp1513 = _tmp1510 * _tmp1511 - _tmp1512 * _tmp245 * views_1_calibration(1, 0);
  const Scalar _tmp1514 = _tmp1168 * _tmp1513;
  const Scalar _tmp1515 = _tmp1169 * _tmp1514 - _tmp1171 * _tmp1514 + _tmp1510 * _tmp253;
  const Scalar _tmp1516 =
      _tmp1368 * priors_0_1_sqrt_info(4, 1) + _tmp1370 * priors_0_1_sqrt_info(4, 2) -
      _tmp1372 * priors_0_1_sqrt_info(4, 1) + _tmp1374 * priors_0_1_sqrt_info(4, 1) +
      _tmp1377 * priors_0_1_sqrt_info(4, 0) - _tmp1482 * priors_0_1_sqrt_info(4, 2) +
      _tmp1483 * priors_0_1_sqrt_info(4, 2) - _tmp1485 * priors_0_1_sqrt_info(4, 0) +
      _tmp1486 * priors_0_1_sqrt_info(4, 0);
  const Scalar _tmp1517 =
      _tmp1368 * priors_0_1_sqrt_info(3, 1) + _tmp1370 * priors_0_1_sqrt_info(3, 2) -
      _tmp1372 * priors_0_1_sqrt_info(3, 1) + _tmp1374 * priors_0_1_sqrt_info(3, 1) +
      _tmp1377 * priors_0_1_sqrt_info(3, 0) - _tmp1482 * priors_0_1_sqrt_info(3, 2) +
      _tmp1483 * priors_0_1_sqrt_info(3, 2) - _tmp1485 * priors_0_1_sqrt_info(3, 0) +
      _tmp1486 * priors_0_1_sqrt_info(3, 0);
  const Scalar _tmp1518 = _tmp1275 * _tmp1513 - _tmp1276 * _tmp1513 - _tmp1512 * _tmp253 * _tmp898;
  const Scalar _tmp1519 = -_tmp1214 * _tmp1434 + _tmp1215 * _tmp1433 + _tmp1431 * _tmp403;
  const Scalar _tmp1520 = _tmp1337 * _tmp531 + _tmp534;
  const Scalar _tmp1521 = -_tmp1047 * _tmp1520 +
                          _tmp540 * (_tmp1340 * _tmp533 + _tmp1342 * _tmp532 + _tmp1344 * _tmp531);
  const Scalar _tmp1522 = 2 * _tmp541;
  const Scalar _tmp1523 =
      -_tmp1039 * _tmp1520 * _tmp545 * views_1_calibration(1, 0) + _tmp1521 * _tmp1522;
  const Scalar _tmp1524 = _tmp1044 * _tmp1523;
  const Scalar _tmp1525 = -_tmp1045 * _tmp1524 + _tmp1049 * _tmp1523 + _tmp1521 * _tmp553;
  const Scalar _tmp1526 = _tmp64 * _tmp861;
  const Scalar _tmp1527 =
      _tmp1368 * priors_0_1_sqrt_info(1, 1) + _tmp1370 * priors_0_1_sqrt_info(1, 2) -
      _tmp1372 * priors_0_1_sqrt_info(1, 1) + _tmp1374 * priors_0_1_sqrt_info(1, 1) +
      _tmp1376 * _tmp1526 - _tmp1482 * priors_0_1_sqrt_info(1, 2) +
      _tmp1483 * priors_0_1_sqrt_info(1, 2) - _tmp1485 * priors_0_1_sqrt_info(1, 0) +
      _tmp1486 * priors_0_1_sqrt_info(1, 0);
  const Scalar _tmp1528 = _tmp1200 * (_tmp1337 * _tmp621 + _tmp624);
  const Scalar _tmp1529 = _tmp1528 * _tmp633;
  const Scalar _tmp1530 = -_tmp1209 * _tmp1528 +
                          _tmp630 * (_tmp1340 * _tmp623 + _tmp1342 * _tmp622 + _tmp1344 * _tmp621);
  const Scalar _tmp1531 = 2 * _tmp631;
  const Scalar _tmp1532 = -_tmp1529 * _tmp635 * views_1_calibration(1, 0) + _tmp1530 * _tmp1531;
  const Scalar _tmp1533 = _tmp1301 * _tmp1532 - _tmp1302 * _tmp1532 - _tmp1529 * _tmp643 * _tmp898;
  const Scalar _tmp1534 = _tmp1014 * _tmp1440 - _tmp1017 * _tmp1440 - _tmp1439 * _tmp493 * _tmp898;
  const Scalar _tmp1535 = _tmp1329 * _tmp1426 - _tmp1330 * _tmp1426 + _tmp1424 * _tmp673;
  const Scalar _tmp1536 = -_tmp1247 * _tmp1503 + _tmp1248 * _tmp1503 + _tmp1501 * _tmp583;
  const Scalar _tmp1537 = _tmp1067 * _tmp1069;
  const Scalar _tmp1538 = _tmp1078 * _tmp335;
  const Scalar _tmp1539 =
      -_tmp1279 * _tmp1459 - _tmp1453 * _tmp1537 * _tmp343 + _tmp1459 * _tmp1538;
  const Scalar _tmp1540 =
      -_tmp1112 * _tmp1442 * _tmp193 + _tmp1119 * _tmp1445 - _tmp1121 * _tmp1445;
  const Scalar _tmp1541 =
      _tmp1174 * _tmp1383 - _tmp1174 * _tmp1393 + _tmp1175 * _tmp1383 - _tmp1175 * _tmp1393 +
      _tmp1385 * priors_1_0_sqrt_info(0, 1) + _tmp1386 * priors_1_0_sqrt_info(0, 2) +
      _tmp1389 * priors_1_0_sqrt_info(0, 0) + _tmp1392 * priors_1_0_sqrt_info(0, 2) +
      _tmp1395 * priors_1_0_sqrt_info(0, 3) + _tmp1396 * priors_1_0_sqrt_info(0, 5) -
      _tmp1397 * priors_1_0_sqrt_info(0, 2);
  const Scalar _tmp1542 = -_tmp1208 * _tmp1532 + _tmp1212 * _tmp1532 + _tmp1530 * _tmp643;
  const Scalar _tmp1543 = _tmp123 * priors_1_0_sqrt_info(4, 2);
  const Scalar _tmp1544 =
      _tmp1138 * _tmp1383 - _tmp1138 * _tmp1393 + _tmp1141 * _tmp1382 + _tmp1383 * _tmp1543 +
      _tmp1385 * priors_1_0_sqrt_info(4, 1) + _tmp1389 * priors_1_0_sqrt_info(4, 0) +
      _tmp1392 * priors_1_0_sqrt_info(4, 2) + _tmp1395 * priors_1_0_sqrt_info(4, 3) +
      _tmp1396 * priors_1_0_sqrt_info(4, 5) - _tmp1397 * priors_1_0_sqrt_info(4, 2) -
      _tmp1507 * priors_1_0_sqrt_info(4, 1);
  const Scalar _tmp1545 =
      -_tmp1040 * _tmp1520 * _tmp553 - _tmp1258 * _tmp1524 + _tmp1260 * _tmp1523;
  const Scalar _tmp1546 = _tmp1494 * _tmp721;
  const Scalar _tmp1547 = -_tmp1151 * _tmp1546 + _tmp1154 * _tmp1546 + _tmp1492 * _tmp733;
  const Scalar _tmp1548 = _tmp1341 + _tmp887;
  const Scalar _tmp1549 = _tmp600 * (_tmp1548 * _tmp592 + _tmp602);
  const Scalar _tmp1550 = _tmp71 + _tmp74 + _tmp885 + _tmp891;
  const Scalar _tmp1551 = _tmp889 + _tmp99;
  const Scalar _tmp1552 = _tmp1343 + _tmp81;
  const Scalar _tmp1553 = _tmp604 * (_tmp1550 * _tmp591 + _tmp1551 * _tmp592 + _tmp1552 * _tmp593);
  const Scalar _tmp1554 = _tmp1450 * _tmp1549 + _tmp1553 * _tmp901;
  const Scalar _tmp1555 = _tmp1553 * _tmp613 - _tmp1554 * _tmp905 + _tmp1554 * _tmp908;
  const Scalar _tmp1556 = _tmp424 * (_tmp1550 * _tmp411 + _tmp1551 * _tmp412 + _tmp1552 * _tmp413);
  const Scalar _tmp1557 = _tmp420 * (_tmp1548 * _tmp412 + _tmp422);
  const Scalar _tmp1558 = _tmp1225 * _tmp1556 + _tmp1360 * _tmp1557;
  const Scalar _tmp1559 = _tmp1229 * _tmp1558 - _tmp1231 * _tmp1558 + _tmp1556 * _tmp433;
  const Scalar _tmp1560 = _tmp754 * (_tmp1550 * _tmp741 + _tmp1551 * _tmp743 + _tmp1552 * _tmp742);
  const Scalar _tmp1561 = _tmp750 * (_tmp1548 * _tmp743 + _tmp752);
  const Scalar _tmp1562 = _tmp1100 * _tmp1560 + _tmp1474 * _tmp1561;
  const Scalar _tmp1563 = _tmp1182 * _tmp1562 - _tmp1183 * _tmp1562 + _tmp1561 * _tmp763;
  const Scalar _tmp1564 = -_priors_1_0_target_T_src[1] * _tmp1364 + _tmp1387 + _tmp947 - _tmp949;
  const Scalar _tmp1565 = _tmp1564 * _tmp961;
  const Scalar _tmp1566 =
      _tmp951 * (-_priors_1_0_target_T_src[0] * _tmp1364 + _tmp1384 + _tmp967 - _tmp969);
  const Scalar _tmp1567 = _tmp122 * _tmp1566;
  const Scalar _tmp1568 =
      _tmp951 * (_priors_1_0_target_T_src[2] * _tmp1364 + _tmp1380 + _tmp1381 + _tmp956);
  const Scalar _tmp1569 = _tmp1564 * _tmp943;
  const Scalar _tmp1570 = _tmp123 * _tmp1569;
  const Scalar _tmp1571 =
      -_tmp101 + _tmp102 + _tmp1548 * _views_0_pose[5] - _tmp1548 * _views_1_pose[5] - _tmp98;
  const Scalar _tmp1572 = _tmp1550 * _views_0_pose[4] - _tmp1550 * _views_1_pose[4] +
                          _tmp1551 * _views_0_pose[5] - _tmp1551 * _views_1_pose[5] +
                          _tmp1552 * _views_0_pose[6] - _tmp1552 * _views_1_pose[6];
  const Scalar _tmp1573 = _tmp123 * _tmp1565;
  const Scalar _tmp1574 =
      _tmp952 * (_priors_1_0_target_T_src[3] * _tmp1364 + _tmp1390 + _tmp932 + _tmp937);
  const Scalar _tmp1575 = _tmp131 * _tmp1569;
  const Scalar _tmp1576 =
      _tmp135 * _tmp1565 - _tmp135 * _tmp1569 + _tmp136 * _tmp1568 + _tmp1565 * _tmp987 +
      _tmp1567 * priors_1_0_sqrt_info(2, 2) - _tmp1570 * priors_1_0_sqrt_info(2, 2) +
      _tmp1571 * priors_1_0_sqrt_info(2, 3) + _tmp1572 * priors_1_0_sqrt_info(2, 4) +
      _tmp1573 * priors_1_0_sqrt_info(2, 2) + _tmp1574 * priors_1_0_sqrt_info(2, 1) -
      _tmp1575 * priors_1_0_sqrt_info(2, 0);
  const Scalar _tmp1577 = _tmp720 * (_tmp1548 * _tmp713 + _tmp722);
  const Scalar _tmp1578 = _tmp724 * (_tmp1550 * _tmp711 + _tmp1551 * _tmp713 + _tmp1552 * _tmp712);
  const Scalar _tmp1579 = _tmp1148 * _tmp1578 + _tmp1493 * _tmp1577;
  const Scalar _tmp1580 = -_tmp1153 * _tmp1579 + _tmp1156 * _tmp1579 + _tmp1578 * _tmp733;
  const Scalar _tmp1581 = _tmp122 * _tmp1568;
  const Scalar _tmp1582 =
      _tmp1174 * _tmp1565 - _tmp1174 * _tmp1569 + _tmp1175 * _tmp1565 - _tmp1175 * _tmp1569 +
      _tmp1567 * priors_1_0_sqrt_info(0, 2) - _tmp1570 * priors_1_0_sqrt_info(0, 2) +
      _tmp1571 * priors_1_0_sqrt_info(0, 3) + _tmp1572 * priors_1_0_sqrt_info(0, 4) +
      _tmp1573 * priors_1_0_sqrt_info(0, 2) + _tmp1574 * priors_1_0_sqrt_info(0, 1) +
      _tmp1581 * priors_1_0_sqrt_info(0, 0);
  const Scalar _tmp1583 = _tmp128 * _tmp1569;
  const Scalar _tmp1584 =
      _tmp1264 * _tmp1565 - _tmp1264 * _tmp1569 + _tmp1265 * _tmp1564 + _tmp138 * _tmp1566 +
      _tmp1506 * _tmp1565 - _tmp1570 * priors_1_0_sqrt_info(3, 2) +
      _tmp1571 * priors_1_0_sqrt_info(3, 3) + _tmp1572 * priors_1_0_sqrt_info(3, 4) +
      _tmp1574 * priors_1_0_sqrt_info(3, 1) + _tmp1581 * priors_1_0_sqrt_info(3, 0) -
      _tmp1583 * priors_1_0_sqrt_info(3, 1);
  const Scalar _tmp1585 = _tmp484 * (_tmp1550 * _tmp471 + _tmp1551 * _tmp473 + _tmp1552 * _tmp472);
  const Scalar _tmp1586 = _tmp480 * (_tmp1548 * _tmp473 + _tmp482);
  const Scalar _tmp1587 = _tmp1009 * _tmp1585 + _tmp1438 * _tmp1586;
  const Scalar _tmp1588 = _tmp1014 * _tmp1587 - _tmp1017 * _tmp1587 + _tmp1585 * _tmp493;
  const Scalar _tmp1589 = _tmp176 * (_tmp1550 * _tmp157 + _tmp1551 * _tmp161 + _tmp1552 * _tmp165);
  const Scalar _tmp1590 = _tmp172 * (_tmp1548 * _tmp161 + _tmp174);
  const Scalar _tmp1591 = _tmp1115 * _tmp1589 + _tmp1444 * _tmp1590;
  const Scalar _tmp1592 = _tmp1119 * _tmp1591 - _tmp1121 * _tmp1591 + _tmp1589 * _tmp193;
  const Scalar _tmp1593 = _tmp664 * (_tmp1550 * _tmp651 + _tmp1551 * _tmp652 + _tmp1552 * _tmp653);
  const Scalar _tmp1594 = _tmp660 * (_tmp1548 * _tmp652 + _tmp662);
  const Scalar _tmp1595 = _tmp1308 * _tmp1593 + _tmp1425 * _tmp1594;
  const Scalar _tmp1596 = _tmp1329 * _tmp1595 - _tmp1330 * _tmp1595 + _tmp1594 * _tmp673;
  const Scalar _tmp1597 = -_tmp1238 * _tmp1591 + _tmp1239 * _tmp1591 + _tmp1590 * _tmp193;
  const Scalar _tmp1598 = -_priors_0_1_target_T_src[0] * _tmp934 - _tmp1375 + _tmp866;
  const Scalar _tmp1599 = _tmp1598 * _tmp855;
  const Scalar _tmp1600 = _tmp1599 * _tmp57;
  const Scalar _tmp1601 = _tmp867 * (_priors_0_1_target_T_src[1] * _tmp934 + _tmp1373 + _tmp860);
  const Scalar _tmp1602 = _tmp1598 * _tmp880;
  const Scalar _tmp1603 = _tmp1598 * _tmp874;
  const Scalar _tmp1604 =
      _tmp867 * (-_priors_0_1_target_T_src[2] * _tmp934 - _tmp1369 + _tmp831 + _tmp842);
  const Scalar _tmp1605 = _tmp1598 * _tmp869;
  const Scalar _tmp1606 = _tmp1605 * _tmp57;
  const Scalar _tmp1607 = _tmp1599 * _tmp54;
  const Scalar _tmp1608 = _priors_0_1_target_T_src[3] * _tmp934 + _tmp1365 + _tmp878;
  const Scalar _tmp1609 = _tmp1605 * _tmp54;
  const Scalar _tmp1610 =
      _tmp1526 * _tmp1608 + _tmp1600 * priors_0_1_sqrt_info(1, 2) +
      _tmp1601 * priors_0_1_sqrt_info(1, 2) - _tmp1602 * priors_0_1_sqrt_info(1, 1) +
      _tmp1603 * priors_0_1_sqrt_info(1, 1) + _tmp1604 * priors_0_1_sqrt_info(1, 1) -
      _tmp1606 * priors_0_1_sqrt_info(1, 2) + _tmp1607 * priors_0_1_sqrt_info(1, 0) -
      _tmp1609 * priors_0_1_sqrt_info(1, 0);
  const Scalar _tmp1611 = _tmp244 * (_tmp1550 * _tmp231 + _tmp1551 * _tmp233 + _tmp1552 * _tmp232);
  const Scalar _tmp1612 = _tmp240 * (_tmp1548 * _tmp233 + _tmp242);
  const Scalar _tmp1613 = _tmp1166 * _tmp1611 + _tmp1511 * _tmp1612;
  const Scalar _tmp1614 = _tmp1275 * _tmp1613 - _tmp1276 * _tmp1613 + _tmp1611 * _tmp253;
  const Scalar _tmp1615 =
      _tmp1138 * _tmp1565 - _tmp1138 * _tmp1569 + _tmp1141 * _tmp1564 + _tmp1543 * _tmp1565 +
      _tmp1567 * priors_1_0_sqrt_info(4, 2) - _tmp1570 * priors_1_0_sqrt_info(4, 2) +
      _tmp1571 * priors_1_0_sqrt_info(4, 3) + _tmp1572 * priors_1_0_sqrt_info(4, 4) +
      _tmp1574 * priors_1_0_sqrt_info(4, 1) + _tmp1581 * priors_1_0_sqrt_info(4, 0) -
      _tmp1583 * priors_1_0_sqrt_info(4, 1);
  const Scalar _tmp1616 = _tmp364 * (_tmp1550 * _tmp351 + _tmp1551 * _tmp352 + _tmp1552 * _tmp353);
  const Scalar _tmp1617 = _tmp360 * (_tmp1548 * _tmp352 + _tmp362);
  const Scalar _tmp1618 = _tmp1026 * _tmp1616 + _tmp1466 * _tmp1617;
  const Scalar _tmp1619 = _tmp1034 * _tmp1618 - _tmp1497 * _tmp1618 + _tmp1617 * _tmp373;
  const Scalar _tmp1620 = _tmp1608 * _tmp867;
  const Scalar _tmp1621 =
      _tmp1600 * priors_0_1_sqrt_info(4, 2) + _tmp1601 * priors_0_1_sqrt_info(4, 2) -
      _tmp1602 * priors_0_1_sqrt_info(4, 1) + _tmp1603 * priors_0_1_sqrt_info(4, 1) +
      _tmp1604 * priors_0_1_sqrt_info(4, 1) - _tmp1606 * priors_0_1_sqrt_info(4, 2) +
      _tmp1607 * priors_0_1_sqrt_info(4, 0) - _tmp1609 * priors_0_1_sqrt_info(4, 0) +
      _tmp1620 * priors_0_1_sqrt_info(4, 0);
  const Scalar _tmp1622 = _tmp690 * (_tmp1548 * _tmp682 + _tmp692);
  const Scalar _tmp1623 = _tmp694 * (_tmp1550 * _tmp681 + _tmp1551 * _tmp682 + _tmp1552 * _tmp683);
  const Scalar _tmp1624 = _tmp1086 * _tmp1623 + _tmp1347 * _tmp1622;
  const Scalar _tmp1625 = -_tmp1242 * _tmp1624 + _tmp1243 * _tmp1624 + _tmp1623 * _tmp703;
  const Scalar _tmp1626 = _tmp330 * (_tmp1548 * _tmp322 + _tmp332);
  const Scalar _tmp1627 = _tmp334 * (_tmp1550 * _tmp321 + _tmp1551 * _tmp322 + _tmp1552 * _tmp323);
  const Scalar _tmp1628 = _tmp1071 * _tmp1627 + _tmp1458 * _tmp1626;
  const Scalar _tmp1629 = -_tmp1076 * _tmp1628 + _tmp1460 * _tmp1628 + _tmp1626 * _tmp343;
  const Scalar _tmp1630 = _tmp1170 * _tmp1613 - _tmp1172 * _tmp1613 + _tmp1612 * _tmp253;
  const Scalar _tmp1631 =
      _tmp1262 * _tmp1599 - _tmp1262 * _tmp1605 + _tmp1600 * priors_0_1_sqrt_info(0, 2) +
      _tmp1601 * priors_0_1_sqrt_info(0, 2) - _tmp1602 * priors_0_1_sqrt_info(0, 1) +
      _tmp1603 * priors_0_1_sqrt_info(0, 1) + _tmp1604 * priors_0_1_sqrt_info(0, 1) -
      _tmp1606 * priors_0_1_sqrt_info(0, 2) + _tmp1620 * priors_0_1_sqrt_info(0, 0);
  const Scalar _tmp1632 = _tmp630 * (_tmp1548 * _tmp623 + _tmp632);
  const Scalar _tmp1633 = _tmp634 * (_tmp1550 * _tmp621 + _tmp1551 * _tmp623 + _tmp1552 * _tmp622);
  const Scalar _tmp1634 = _tmp1204 * _tmp1633 + _tmp1531 * _tmp1632;
  const Scalar _tmp1635 = _tmp1300 * _tmp1634;
  const Scalar _tmp1636 = -_tmp1206 * _tmp1635 + _tmp1211 * _tmp1635 + _tmp1633 * _tmp643;
  const Scalar _tmp1637 = -_tmp1268 * _tmp1558 + _tmp1269 * _tmp1558 + _tmp1557 * _tmp433;
  const Scalar _tmp1638 = _tmp544 * (_tmp1550 * _tmp531 + _tmp1551 * _tmp533 + _tmp1552 * _tmp532);
  const Scalar _tmp1639 = _tmp540 * (_tmp1548 * _tmp533 + _tmp542);
  const Scalar _tmp1640 = _tmp1042 * _tmp1638 + _tmp1522 * _tmp1639;
  const Scalar _tmp1641 = -_tmp1259 * _tmp1640 + _tmp1260 * _tmp1640 + _tmp1638 * _tmp553;
  const Scalar _tmp1642 = _tmp574 * (_tmp1550 * _tmp561 + _tmp1551 * _tmp562 + _tmp1552 * _tmp563);
  const Scalar _tmp1643 = _tmp570 * (_tmp1548 * _tmp562 + _tmp572);
  const Scalar _tmp1644 = _tmp1502 * _tmp1643 + _tmp1642 * _tmp979;
  const Scalar _tmp1645 = _tmp1644 * _tmp981;
  const Scalar _tmp1646 = _tmp1642 * _tmp583 - _tmp1645 * _tmp982 + _tmp1645 * _tmp984;
  const Scalar _tmp1647 =
      _tmp1233 * _tmp1565 - _tmp1233 * _tmp1569 + _tmp1234 * _tmp1565 - _tmp1234 * _tmp1569 +
      _tmp1567 * priors_1_0_sqrt_info(5, 2) - _tmp1570 * priors_1_0_sqrt_info(5, 2) +
      _tmp1571 * priors_1_0_sqrt_info(5, 3) + _tmp1572 * priors_1_0_sqrt_info(5, 4) +
      _tmp1573 * priors_1_0_sqrt_info(5, 2) + _tmp1574 * priors_1_0_sqrt_info(5, 1) +
      _tmp1581 * priors_1_0_sqrt_info(5, 0);
  const Scalar _tmp1648 =
      _tmp1565 * _tmp963 + _tmp1565 * _tmp964 + _tmp1567 * priors_1_0_sqrt_info(1, 2) -
      _tmp1569 * _tmp964 - _tmp1570 * priors_1_0_sqrt_info(1, 2) +
      _tmp1571 * priors_1_0_sqrt_info(1, 3) + _tmp1572 * priors_1_0_sqrt_info(1, 4) +
      _tmp1573 * priors_1_0_sqrt_info(1, 2) + _tmp1574 * priors_1_0_sqrt_info(1, 1) -
      _tmp1575 * priors_1_0_sqrt_info(1, 0) + _tmp1581 * priors_1_0_sqrt_info(1, 0);
  const Scalar _tmp1649 = _tmp510 * (_tmp1548 * _tmp502 + _tmp512);
  const Scalar _tmp1650 = _tmp514 * (_tmp1550 * _tmp501 + _tmp1551 * _tmp502 + _tmp1552 * _tmp503);
  const Scalar _tmp1651 = _tmp1352 * _tmp1649 + _tmp1650 * _tmp916;
  const Scalar _tmp1652 = _tmp1649 * _tmp523 - _tmp1651 * _tmp920 + _tmp1651 * _tmp923;
  const Scalar _tmp1653 = -_tmp1333 * _tmp1587 + _tmp1334 * _tmp1587 + _tmp1586 * _tmp493;
  const Scalar _tmp1654 =
      _tmp1185 * _tmp1599 + _tmp1601 * priors_0_1_sqrt_info(5, 2) -
      _tmp1602 * priors_0_1_sqrt_info(5, 1) + _tmp1603 * priors_0_1_sqrt_info(5, 1) +
      _tmp1604 * priors_0_1_sqrt_info(5, 1) - _tmp1606 * priors_0_1_sqrt_info(5, 2) +
      _tmp1607 * priors_0_1_sqrt_info(5, 0) - _tmp1609 * priors_0_1_sqrt_info(5, 0) +
      _tmp1620 * priors_0_1_sqrt_info(5, 0);
  const Scalar _tmp1655 = -_tmp1279 * _tmp1628 + _tmp1538 * _tmp1628 + _tmp1627 * _tmp343;
  const Scalar _tmp1656 = _tmp394 * (_tmp1550 * _tmp381 + _tmp1551 * _tmp382 + _tmp1552 * _tmp383);
  const Scalar _tmp1657 = _tmp390 * (_tmp1548 * _tmp382 + _tmp392);
  const Scalar _tmp1658 = _tmp1128 * _tmp1656 + _tmp1432 * _tmp1657;
  const Scalar _tmp1659 = _tmp1134 * _tmp1658 - _tmp1136 * _tmp1658 + _tmp1656 * _tmp403;
  const Scalar _tmp1660 = _tmp300 * (_tmp1548 * _tmp293 + _tmp302);
  const Scalar _tmp1661 = _tmp304 * (_tmp1550 * _tmp291 + _tmp1551 * _tmp293 + _tmp1552 * _tmp292);
  const Scalar _tmp1662 = _tmp1191 * _tmp1661 + _tmp1417 * _tmp1660;
  const Scalar _tmp1663 = _tmp1283 * _tmp1662 - _tmp1284 * _tmp1662 + _tmp1660 * _tmp313;
  const Scalar _tmp1664 = _tmp1650 * _tmp523 - _tmp1651 * _tmp928 + _tmp1651 * _tmp929;
  const Scalar _tmp1665 = _tmp1092 * _tmp1624 - _tmp1094 * _tmp1624 + _tmp1622 * _tmp703;
  const Scalar _tmp1666 = _tmp274 * (_tmp1550 * _tmp261 + _tmp1551 * _tmp262 + _tmp1552 * _tmp263);
  const Scalar _tmp1667 = _tmp270 * (_tmp1548 * _tmp262 + _tmp272);
  const Scalar _tmp1668 = _tmp1057 * _tmp1666 + _tmp1412 * _tmp1667;
  const Scalar _tmp1669 = -_tmp1271 * _tmp1668 + _tmp1272 * _tmp1668 + _tmp1666 * _tmp283;
  const Scalar _tmp1670 = _tmp1252 * _tmp1554 - _tmp1253 * _tmp1554 + _tmp1549 * _tmp613;
  const Scalar _tmp1671 = _tmp210 * (_tmp1548 * _tmp202 + _tmp212);
  const Scalar _tmp1672 = _tmp214 * (_tmp1550 * _tmp201 + _tmp1551 * _tmp202 + _tmp1552 * _tmp203);
  const Scalar _tmp1673 = _tmp1402 * _tmp1671 + _tmp1672 * _tmp995;
  const Scalar _tmp1674 = _tmp1001 * _tmp1673 + _tmp1672 * _tmp223 - _tmp1673 * _tmp999;
  const Scalar _tmp1675 = -_tmp1247 * _tmp1644 + _tmp1248 * _tmp1644 + _tmp1643 * _tmp583;
  const Scalar _tmp1676 =
      _tmp1600 * priors_0_1_sqrt_info(3, 2) + _tmp1601 * priors_0_1_sqrt_info(3, 2) -
      _tmp1602 * priors_0_1_sqrt_info(3, 1) + _tmp1603 * priors_0_1_sqrt_info(3, 1) +
      _tmp1604 * priors_0_1_sqrt_info(3, 1) - _tmp1606 * priors_0_1_sqrt_info(3, 2) +
      _tmp1607 * priors_0_1_sqrt_info(3, 0) - _tmp1609 * priors_0_1_sqrt_info(3, 0) +
      _tmp1620 * priors_0_1_sqrt_info(3, 0);
  const Scalar _tmp1677 = _tmp1177 * _tmp1579 - _tmp1178 * _tmp1579 + _tmp1577 * _tmp733;
  const Scalar _tmp1678 = _tmp1061 * _tmp1668 - _tmp1065 * _tmp1668 + _tmp1667 * _tmp283;
  const Scalar _tmp1679 = _tmp1322 * _tmp1673 - _tmp1324 * _tmp1673 + _tmp1671 * _tmp223;
  const Scalar _tmp1680 = -_tmp1195 * _tmp1662 + _tmp1197 * _tmp1662 + _tmp1661 * _tmp313;
  const Scalar _tmp1681 = -_tmp1046 * _tmp1640 + _tmp1049 * _tmp1640 + _tmp1639 * _tmp553;
  const Scalar _tmp1682 = -_tmp1105 * _tmp1562 + _tmp1107 * _tmp1562 + _tmp1560 * _tmp763;
  const Scalar _tmp1683 = -_tmp1208 * _tmp1634 + _tmp1212 * _tmp1634 + _tmp1632 * _tmp643;
  const Scalar _tmp1684 = _tmp1255 * _tmp1618;
  const Scalar _tmp1685 = -_tmp1029 * _tmp1684 + _tmp1033 * _tmp1684 + _tmp1616 * _tmp373;
  const Scalar _tmp1686 = _tmp1215 * _tmp1658 - _tmp1216 * _tmp1658 + _tmp1657 * _tmp403;
  const Scalar _tmp1687 =
      _tmp1019 * _tmp1599 + _tmp1599 * _tmp66 + _tmp1601 * priors_0_1_sqrt_info(2, 2) -
      _tmp1602 * priors_0_1_sqrt_info(2, 1) + _tmp1603 * priors_0_1_sqrt_info(2, 1) +
      _tmp1604 * priors_0_1_sqrt_info(2, 1) - _tmp1605 * _tmp66 -
      _tmp1609 * priors_0_1_sqrt_info(2, 0) + _tmp1620 * priors_0_1_sqrt_info(2, 0);
  const Scalar _tmp1688 = _tmp454 * (_tmp1550 * _tmp441 + _tmp1551 * _tmp442 + _tmp1552 * _tmp443);
  const Scalar _tmp1689 = _tmp450 * (_tmp1548 * _tmp442 + _tmp452);
  const Scalar _tmp1690 = _tmp1292 * _tmp1688 + _tmp1407 * _tmp1689;
  const Scalar _tmp1691 = _tmp1294 * _tmp1690;
  const Scalar _tmp1692 = _tmp1295 * _tmp1691 - _tmp1297 * _tmp1691 + _tmp1688 * _tmp463;
  const Scalar _tmp1693 = _tmp1312 * _tmp1595 - _tmp1314 * _tmp1595 + _tmp1593 * _tmp673;
  const Scalar _tmp1694 = _tmp1318 * _tmp1690 - _tmp1319 * _tmp1690 + _tmp1689 * _tmp463;
  const Scalar _tmp1695 = _tmp244 * landmarks_2_;
  const Scalar _tmp1696 = _tmp1164 * landmarks_2_;
  const Scalar _tmp1697 = -_tmp100 * _tmp1695 + _tmp108 * _tmp1696;
  const Scalar _tmp1698 = _tmp240 * landmarks_2_;
  const Scalar _tmp1699 = _tmp1161 * landmarks_2_;
  const Scalar _tmp1700 = _tmp108 * _tmp1699 - _tmp1698 * _tmp77;
  const Scalar _tmp1701 = _tmp1166 * _tmp1697 + _tmp1511 * _tmp1700;
  const Scalar _tmp1702 = _tmp1171 * _tmp1701;
  const Scalar _tmp1703 = -_tmp1274 * _tmp1702 + _tmp1275 * _tmp1701 + _tmp1697 * _tmp253;
  const Scalar _tmp1704 = _tmp750 * landmarks_19_;
  const Scalar _tmp1705 = _tmp108 * landmarks_19_;
  const Scalar _tmp1706 = _tmp1472 * _tmp1705 - _tmp1704 * _tmp77;
  const Scalar _tmp1707 = _tmp754 * landmarks_19_;
  const Scalar _tmp1708 = -_tmp100 * _tmp1707 + _tmp1479 * _tmp1705;
  const Scalar _tmp1709 = _tmp1100 * _tmp1708 + _tmp1474 * _tmp1706;
  const Scalar _tmp1710 = _tmp1182 * _tmp1709 - _tmp1183 * _tmp1709 + _tmp1706 * _tmp763;
  const Scalar _tmp1711 = _tmp977 * landmarks_13_;
  const Scalar _tmp1712 = _tmp574 * landmarks_13_;
  const Scalar _tmp1713 = -_tmp100 * _tmp1712 + _tmp108 * _tmp1711;
  const Scalar _tmp1714 = _tmp570 * landmarks_13_;
  const Scalar _tmp1715 = _tmp1245 * landmarks_13_;
  const Scalar _tmp1716 = _tmp108 * _tmp1715 - _tmp1714 * _tmp77;
  const Scalar _tmp1717 = _tmp1502 * _tmp1716 + _tmp1713 * _tmp979;
  const Scalar _tmp1718 = _tmp1713 * _tmp583 - _tmp1717 * _tmp983 + _tmp1717 * _tmp985;
  const Scalar _tmp1719 = _tmp4 * priors_0_1_sqrt_info(5, 4) + _tmp51 * priors_0_1_sqrt_info(5, 5) +
                          _tmp60 * priors_0_1_sqrt_info(5, 3);
  const Scalar _tmp1720 = _tmp720 * landmarks_18_;
  const Scalar _tmp1721 = _tmp1179 * landmarks_18_;
  const Scalar _tmp1722 = _tmp108 * _tmp1721 - _tmp1720 * _tmp77;
  const Scalar _tmp1723 = _tmp724 * landmarks_18_;
  const Scalar _tmp1724 = _tmp1146 * landmarks_18_;
  const Scalar _tmp1725 = -_tmp100 * _tmp1723 + _tmp108 * _tmp1724;
  const Scalar _tmp1726 = _tmp1148 * _tmp1725 + _tmp1493 * _tmp1722;
  const Scalar _tmp1727 = _tmp1177 * _tmp1726 - _tmp1178 * _tmp1726 + _tmp1722 * _tmp733;
  const Scalar _tmp1728 = -_tmp1105 * _tmp1709 + _tmp1107 * _tmp1709 + _tmp1708 * _tmp763;
  const Scalar _tmp1729 = _tmp4 * priors_0_1_sqrt_info(2, 4) + _tmp51 * priors_0_1_sqrt_info(2, 5) +
                          _tmp60 * priors_0_1_sqrt_info(2, 3);
  const Scalar _tmp1730 = _tmp1047 * landmarks_12_;
  const Scalar _tmp1731 = _tmp540 * landmarks_12_;
  const Scalar _tmp1732 = _tmp108 * _tmp1730 - _tmp1731 * _tmp77;
  const Scalar _tmp1733 = _tmp544 * landmarks_12_;
  const Scalar _tmp1734 = _tmp1040 * landmarks_12_;
  const Scalar _tmp1735 = -_tmp100 * _tmp1733 + _tmp108 * _tmp1734;
  const Scalar _tmp1736 = _tmp1042 * _tmp1735 + _tmp1522 * _tmp1732;
  const Scalar _tmp1737 = -_tmp1259 * _tmp1736 + _tmp1260 * _tmp1736 + _tmp1735 * _tmp553;
  const Scalar _tmp1738 = _tmp510 * landmarks_11_;
  const Scalar _tmp1739 = _tmp926 * landmarks_11_;
  const Scalar _tmp1740 = _tmp108 * _tmp1739 - _tmp1738 * _tmp77;
  const Scalar _tmp1741 = _tmp514 * landmarks_11_;
  const Scalar _tmp1742 = _tmp914 * landmarks_11_;
  const Scalar _tmp1743 = -_tmp100 * _tmp1741 + _tmp108 * _tmp1742;
  const Scalar _tmp1744 =
      (Scalar(1) / Scalar(2)) * _tmp1352 * _tmp1740 + (Scalar(1) / Scalar(2)) * _tmp1743 * _tmp916;
  const Scalar _tmp1745 = _tmp1744 * _tmp515;
  const Scalar _tmp1746 = _tmp1743 * _tmp523 - _tmp1745 * _tmp918 + _tmp1745 * _tmp921;
  const Scalar _tmp1747 = -_tmp1046 * _tmp1736 + _tmp1049 * _tmp1736 + _tmp1732 * _tmp553;
  const Scalar _tmp1748 = _tmp4 * priors_0_1_sqrt_info(4, 4) + _tmp51 * priors_0_1_sqrt_info(4, 5) +
                          _tmp60 * priors_0_1_sqrt_info(4, 3);
  const Scalar _tmp1749 = _tmp1024 * landmarks_6_;
  const Scalar _tmp1750 = _tmp364 * landmarks_6_;
  const Scalar _tmp1751 = -_tmp100 * _tmp1750 + _tmp108 * _tmp1749;
  const Scalar _tmp1752 = _tmp360 * landmarks_6_;
  const Scalar _tmp1753 = _tmp1032 * landmarks_6_;
  const Scalar _tmp1754 = _tmp108 * _tmp1753 - _tmp1752 * _tmp77;
  const Scalar _tmp1755 = _tmp1026 * _tmp1751 + _tmp1466 * _tmp1754;
  const Scalar _tmp1756 = _tmp1256 * _tmp1755 - _tmp1468 * _tmp1755 + _tmp1751 * _tmp373;
  const Scalar _tmp1757 = _tmp1034 * _tmp1755 - _tmp1497 * _tmp1755 + _tmp1754 * _tmp373;
  const Scalar _tmp1758 = _tmp1456 * landmarks_5_;
  const Scalar _tmp1759 = _tmp330 * landmarks_5_;
  const Scalar _tmp1760 = _tmp108 * _tmp1758 - _tmp1759 * _tmp77;
  const Scalar _tmp1761 = _tmp334 * landmarks_5_;
  const Scalar _tmp1762 = _tmp1537 * landmarks_5_;
  const Scalar _tmp1763 = -_tmp100 * _tmp1761 + _tmp108 * _tmp1762;
  const Scalar _tmp1764 = _tmp1071 * _tmp1763 + _tmp1458 * _tmp1760;
  const Scalar _tmp1765 = -_tmp1076 * _tmp1764 + _tmp1460 * _tmp1764 + _tmp1760 * _tmp343;
  const Scalar _tmp1766 = _tmp1236 * landmarks_0_;
  const Scalar _tmp1767 = _tmp172 * landmarks_0_;
  const Scalar _tmp1768 = _tmp108 * _tmp1766 - _tmp1767 * _tmp77;
  const Scalar _tmp1769 = _tmp1112 * landmarks_0_;
  const Scalar _tmp1770 = _tmp176 * landmarks_0_;
  const Scalar _tmp1771 = -_tmp100 * _tmp1770 + _tmp108 * _tmp1769;
  const Scalar _tmp1772 = _tmp1115 * _tmp1771 + _tmp1444 * _tmp1768;
  const Scalar _tmp1773 = -_tmp1238 * _tmp1772 + _tmp1239 * _tmp1772 + _tmp1768 * _tmp193;
  const Scalar _tmp1774 = _tmp300 * landmarks_4_;
  const Scalar _tmp1775 = _tmp1187 * landmarks_4_;
  const Scalar _tmp1776 = _tmp1281 * _tmp1775;
  const Scalar _tmp1777 = _tmp108 * _tmp1776 - _tmp1774 * _tmp77;
  const Scalar _tmp1778 = _tmp1189 * _tmp1775;
  const Scalar _tmp1779 = _tmp304 * landmarks_4_;
  const Scalar _tmp1780 = -_tmp100 * _tmp1779 + _tmp108 * _tmp1778;
  const Scalar _tmp1781 = _tmp1191 * _tmp1780 + _tmp1417 * _tmp1777;
  const Scalar _tmp1782 = -_tmp1195 * _tmp1781 + _tmp1197 * _tmp1781 + _tmp1780 * _tmp313;
  const Scalar _tmp1783 = _tmp108 * landmarks_15_;
  const Scalar _tmp1784 = _tmp634 * landmarks_15_;
  const Scalar _tmp1785 = -_tmp100 * _tmp1784 + _tmp1202 * _tmp1783;
  const Scalar _tmp1786 = _tmp630 * landmarks_15_;
  const Scalar _tmp1787 = _tmp1210 * _tmp1783 - _tmp1786 * _tmp77;
  const Scalar _tmp1788 = _tmp1204 * _tmp1785 + _tmp1531 * _tmp1787;
  const Scalar _tmp1789 = _tmp1301 * _tmp1788 - _tmp1302 * _tmp1788 + _tmp1785 * _tmp643;
  const Scalar _tmp1790 = _tmp72 + _tmp75 - 1;
  const Scalar _tmp1791 = _tmp1344 * priors_1_0_sqrt_info(1, 5) +
                          _tmp1790 * priors_1_0_sqrt_info(1, 3) +
                          _tmp890 * priors_1_0_sqrt_info(1, 4);
  const Scalar _tmp1792 = _tmp4 * priors_0_1_sqrt_info(1, 4) + _tmp51 * priors_0_1_sqrt_info(1, 5) +
                          _tmp60 * priors_0_1_sqrt_info(1, 3);
  const Scalar _tmp1793 = _tmp390 * landmarks_7_;
  const Scalar _tmp1794 = _tmp1430 * landmarks_7_;
  const Scalar _tmp1795 = _tmp108 * _tmp1794 - _tmp1793 * _tmp77;
  const Scalar _tmp1796 = _tmp1126 * landmarks_7_;
  const Scalar _tmp1797 = _tmp394 * landmarks_7_;
  const Scalar _tmp1798 = -_tmp100 * _tmp1797 + _tmp108 * _tmp1796;
  const Scalar _tmp1799 = _tmp1128 * _tmp1798 + _tmp1432 * _tmp1795;
  const Scalar _tmp1800 = _tmp1215 * _tmp1799 - _tmp1216 * _tmp1799 + _tmp1795 * _tmp403;
  const Scalar _tmp1801 = -_tmp1279 * _tmp1764 + _tmp1538 * _tmp1764 + _tmp1763 * _tmp343;
  const Scalar _tmp1802 = _tmp1344 * priors_1_0_sqrt_info(0, 5) +
                          _tmp1790 * priors_1_0_sqrt_info(0, 3) +
                          _tmp890 * priors_1_0_sqrt_info(0, 4);
  const Scalar _tmp1803 = -_tmp1168 * _tmp1702 + _tmp1170 * _tmp1701 + _tmp1700 * _tmp253;
  const Scalar _tmp1804 = _tmp1117 * _tmp1772;
  const Scalar _tmp1805 = _tmp1118 * _tmp1804 - _tmp1120 * _tmp1804 + _tmp1771 * _tmp193;
  const Scalar _tmp1806 = _tmp1223 * landmarks_8_;
  const Scalar _tmp1807 = _tmp424 * landmarks_8_;
  const Scalar _tmp1808 = -_tmp100 * _tmp1807 + _tmp108 * _tmp1806;
  const Scalar _tmp1809 = _tmp1358 * landmarks_8_;
  const Scalar _tmp1810 = _tmp420 * landmarks_8_;
  const Scalar _tmp1811 = _tmp108 * _tmp1809 - _tmp1810 * _tmp77;
  const Scalar _tmp1812 = _tmp1225 * _tmp1808 + _tmp1360 * _tmp1811;
  const Scalar _tmp1813 = _tmp1267 * _tmp1812;
  const Scalar _tmp1814 = _tmp1228 * _tmp1813 - _tmp1230 * _tmp1813 + _tmp1811 * _tmp433;
  const Scalar _tmp1815 = _tmp1344 * priors_1_0_sqrt_info(4, 5) +
                          _tmp1790 * priors_1_0_sqrt_info(4, 3) +
                          _tmp890 * priors_1_0_sqrt_info(4, 4);
  const Scalar _tmp1816 = _tmp1250 * _tmp896;
  const Scalar _tmp1817 = _tmp108 * landmarks_14_;
  const Scalar _tmp1818 = _tmp600 * landmarks_14_;
  const Scalar _tmp1819 = _tmp1816 * _tmp1817 - _tmp1818 * _tmp77;
  const Scalar _tmp1820 = _tmp604 * landmarks_14_;
  const Scalar _tmp1821 = -_tmp100 * _tmp1820 + _tmp1462 * _tmp1817;
  const Scalar _tmp1822 = _tmp1450 * _tmp1819 + _tmp1821 * _tmp901;
  const Scalar _tmp1823 = _tmp1251 * _tmp1822;
  const Scalar _tmp1824 = _tmp1819 * _tmp613 - _tmp1823 * _tmp903 + _tmp1823 * _tmp907;
  const Scalar _tmp1825 = _tmp214 * landmarks_1_;
  const Scalar _tmp1826 = _tmp108 * landmarks_1_;
  const Scalar _tmp1827 = -_tmp100 * _tmp1825 + _tmp1826 * _tmp993;
  const Scalar _tmp1828 = _tmp210 * landmarks_1_;
  const Scalar _tmp1829 = _tmp1323 * _tmp1826 - _tmp1828 * _tmp77;
  const Scalar _tmp1830 = _tmp1402 * _tmp1829 + _tmp1827 * _tmp995;
  const Scalar _tmp1831 = _tmp1001 * _tmp1830 + _tmp1827 * _tmp223 - _tmp1830 * _tmp999;
  const Scalar _tmp1832 = _tmp1229 * _tmp1812 - _tmp1231 * _tmp1812 + _tmp1808 * _tmp433;
  const Scalar _tmp1833 = _tmp1344 * priors_1_0_sqrt_info(3, 5) +
                          _tmp1790 * priors_1_0_sqrt_info(3, 3) +
                          _tmp890 * priors_1_0_sqrt_info(3, 4);
  const Scalar _tmp1834 = _tmp1744 * _tmp511;
  const Scalar _tmp1835 = _tmp1740 * _tmp523 - _tmp1834 * _tmp918 + _tmp1834 * _tmp921;
  const Scalar _tmp1836 = _tmp4 * priors_0_1_sqrt_info(0, 4) + _tmp51 * priors_0_1_sqrt_info(0, 5) +
                          _tmp60 * priors_0_1_sqrt_info(0, 3);
  const Scalar _tmp1837 = _tmp1322 * _tmp1830 - _tmp1324 * _tmp1830 + _tmp1829 * _tmp223;
  const Scalar _tmp1838 = _tmp1283 * _tmp1781 - _tmp1284 * _tmp1781 + _tmp1777 * _tmp313;
  const Scalar _tmp1839 = _tmp1134 * _tmp1799 - _tmp1136 * _tmp1799 + _tmp1798 * _tmp403;
  const Scalar _tmp1840 = _tmp480 * landmarks_10_;
  const Scalar _tmp1841 = _tmp1332 * landmarks_10_;
  const Scalar _tmp1842 = _tmp108 * _tmp1841 - _tmp1840 * _tmp77;
  const Scalar _tmp1843 = _tmp1007 * landmarks_10_;
  const Scalar _tmp1844 = _tmp484 * landmarks_10_;
  const Scalar _tmp1845 = -_tmp100 * _tmp1844 + _tmp108 * _tmp1843;
  const Scalar _tmp1846 =
      (Scalar(1) / Scalar(2)) * _tmp1009 * _tmp1845 + (Scalar(1) / Scalar(2)) * _tmp1438 * _tmp1842;
  const Scalar _tmp1847 = _tmp1846 * _tmp481;
  const Scalar _tmp1848 = _tmp1012 * _tmp181;
  const Scalar _tmp1849 = -_tmp1015 * _tmp1847 + _tmp1842 * _tmp493 + _tmp1847 * _tmp1848;
  const Scalar _tmp1850 = _tmp1304 * _tmp1306;
  const Scalar _tmp1851 = _tmp1850 * landmarks_16_;
  const Scalar _tmp1852 = _tmp664 * landmarks_16_;
  const Scalar _tmp1853 = -_tmp100 * _tmp1852 + _tmp108 * _tmp1851;
  const Scalar _tmp1854 = _tmp660 * landmarks_16_;
  const Scalar _tmp1855 = _tmp1304 * _tmp1327 * landmarks_16_;
  const Scalar _tmp1856 = _tmp108 * _tmp1855 - _tmp1854 * _tmp77;
  const Scalar _tmp1857 = _tmp1308 * _tmp1853 + _tmp1425 * _tmp1856;
  const Scalar _tmp1858 = _tmp1312 * _tmp1857 - _tmp1314 * _tmp1857 + _tmp1853 * _tmp673;
  const Scalar _tmp1859 = _tmp1846 * _tmp485;
  const Scalar _tmp1860 = -_tmp1015 * _tmp1859 + _tmp1845 * _tmp493 + _tmp1848 * _tmp1859;
  const Scalar _tmp1861 = _tmp694 * landmarks_17_;
  const Scalar _tmp1862 = _tmp1084 * landmarks_17_;
  const Scalar _tmp1863 = -_tmp100 * _tmp1861 + _tmp108 * _tmp1862;
  const Scalar _tmp1864 = _tmp1345 * landmarks_17_;
  const Scalar _tmp1865 = _tmp690 * landmarks_17_;
  const Scalar _tmp1866 = _tmp108 * _tmp1864 - _tmp1865 * _tmp77;
  const Scalar _tmp1867 = _tmp1086 * _tmp1863 + _tmp1347 * _tmp1866;
  const Scalar _tmp1868 = _tmp1093 * _tmp1867;
  const Scalar _tmp1869 = -_tmp1241 * _tmp1868 + _tmp1243 * _tmp1867 + _tmp1863 * _tmp703;
  const Scalar _tmp1870 = -_tmp1153 * _tmp1726 + _tmp1156 * _tmp1726 + _tmp1725 * _tmp733;
  const Scalar _tmp1871 = _tmp270 * landmarks_3_;
  const Scalar _tmp1872 = _tmp108 * landmarks_3_;
  const Scalar _tmp1873 = _tmp1062 * _tmp1872 - _tmp1871 * _tmp77;
  const Scalar _tmp1874 = _tmp274 * landmarks_3_;
  const Scalar _tmp1875 = -_tmp100 * _tmp1874 + _tmp1055 * _tmp1872;
  const Scalar _tmp1876 = _tmp1057 * _tmp1875 + _tmp1412 * _tmp1873;
  const Scalar _tmp1877 = _tmp1061 * _tmp1876 - _tmp1065 * _tmp1876 + _tmp1873 * _tmp283;
  const Scalar _tmp1878 = _tmp1821 * _tmp613 - _tmp1822 * _tmp905 + _tmp1822 * _tmp908;
  const Scalar _tmp1879 = -_tmp1208 * _tmp1788 + _tmp1212 * _tmp1788 + _tmp1787 * _tmp643;
  const Scalar _tmp1880 = _tmp454 * landmarks_9_;
  const Scalar _tmp1881 = _tmp1290 * landmarks_9_;
  const Scalar _tmp1882 = -_tmp100 * _tmp1880 + _tmp108 * _tmp1881;
  const Scalar _tmp1883 = _tmp1316 * landmarks_9_;
  const Scalar _tmp1884 = _tmp450 * landmarks_9_;
  const Scalar _tmp1885 = _tmp108 * _tmp1883 - _tmp1884 * _tmp77;
  const Scalar _tmp1886 = _tmp1292 * _tmp1882 + _tmp1407 * _tmp1885;
  const Scalar _tmp1887 = _tmp1296 * _tmp1886 - _tmp1298 * _tmp1886 + _tmp1882 * _tmp463;
  const Scalar _tmp1888 = _tmp4 * priors_0_1_sqrt_info(3, 4) + _tmp51 * priors_0_1_sqrt_info(3, 5) +
                          _tmp60 * priors_0_1_sqrt_info(3, 3);
  const Scalar _tmp1889 = _tmp1318 * _tmp1886 - _tmp1319 * _tmp1886 + _tmp1885 * _tmp463;
  const Scalar _tmp1890 = _tmp1344 * priors_1_0_sqrt_info(2, 5) +
                          _tmp1790 * priors_1_0_sqrt_info(2, 3) +
                          _tmp890 * priors_1_0_sqrt_info(2, 4);
  const Scalar _tmp1891 = -_tmp1247 * _tmp1717 + _tmp1248 * _tmp1717 + _tmp1716 * _tmp583;
  const Scalar _tmp1892 = _tmp1329 * _tmp1857 - _tmp1330 * _tmp1857 + _tmp1856 * _tmp673;
  const Scalar _tmp1893 = -_tmp1090 * _tmp1868 + _tmp1092 * _tmp1867 + _tmp1866 * _tmp703;
  const Scalar _tmp1894 = -_tmp1271 * _tmp1876 + _tmp1272 * _tmp1876 + _tmp1875 * _tmp283;
  const Scalar _tmp1895 = _tmp1344 * priors_1_0_sqrt_info(5, 5) +
                          _tmp1790 * priors_1_0_sqrt_info(5, 3) +
                          _tmp890 * priors_1_0_sqrt_info(5, 4);
  const Scalar _tmp1896 = _tmp106 * _tmp1809 - _tmp1810 * _tmp87;
  const Scalar _tmp1897 = _tmp106 * _tmp1806 - _tmp1807 * _tmp94;
  const Scalar _tmp1898 = _tmp1225 * _tmp1897 + _tmp1360 * _tmp1896;
  const Scalar _tmp1899 = -_tmp1268 * _tmp1898 + _tmp1269 * _tmp1898 + _tmp1896 * _tmp433;
  const Scalar _tmp1900 = _tmp106 * _tmp1739 - _tmp1738 * _tmp87;
  const Scalar _tmp1901 = _tmp106 * _tmp1742 - _tmp1741 * _tmp94;
  const Scalar _tmp1902 = _tmp1352 * _tmp1900 + _tmp1901 * _tmp916;
  const Scalar _tmp1903 = _tmp1900 * _tmp523 - _tmp1902 * _tmp920 + _tmp1902 * _tmp923;
  const Scalar _tmp1904 = _tmp106 * _tmp1862 - _tmp1861 * _tmp94;
  const Scalar _tmp1905 = _tmp106 * _tmp1864 - _tmp1865 * _tmp87;
  const Scalar _tmp1906 = _tmp1086 * _tmp1904 + _tmp1347 * _tmp1905;
  const Scalar _tmp1907 = -_tmp1242 * _tmp1906 + _tmp1243 * _tmp1906 + _tmp1904 * _tmp703;
  const Scalar _tmp1908 = _tmp106 * _tmp1711 - _tmp1712 * _tmp94;
  const Scalar _tmp1909 = _tmp106 * _tmp1715 - _tmp1714 * _tmp87;
  const Scalar _tmp1910 = _tmp1502 * _tmp1909 + _tmp1908 * _tmp979;
  const Scalar _tmp1911 = _tmp1908 * _tmp583 - _tmp1910 * _tmp983 + _tmp1910 * _tmp985;
  const Scalar _tmp1912 = -_tmp1247 * _tmp1910 + _tmp1248 * _tmp1910 + _tmp1909 * _tmp583;
  const Scalar _tmp1913 = _tmp106 * _tmp1841 - _tmp1840 * _tmp87;
  const Scalar _tmp1914 = _tmp106 * _tmp1843 - _tmp1844 * _tmp94;
  const Scalar _tmp1915 = _tmp1009 * _tmp1914 + _tmp1438 * _tmp1913;
  const Scalar _tmp1916 = _tmp1014 * _tmp1915 - _tmp1017 * _tmp1915 + _tmp1914 * _tmp493;
  const Scalar _tmp1917 = _tmp106 * landmarks_3_;
  const Scalar _tmp1918 = _tmp1062 * _tmp1917 - _tmp1871 * _tmp87;
  const Scalar _tmp1919 = _tmp1055 * _tmp1917 - _tmp1874 * _tmp94;
  const Scalar _tmp1920 = _tmp1057 * _tmp1919 + _tmp1412 * _tmp1918;
  const Scalar _tmp1921 = -_tmp1271 * _tmp1920 + _tmp1272 * _tmp1920 + _tmp1919 * _tmp283;
  const Scalar _tmp1922 = _tmp52 * priors_0_1_sqrt_info(5, 5) +
                          _tmp59 * priors_0_1_sqrt_info(5, 3) + _tmp7 * priors_0_1_sqrt_info(5, 4);
  const Scalar _tmp1923 = _tmp52 * priors_0_1_sqrt_info(4, 5) +
                          _tmp59 * priors_0_1_sqrt_info(4, 3) + _tmp7 * priors_0_1_sqrt_info(4, 4);
  const Scalar _tmp1924 = _tmp106 * _tmp1758 - _tmp1759 * _tmp87;
  const Scalar _tmp1925 = _tmp106 * _tmp1762 - _tmp1761 * _tmp94;
  const Scalar _tmp1926 =
      (Scalar(1) / Scalar(2)) * _tmp1071 * _tmp1925 + (Scalar(1) / Scalar(2)) * _tmp1458 * _tmp1924;
  const Scalar _tmp1927 = _tmp1926 * _tmp331;
  const Scalar _tmp1928 = _tmp1077 * _tmp181;
  const Scalar _tmp1929 = -_tmp1074 * _tmp1927 + _tmp1924 * _tmp343 + _tmp1927 * _tmp1928;
  const Scalar _tmp1930 = _tmp106 * landmarks_14_;
  const Scalar _tmp1931 = _tmp1816 * _tmp1930 - _tmp1818 * _tmp87;
  const Scalar _tmp1932 = _tmp1462 * _tmp1930 - _tmp1820 * _tmp94;
  const Scalar _tmp1933 = _tmp1450 * _tmp1931 + _tmp1932 * _tmp901;
  const Scalar _tmp1934 = _tmp1933 * _tmp903;
  const Scalar _tmp1935 = _tmp1932 * _tmp613 + _tmp1933 * _tmp908 - _tmp1934 * _tmp904;
  const Scalar _tmp1936 = _tmp106 * _tmp1724 - _tmp1723 * _tmp94;
  const Scalar _tmp1937 = _tmp106 * _tmp1721 - _tmp1720 * _tmp87;
  const Scalar _tmp1938 = _tmp1148 * _tmp1936 + _tmp1493 * _tmp1937;
  const Scalar _tmp1939 = -_tmp1153 * _tmp1938 + _tmp1156 * _tmp1938 + _tmp1936 * _tmp733;
  const Scalar _tmp1940 = _tmp106 * _tmp1749 - _tmp1750 * _tmp94;
  const Scalar _tmp1941 = _tmp106 * _tmp1753 - _tmp1752 * _tmp87;
  const Scalar _tmp1942 = _tmp1026 * _tmp1940 + _tmp1466 * _tmp1941;
  const Scalar _tmp1943 = _tmp1256 * _tmp1942 - _tmp1468 * _tmp1942 + _tmp1940 * _tmp373;
  const Scalar _tmp1944 = _tmp106 * _tmp1730 - _tmp1731 * _tmp87;
  const Scalar _tmp1945 = _tmp106 * _tmp1734 - _tmp1733 * _tmp94;
  const Scalar _tmp1946 = _tmp1042 * _tmp1945 + _tmp1522 * _tmp1944;
  const Scalar _tmp1947 = -_tmp1046 * _tmp1946 + _tmp1049 * _tmp1946 + _tmp1944 * _tmp553;
  const Scalar _tmp1948 = _tmp106 * _tmp1696 - _tmp1695 * _tmp94;
  const Scalar _tmp1949 = _tmp106 * _tmp1699 - _tmp1698 * _tmp87;
  const Scalar _tmp1950 = _tmp1166 * _tmp1948 + _tmp1511 * _tmp1949;
  const Scalar _tmp1951 = _tmp1275 * _tmp1950 - _tmp1276 * _tmp1950 + _tmp1948 * _tmp253;
  const Scalar _tmp1952 = _tmp52 * priors_0_1_sqrt_info(2, 5) +
                          _tmp59 * priors_0_1_sqrt_info(2, 3) + _tmp7 * priors_0_1_sqrt_info(2, 4);
  const Scalar _tmp1953 = _tmp92 - 1;
  const Scalar _tmp1954 = _tmp1953 + _tmp72;
  const Scalar _tmp1955 = _tmp1340 * priors_1_0_sqrt_info(1, 5) +
                          _tmp1551 * priors_1_0_sqrt_info(1, 3) +
                          _tmp1954 * priors_1_0_sqrt_info(1, 4);
  const Scalar _tmp1956 = _tmp106 * landmarks_1_;
  const Scalar _tmp1957 = _tmp1323 * _tmp1956 - _tmp1828 * _tmp87;
  const Scalar _tmp1958 = -_tmp1825 * _tmp94 + _tmp1956 * _tmp993;
  const Scalar _tmp1959 = _tmp1402 * _tmp1957 + _tmp1958 * _tmp995;
  const Scalar _tmp1960 = _tmp1000 * _tmp1959;
  const Scalar _tmp1961 = _tmp1321 * _tmp1960 - _tmp1324 * _tmp1959 + _tmp1957 * _tmp223;
  const Scalar _tmp1962 = _tmp1034 * _tmp1942 - _tmp1497 * _tmp1942 + _tmp1941 * _tmp373;
  const Scalar _tmp1963 = _tmp1901 * _tmp523 - _tmp1902 * _tmp928 + _tmp1902 * _tmp929;
  const Scalar _tmp1964 = _tmp1092 * _tmp1906 - _tmp1094 * _tmp1906 + _tmp1905 * _tmp703;
  const Scalar _tmp1965 = _tmp1177 * _tmp1938 - _tmp1178 * _tmp1938 + _tmp1937 * _tmp733;
  const Scalar _tmp1966 = _tmp1340 * priors_1_0_sqrt_info(4, 5) +
                          _tmp1551 * priors_1_0_sqrt_info(4, 3) +
                          _tmp1954 * priors_1_0_sqrt_info(4, 4);
  const Scalar _tmp1967 = _tmp106 * landmarks_15_;
  const Scalar _tmp1968 = _tmp1202 * _tmp1967 - _tmp1784 * _tmp94;
  const Scalar _tmp1969 = _tmp1210 * _tmp1967 - _tmp1786 * _tmp87;
  const Scalar _tmp1970 = _tmp1204 * _tmp1968 + _tmp1531 * _tmp1969;
  const Scalar _tmp1971 = _tmp1301 * _tmp1970 - _tmp1302 * _tmp1970 + _tmp1968 * _tmp643;
  const Scalar _tmp1972 = _tmp1340 * priors_1_0_sqrt_info(0, 5) +
                          _tmp1551 * priors_1_0_sqrt_info(0, 3) +
                          _tmp1954 * priors_1_0_sqrt_info(0, 4);
  const Scalar _tmp1973 = _tmp1229 * _tmp1898 - _tmp1231 * _tmp1898 + _tmp1897 * _tmp433;
  const Scalar _tmp1974 = _tmp106 * _tmp1796 - _tmp1797 * _tmp94;
  const Scalar _tmp1975 = _tmp106 * _tmp1794 - _tmp1793 * _tmp87;
  const Scalar _tmp1976 = _tmp1128 * _tmp1974 + _tmp1432 * _tmp1975;
  const Scalar _tmp1977 = _tmp1132 * _tmp1976;
  const Scalar _tmp1978 = _tmp1133 * _tmp1977 - _tmp1135 * _tmp1977 + _tmp1974 * _tmp403;
  const Scalar _tmp1979 = _tmp106 * _tmp1883 - _tmp1884 * _tmp87;
  const Scalar _tmp1980 = _tmp106 * _tmp1881 - _tmp1880 * _tmp94;
  const Scalar _tmp1981 = _tmp1292 * _tmp1980 + _tmp1407 * _tmp1979;
  const Scalar _tmp1982 = _tmp1318 * _tmp1981 - _tmp1319 * _tmp1981 + _tmp1979 * _tmp463;
  const Scalar _tmp1983 = -_tmp1208 * _tmp1970 + _tmp1212 * _tmp1970 + _tmp1969 * _tmp643;
  const Scalar _tmp1984 = -_tmp1333 * _tmp1915 + _tmp1334 * _tmp1915 + _tmp1913 * _tmp493;
  const Scalar _tmp1985 = _tmp106 * _tmp1769 - _tmp1770 * _tmp94;
  const Scalar _tmp1986 = _tmp106 * _tmp1766 - _tmp1767 * _tmp87;
  const Scalar _tmp1987 = _tmp1115 * _tmp1985 + _tmp1444 * _tmp1986;
  const Scalar _tmp1988 = _tmp1119 * _tmp1987 - _tmp1121 * _tmp1987 + _tmp193 * _tmp1985;
  const Scalar _tmp1989 = _tmp52 * priors_0_1_sqrt_info(0, 5) +
                          _tmp59 * priors_0_1_sqrt_info(0, 3) + _tmp7 * priors_0_1_sqrt_info(0, 4);
  const Scalar _tmp1990 = _tmp52 * priors_0_1_sqrt_info(1, 5) +
                          _tmp59 * priors_0_1_sqrt_info(1, 3) + _tmp7 * priors_0_1_sqrt_info(1, 4);
  const Scalar _tmp1991 = _tmp106 * _tmp1776 - _tmp1774 * _tmp87;
  const Scalar _tmp1992 = _tmp106 * _tmp1778 - _tmp1779 * _tmp94;
  const Scalar _tmp1993 = _tmp1191 * _tmp1992 + _tmp1417 * _tmp1991;
  const Scalar _tmp1994 = _tmp1283 * _tmp1993 - _tmp1284 * _tmp1993 + _tmp1991 * _tmp313;
  const Scalar _tmp1995 = _tmp52 * priors_0_1_sqrt_info(3, 5) +
                          _tmp59 * priors_0_1_sqrt_info(3, 3) + _tmp7 * priors_0_1_sqrt_info(3, 4);
  const Scalar _tmp1996 = -_tmp1195 * _tmp1993 + _tmp1197 * _tmp1993 + _tmp1992 * _tmp313;
  const Scalar _tmp1997 = _tmp1340 * priors_1_0_sqrt_info(3, 5) +
                          _tmp1551 * priors_1_0_sqrt_info(3, 3) +
                          _tmp1954 * priors_1_0_sqrt_info(3, 4);
  const Scalar _tmp1998 = _tmp106 * _tmp1855 - _tmp1854 * _tmp87;
  const Scalar _tmp1999 = _tmp106 * _tmp1851 - _tmp1852 * _tmp94;
  const Scalar _tmp2000 = _tmp1308 * _tmp1999 + _tmp1425 * _tmp1998;
  const Scalar _tmp2001 = _tmp1328 * _tmp2000;
  const Scalar _tmp2002 = _tmp1311 * _tmp2001 - _tmp1313 * _tmp2001 + _tmp1998 * _tmp673;
  const Scalar _tmp2003 = _tmp1958 * _tmp223 - _tmp1959 * _tmp999 + _tmp1960 * _tmp997;
  const Scalar _tmp2004 = -_tmp1238 * _tmp1987 + _tmp1239 * _tmp1987 + _tmp193 * _tmp1986;
  const Scalar _tmp2005 = _tmp1312 * _tmp2000 - _tmp1314 * _tmp2000 + _tmp1999 * _tmp673;
  const Scalar _tmp2006 = _tmp1170 * _tmp1950 - _tmp1172 * _tmp1950 + _tmp1949 * _tmp253;
  const Scalar _tmp2007 = _tmp1061 * _tmp1920 - _tmp1065 * _tmp1920 + _tmp1918 * _tmp283;
  const Scalar _tmp2008 = _tmp1479 * landmarks_19_;
  const Scalar _tmp2009 = _tmp106 * _tmp2008 - _tmp1707 * _tmp94;
  const Scalar _tmp2010 = _tmp1472 * landmarks_19_;
  const Scalar _tmp2011 = _tmp106 * _tmp2010 - _tmp1704 * _tmp87;
  const Scalar _tmp2012 = _tmp1100 * _tmp2009 + _tmp1474 * _tmp2011;
  const Scalar _tmp2013 = _tmp1103 * _tmp2012;
  const Scalar _tmp2014 = -_tmp1181 * _tmp2013 + _tmp1182 * _tmp2012 + _tmp2011 * _tmp763;
  const Scalar _tmp2015 = _tmp1296 * _tmp1981 - _tmp1298 * _tmp1981 + _tmp1980 * _tmp463;
  const Scalar _tmp2016 = -_tmp1104 * _tmp2013 + _tmp1107 * _tmp2012 + _tmp2009 * _tmp763;
  const Scalar _tmp2017 = _tmp1340 * priors_1_0_sqrt_info(2, 5) +
                          _tmp1551 * priors_1_0_sqrt_info(2, 3) +
                          _tmp1954 * priors_1_0_sqrt_info(2, 4);
  const Scalar _tmp2018 = -_tmp1251 * _tmp1934 + _tmp1252 * _tmp1933 + _tmp1931 * _tmp613;
  const Scalar _tmp2019 = -_tmp1259 * _tmp1946 + _tmp1260 * _tmp1946 + _tmp1945 * _tmp553;
  const Scalar _tmp2020 = _tmp1926 * _tmp335;
  const Scalar _tmp2021 = -_tmp1074 * _tmp2020 + _tmp1925 * _tmp343 + _tmp1928 * _tmp2020;
  const Scalar _tmp2022 = _tmp1340 * priors_1_0_sqrt_info(5, 5) +
                          _tmp1551 * priors_1_0_sqrt_info(5, 3) +
                          _tmp1954 * priors_1_0_sqrt_info(5, 4);
  const Scalar _tmp2023 = _tmp1215 * _tmp1976 - _tmp1216 * _tmp1976 + _tmp1975 * _tmp403;
  const Scalar _tmp2024 = _tmp104 * _tmp1724 - _tmp1723 * _tmp97;
  const Scalar _tmp2025 = _tmp104 * _tmp1721 - _tmp1720 * _tmp83;
  const Scalar _tmp2026 = _tmp1148 * _tmp2024 + _tmp1493 * _tmp2025;
  const Scalar _tmp2027 = -_tmp1153 * _tmp2026 + _tmp1156 * _tmp2026 + _tmp2024 * _tmp733;
  const Scalar _tmp2028 = _tmp104 * _tmp1794 - _tmp1793 * _tmp83;
  const Scalar _tmp2029 = _tmp104 * _tmp1796 - _tmp1797 * _tmp97;
  const Scalar _tmp2030 = _tmp1128 * _tmp2029 + _tmp1432 * _tmp2028;
  const Scalar _tmp2031 = _tmp1215 * _tmp2030 - _tmp1216 * _tmp2030 + _tmp2028 * _tmp403;
  const Scalar _tmp2032 = _tmp104 * _tmp1862 - _tmp1861 * _tmp97;
  const Scalar _tmp2033 = _tmp104 * _tmp1864 - _tmp1865 * _tmp83;
  const Scalar _tmp2034 = _tmp1086 * _tmp2032 + _tmp1347 * _tmp2033;
  const Scalar _tmp2035 = -_tmp1242 * _tmp2034 + _tmp1243 * _tmp2034 + _tmp2032 * _tmp703;
  const Scalar _tmp2036 = _tmp1134 * _tmp2030 - _tmp1136 * _tmp2030 + _tmp2029 * _tmp403;
  const Scalar _tmp2037 = _tmp104 * _tmp1696 - _tmp1695 * _tmp97;
  const Scalar _tmp2038 = _tmp104 * _tmp1699 - _tmp1698 * _tmp83;
  const Scalar _tmp2039 = _tmp1166 * _tmp2037 + _tmp1511 * _tmp2038;
  const Scalar _tmp2040 = _tmp1275 * _tmp2039 - _tmp1276 * _tmp2039 + _tmp2037 * _tmp253;
  const Scalar _tmp2041 = _tmp104 * _tmp1739 - _tmp1738 * _tmp83;
  const Scalar _tmp2042 = _tmp104 * _tmp1742 - _tmp1741 * _tmp97;
  const Scalar _tmp2043 = _tmp1352 * _tmp2041 + _tmp2042 * _tmp916;
  const Scalar _tmp2044 = _tmp2041 * _tmp523 - _tmp2043 * _tmp920 + _tmp2043 * _tmp923;
  const Scalar _tmp2045 = _tmp104 * _tmp1715 - _tmp1714 * _tmp83;
  const Scalar _tmp2046 = _tmp104 * _tmp1711 - _tmp1712 * _tmp97;
  const Scalar _tmp2047 = _tmp1502 * _tmp2045 + _tmp2046 * _tmp979;
  const Scalar _tmp2048 = -_tmp1247 * _tmp2047 + _tmp1248 * _tmp2047 + _tmp2045 * _tmp583;
  const Scalar _tmp2049 = _tmp104 * _tmp1841 - _tmp1840 * _tmp83;
  const Scalar _tmp2050 = _tmp104 * _tmp1843 - _tmp1844 * _tmp97;
  const Scalar _tmp2051 = _tmp1009 * _tmp2050 + _tmp1438 * _tmp2049;
  const Scalar _tmp2052 = -_tmp1333 * _tmp2051 + _tmp1334 * _tmp2051 + _tmp2049 * _tmp493;
  const Scalar _tmp2053 = _tmp10 * priors_0_1_sqrt_info(2, 4) +
                          _tmp48 * priors_0_1_sqrt_info(2, 5) + _tmp61 * priors_0_1_sqrt_info(2, 3);
  const Scalar _tmp2054 = _tmp1177 * _tmp2026 - _tmp1178 * _tmp2026 + _tmp2025 * _tmp733;
  const Scalar _tmp2055 = _tmp104 * _tmp1775;
  const Scalar _tmp2056 = _tmp1281 * _tmp2055 - _tmp1774 * _tmp83;
  const Scalar _tmp2057 = _tmp1189 * _tmp2055 - _tmp1779 * _tmp97;
  const Scalar _tmp2058 = _tmp1191 * _tmp2057 + _tmp1417 * _tmp2056;
  const Scalar _tmp2059 = _tmp1282 * _tmp2058;
  const Scalar _tmp2060 = -_tmp1193 * _tmp2059 + _tmp1196 * _tmp2059 + _tmp2056 * _tmp313;
  const Scalar _tmp2061 = _tmp104 * _tmp1766 - _tmp1767 * _tmp83;
  const Scalar _tmp2062 = _tmp104 * _tmp1769 - _tmp1770 * _tmp97;
  const Scalar _tmp2063 = _tmp1115 * _tmp2062 + _tmp1444 * _tmp2061;
  const Scalar _tmp2064 = -_tmp1238 * _tmp2063 + _tmp1239 * _tmp2063 + _tmp193 * _tmp2061;
  const Scalar _tmp2065 = _tmp10 * priors_0_1_sqrt_info(4, 4) +
                          _tmp48 * priors_0_1_sqrt_info(4, 5) + _tmp61 * priors_0_1_sqrt_info(4, 3);
  const Scalar _tmp2066 = _tmp10 * priors_0_1_sqrt_info(5, 4) +
                          _tmp48 * priors_0_1_sqrt_info(5, 5) + _tmp61 * priors_0_1_sqrt_info(5, 3);
  const Scalar _tmp2067 = _tmp104 * _tmp2008 - _tmp1707 * _tmp97;
  const Scalar _tmp2068 = _tmp104 * _tmp2010 - _tmp1704 * _tmp83;
  const Scalar _tmp2069 = _tmp1100 * _tmp2067 + _tmp1474 * _tmp2068;
  const Scalar _tmp2070 = -_tmp1105 * _tmp2069 + _tmp1107 * _tmp2069 + _tmp2067 * _tmp763;
  const Scalar _tmp2071 = _tmp104 * _tmp1883 - _tmp1884 * _tmp83;
  const Scalar _tmp2072 = _tmp104 * _tmp1881 - _tmp1880 * _tmp97;
  const Scalar _tmp2073 = _tmp1292 * _tmp2072 + _tmp1407 * _tmp2071;
  const Scalar _tmp2074 = _tmp1297 * _tmp2073;
  const Scalar _tmp2075 = -_tmp1317 * _tmp2074 + _tmp1318 * _tmp2073 + _tmp2071 * _tmp463;
  const Scalar _tmp2076 = _tmp104 * _tmp1753 - _tmp1752 * _tmp83;
  const Scalar _tmp2077 = _tmp104 * _tmp1749 - _tmp1750 * _tmp97;
  const Scalar _tmp2078 = _tmp1026 * _tmp2077 + _tmp1466 * _tmp2076;
  const Scalar _tmp2079 = _tmp1034 * _tmp2078 - _tmp1497 * _tmp2078 + _tmp2076 * _tmp373;
  const Scalar _tmp2080 = _tmp1256 * _tmp2078 - _tmp1468 * _tmp2078 + _tmp2077 * _tmp373;
  const Scalar _tmp2081 = _tmp104 * _tmp1851 - _tmp1852 * _tmp97;
  const Scalar _tmp2082 = _tmp104 * _tmp1855 - _tmp1854 * _tmp83;
  const Scalar _tmp2083 = _tmp1308 * _tmp2081 + _tmp1425 * _tmp2082;
  const Scalar _tmp2084 = _tmp1312 * _tmp2083 - _tmp1314 * _tmp2083 + _tmp2081 * _tmp673;
  const Scalar _tmp2085 = _tmp2046 * _tmp583 - _tmp2047 * _tmp983 + _tmp2047 * _tmp985;
  const Scalar _tmp2086 = _tmp104 * landmarks_1_;
  const Scalar _tmp2087 = -_tmp1825 * _tmp97 + _tmp2086 * _tmp993;
  const Scalar _tmp2088 = _tmp1323 * _tmp2086 - _tmp1828 * _tmp83;
  const Scalar _tmp2089 = _tmp1402 * _tmp2088 + _tmp2087 * _tmp995;
  const Scalar _tmp2090 = _tmp1322 * _tmp2089 - _tmp1324 * _tmp2089 + _tmp2088 * _tmp223;
  const Scalar _tmp2091 = _tmp104 * _tmp1758 - _tmp1759 * _tmp83;
  const Scalar _tmp2092 = _tmp104 * _tmp1762 - _tmp1761 * _tmp97;
  const Scalar _tmp2093 = _tmp1071 * _tmp2092 + _tmp1458 * _tmp2091;
  const Scalar _tmp2094 = -_tmp1279 * _tmp2093 + _tmp1538 * _tmp2093 + _tmp2092 * _tmp343;
  const Scalar _tmp2095 = -_tmp1294 * _tmp2074 + _tmp1296 * _tmp2073 + _tmp2072 * _tmp463;
  const Scalar _tmp2096 = _tmp104 * landmarks_14_;
  const Scalar _tmp2097 = _tmp1816 * _tmp2096 - _tmp1818 * _tmp83;
  const Scalar _tmp2098 = _tmp1462 * _tmp2096 - _tmp1820 * _tmp97;
  const Scalar _tmp2099 = _tmp1450 * _tmp2097 + _tmp2098 * _tmp901;
  const Scalar _tmp2100 = _tmp1252 * _tmp2099 - _tmp1253 * _tmp2099 + _tmp2097 * _tmp613;
  const Scalar _tmp2101 = _tmp1182 * _tmp2069 - _tmp1183 * _tmp2069 + _tmp2068 * _tmp763;
  const Scalar _tmp2102 = _tmp10 * priors_0_1_sqrt_info(1, 4) +
                          _tmp48 * priors_0_1_sqrt_info(1, 5) + _tmp61 * priors_0_1_sqrt_info(1, 3);
  const Scalar _tmp2103 = _tmp104 * _tmp1734 - _tmp1733 * _tmp97;
  const Scalar _tmp2104 = _tmp104 * _tmp1730 - _tmp1731 * _tmp83;
  const Scalar _tmp2105 = _tmp1042 * _tmp2103 + _tmp1522 * _tmp2104;
  const Scalar _tmp2106 = -_tmp1046 * _tmp2105 + _tmp1049 * _tmp2105 + _tmp2104 * _tmp553;
  const Scalar _tmp2107 = _tmp1953 + _tmp75;
  const Scalar _tmp2108 = _tmp1552 * priors_1_0_sqrt_info(1, 3) +
                          _tmp2107 * priors_1_0_sqrt_info(1, 5) +
                          _tmp895 * priors_1_0_sqrt_info(1, 4);
  const Scalar _tmp2109 = _tmp1258 * _tmp2105;
  const Scalar _tmp2110 = -_tmp1044 * _tmp2109 + _tmp1048 * _tmp2109 + _tmp2103 * _tmp553;
  const Scalar _tmp2111 = _tmp1552 * priors_1_0_sqrt_info(4, 3) +
                          _tmp2107 * priors_1_0_sqrt_info(4, 5) +
                          _tmp895 * priors_1_0_sqrt_info(4, 4);
  const Scalar _tmp2112 = _tmp1552 * priors_1_0_sqrt_info(0, 3) +
                          _tmp2107 * priors_1_0_sqrt_info(0, 5) +
                          _tmp895 * priors_1_0_sqrt_info(0, 4);
  const Scalar _tmp2113 = _tmp1329 * _tmp2083 - _tmp1330 * _tmp2083 + _tmp2082 * _tmp673;
  const Scalar _tmp2114 = _tmp104 * landmarks_3_;
  const Scalar _tmp2115 = _tmp1055 * _tmp2114 - _tmp1874 * _tmp97;
  const Scalar _tmp2116 = _tmp1062 * _tmp2114 - _tmp1871 * _tmp83;
  const Scalar _tmp2117 = _tmp1057 * _tmp2115 + _tmp1412 * _tmp2116;
  const Scalar _tmp2118 = -_tmp1271 * _tmp2117 + _tmp1272 * _tmp2117 + _tmp2115 * _tmp283;
  const Scalar _tmp2119 = _tmp104 * landmarks_15_;
  const Scalar _tmp2120 = _tmp1202 * _tmp2119 - _tmp1784 * _tmp97;
  const Scalar _tmp2121 = _tmp1210 * _tmp2119 - _tmp1786 * _tmp83;
  const Scalar _tmp2122 = _tmp1204 * _tmp2120 + _tmp1531 * _tmp2121;
  const Scalar _tmp2123 = _tmp1301 * _tmp2122 - _tmp1302 * _tmp2122 + _tmp2120 * _tmp643;
  const Scalar _tmp2124 = _tmp2042 * _tmp523 - _tmp2043 * _tmp928 + _tmp2043 * _tmp929;
  const Scalar _tmp2125 = -_tmp1076 * _tmp2093 + _tmp1460 * _tmp2093 + _tmp2091 * _tmp343;
  const Scalar _tmp2126 = _tmp104 * _tmp1809 - _tmp1810 * _tmp83;
  const Scalar _tmp2127 = _tmp104 * _tmp1806 - _tmp1807 * _tmp97;
  const Scalar _tmp2128 = _tmp1225 * _tmp2127 + _tmp1360 * _tmp2126;
  const Scalar _tmp2129 = -_tmp1268 * _tmp2128 + _tmp1269 * _tmp2128 + _tmp2126 * _tmp433;
  const Scalar _tmp2130 = _tmp10 * priors_0_1_sqrt_info(0, 4) +
                          _tmp48 * priors_0_1_sqrt_info(0, 5) + _tmp61 * priors_0_1_sqrt_info(0, 3);
  const Scalar _tmp2131 = _tmp1229 * _tmp2128 - _tmp1231 * _tmp2128 + _tmp2127 * _tmp433;
  const Scalar _tmp2132 = _tmp1001 * _tmp2089 + _tmp2087 * _tmp223 - _tmp2089 * _tmp999;
  const Scalar _tmp2133 = _tmp10 * priors_0_1_sqrt_info(3, 4) +
                          _tmp48 * priors_0_1_sqrt_info(3, 5) + _tmp61 * priors_0_1_sqrt_info(3, 3);
  const Scalar _tmp2134 = _tmp1014 * _tmp2051 - _tmp1017 * _tmp2051 + _tmp2050 * _tmp493;
  const Scalar _tmp2135 = -_tmp1208 * _tmp2122 + _tmp1212 * _tmp2122 + _tmp2121 * _tmp643;
  const Scalar _tmp2136 = _tmp1119 * _tmp2063 - _tmp1121 * _tmp2063 + _tmp193 * _tmp2062;
  const Scalar _tmp2137 = _tmp1552 * priors_1_0_sqrt_info(3, 3) +
                          _tmp2107 * priors_1_0_sqrt_info(3, 5) +
                          _tmp895 * priors_1_0_sqrt_info(3, 4);
  const Scalar _tmp2138 = -_tmp1195 * _tmp2058 + _tmp1197 * _tmp2058 + _tmp2057 * _tmp313;
  const Scalar _tmp2139 = _tmp1061 * _tmp2117 - _tmp1065 * _tmp2117 + _tmp2116 * _tmp283;
  const Scalar _tmp2140 = _tmp2098 * _tmp613 - _tmp2099 * _tmp905 + _tmp2099 * _tmp908;
  const Scalar _tmp2141 = _tmp1170 * _tmp2039 - _tmp1172 * _tmp2039 + _tmp2038 * _tmp253;
  const Scalar _tmp2142 = _tmp1092 * _tmp2034 - _tmp1094 * _tmp2034 + _tmp2033 * _tmp703;
  const Scalar _tmp2143 = _tmp1552 * priors_1_0_sqrt_info(2, 3) +
                          _tmp2107 * priors_1_0_sqrt_info(2, 5) +
                          _tmp895 * priors_1_0_sqrt_info(2, 4);
  const Scalar _tmp2144 = _tmp1552 * priors_1_0_sqrt_info(5, 3) +
                          _tmp2107 * priors_1_0_sqrt_info(5, 5) +
                          _tmp895 * priors_1_0_sqrt_info(5, 4);
  const Scalar _tmp2145 = _tmp100 * _tmp153 + _tmp160 * _tmp94 + _tmp164 * _tmp97;
  const Scalar _tmp2146 = _tmp2145 * views_1_calibration(1, 0);
  const Scalar _tmp2147 = _tmp104 * _tmp164 + _tmp106 * _tmp160 + _tmp108 * _tmp153;
  const Scalar _tmp2148 = _tmp2147 * _tmp898;
  const Scalar _tmp2149 = -_tmp1111 * _tmp2148 + _tmp171 * _tmp2146;
  const Scalar _tmp2150 = _tmp153 * _tmp77 + _tmp160 * _tmp87 + _tmp164 * _tmp83;
  const Scalar _tmp2151 = _tmp2150 * views_1_calibration(0, 0);
  const Scalar _tmp2152 = _tmp2147 * _tmp924;
  const Scalar _tmp2153 = -_tmp1114 * _tmp2152 + _tmp171 * _tmp2151;
  const Scalar _tmp2154 = _tmp1115 * _tmp2149 + _tmp1444 * _tmp2153;
  const Scalar _tmp2155 = -_tmp1238 * _tmp2154 + _tmp1239 * _tmp2154 + _tmp193 * _tmp2153;
  const Scalar _tmp2156 = std::pow(matches_0_0_weight, Scalar(2)) / std::pow(_tmp767, Scalar(2));
  const Scalar _tmp2157 = _tmp1119 * _tmp2154 - _tmp1121 * _tmp2154 + _tmp193 * _tmp2149;
  const Scalar _tmp2158 = std::pow(matches_0_1_weight, Scalar(2)) / std::pow(_tmp770, Scalar(2));
  const Scalar _tmp2159 = _tmp209 * _tmp2151 - _tmp2152 * _tmp991;
  const Scalar _tmp2160 = _tmp209 * _tmp2146 - _tmp2148 * _tmp992;
  const Scalar _tmp2161 = _tmp1402 * _tmp2159 + _tmp2160 * _tmp995;
  const Scalar _tmp2162 = _tmp1322 * _tmp2161 - _tmp1324 * _tmp2161 + _tmp2159 * _tmp223;
  const Scalar _tmp2163 = _tmp2161 * _tmp997;
  const Scalar _tmp2164 = _tmp1000 * _tmp2163 + _tmp2160 * _tmp223 - _tmp2163 * _tmp998;
  const Scalar _tmp2165 = std::pow(matches_0_2_weight, Scalar(2)) / std::pow(_tmp773, Scalar(2));
  const Scalar _tmp2166 = -_tmp1162 * _tmp2152 + _tmp2151 * _tmp239;
  const Scalar _tmp2167 = -_tmp1163 * _tmp2148 + _tmp2146 * _tmp239;
  const Scalar _tmp2168 = _tmp1166 * _tmp2167 + _tmp1511 * _tmp2166;
  const Scalar _tmp2169 = _tmp1170 * _tmp2168 - _tmp1172 * _tmp2168 + _tmp2166 * _tmp253;
  const Scalar _tmp2170 = _tmp1275 * _tmp2168 - _tmp1276 * _tmp2168 + _tmp2167 * _tmp253;
  const Scalar _tmp2171 = -_tmp1053 * _tmp2152 + _tmp2151 * _tmp269;
  const Scalar _tmp2172 = -_tmp1054 * _tmp2148 + _tmp2146 * _tmp269;
  const Scalar _tmp2173 =
      (Scalar(1) / Scalar(2)) * _tmp1057 * _tmp2172 + (Scalar(1) / Scalar(2)) * _tmp1412 * _tmp2171;
  const Scalar _tmp2174 = _tmp2173 * _tmp271;
  const Scalar _tmp2175 = _tmp1059 * _tmp2174 - _tmp1063 * _tmp2174 + _tmp2171 * _tmp283;
  const Scalar _tmp2176 = std::pow(matches_0_3_weight, Scalar(2)) / std::pow(_tmp776, Scalar(2));
  const Scalar _tmp2177 = _tmp2173 * _tmp275;
  const Scalar _tmp2178 = _tmp1059 * _tmp2177 - _tmp1063 * _tmp2177 + _tmp2172 * _tmp283;
  const Scalar _tmp2179 = std::pow(matches_0_4_weight, Scalar(2)) / std::pow(_tmp779, Scalar(2));
  const Scalar _tmp2180 = -_tmp1187 * _tmp2148 * _tmp303 + _tmp2146 * _tmp299;
  const Scalar _tmp2181 = -_tmp1187 * _tmp2152 * _tmp295 + _tmp2151 * _tmp299;
  const Scalar _tmp2182 = _tmp1191 * _tmp2180 + _tmp1417 * _tmp2181;
  const Scalar _tmp2183 = _tmp1196 * _tmp2182;
  const Scalar _tmp2184 = _tmp1194 * _tmp2183 - _tmp1195 * _tmp2182 + _tmp2180 * _tmp313;
  const Scalar _tmp2185 = _tmp1282 * _tmp2183 - _tmp1284 * _tmp2182 + _tmp2181 * _tmp313;
  const Scalar _tmp2186 = -_tmp1455 * _tmp2152 + _tmp2151 * _tmp329;
  const Scalar _tmp2187 = -_tmp1454 * _tmp2148 + _tmp2146 * _tmp329;
  const Scalar _tmp2188 = _tmp1071 * _tmp2187 + _tmp1458 * _tmp2186;
  const Scalar _tmp2189 = -_tmp1076 * _tmp2188 + _tmp1460 * _tmp2188 + _tmp2186 * _tmp343;
  const Scalar _tmp2190 = -_tmp1279 * _tmp2188 + _tmp1538 * _tmp2188 + _tmp2187 * _tmp343;
  const Scalar _tmp2191 = std::pow(matches_0_5_weight, Scalar(2)) / std::pow(_tmp782, Scalar(2));
  const Scalar _tmp2192 = -_tmp1023 * _tmp2148 + _tmp2146 * _tmp359;
  const Scalar _tmp2193 = -_tmp1027 * _tmp2152 + _tmp2151 * _tmp359;
  const Scalar _tmp2194 = _tmp1026 * _tmp2192 + _tmp1466 * _tmp2193;
  const Scalar _tmp2195 = _tmp1034 * _tmp2194 - _tmp1497 * _tmp2194 + _tmp2193 * _tmp373;
  const Scalar _tmp2196 = _tmp1256 * _tmp2194 - _tmp1468 * _tmp2194 + _tmp2192 * _tmp373;
  const Scalar _tmp2197 = std::pow(matches_0_6_weight, Scalar(2)) / std::pow(_tmp785, Scalar(2));
  const Scalar _tmp2198 = std::pow(matches_0_7_weight, Scalar(2)) / std::pow(_tmp788, Scalar(2));
  const Scalar _tmp2199 = -_tmp1129 * _tmp2152 + _tmp2151 * _tmp389;
  const Scalar _tmp2200 = -_tmp1125 * _tmp2148 + _tmp2146 * _tmp389;
  const Scalar _tmp2201 = _tmp1128 * _tmp2200 + _tmp1432 * _tmp2199;
  const Scalar _tmp2202 = _tmp1215 * _tmp2201 - _tmp1216 * _tmp2201 + _tmp2199 * _tmp403;
  const Scalar _tmp2203 = _tmp1134 * _tmp2201 - _tmp1136 * _tmp2201 + _tmp2200 * _tmp403;
  const Scalar _tmp2204 = -_tmp1220 * _tmp2152 + _tmp2151 * _tmp419;
  const Scalar _tmp2205 = -_tmp1222 * _tmp2148 + _tmp2146 * _tmp419;
  const Scalar _tmp2206 = _tmp1225 * _tmp2205 + _tmp1360 * _tmp2204;
  const Scalar _tmp2207 = -_tmp1268 * _tmp2206 + _tmp1269 * _tmp2206 + _tmp2204 * _tmp433;
  const Scalar _tmp2208 = std::pow(matches_0_8_weight, Scalar(2)) / std::pow(_tmp791, Scalar(2));
  const Scalar _tmp2209 = _tmp1229 * _tmp2206 - _tmp1231 * _tmp2206 + _tmp2205 * _tmp433;
  const Scalar _tmp2210 = -_tmp1290 * _tmp2147 + _tmp2146 * _tmp449;
  const Scalar _tmp2211 = -_tmp1288 * _tmp2152 + _tmp2151 * _tmp449;
  const Scalar _tmp2212 = _tmp1292 * _tmp2210 + _tmp1407 * _tmp2211;
  const Scalar _tmp2213 = _tmp1296 * _tmp2212 - _tmp1298 * _tmp2212 + _tmp2210 * _tmp463;
  const Scalar _tmp2214 = std::pow(matches_0_9_weight, Scalar(2)) / std::pow(_tmp794, Scalar(2));
  const Scalar _tmp2215 = _tmp1318 * _tmp2212 - _tmp1319 * _tmp2212 + _tmp2211 * _tmp463;
  const Scalar _tmp2216 = -_tmp1005 * _tmp2152 + _tmp2151 * _tmp479;
  const Scalar _tmp2217 = -_tmp1006 * _tmp2148 + _tmp2146 * _tmp479;
  const Scalar _tmp2218 = _tmp1009 * _tmp2217 + _tmp1438 * _tmp2216;
  const Scalar _tmp2219 = -_tmp1333 * _tmp2218 + _tmp1334 * _tmp2218 + _tmp2216 * _tmp493;
  const Scalar _tmp2220 = _tmp1014 * _tmp2218 - _tmp1017 * _tmp2218 + _tmp2217 * _tmp493;
  const Scalar _tmp2221 = std::pow(matches_0_10_weight, Scalar(2)) / std::pow(_tmp797, Scalar(2));
  const Scalar _tmp2222 = std::pow(matches_0_11_weight, Scalar(2)) / std::pow(_tmp800, Scalar(2));
  const Scalar _tmp2223 = _tmp2146 * _tmp509 - _tmp2148 * _tmp913;
  const Scalar _tmp2224 = _tmp2151 * _tmp509 - _tmp2152 * _tmp912;
  const Scalar _tmp2225 = _tmp1352 * _tmp2224 + _tmp2223 * _tmp916;
  const Scalar _tmp2226 = _tmp2223 * _tmp523 - _tmp2225 * _tmp928 + _tmp2225 * _tmp929;
  const Scalar _tmp2227 = _tmp2224 * _tmp523 - _tmp2225 * _tmp920 + _tmp2225 * _tmp923;
  const Scalar _tmp2228 = -_tmp1038 * _tmp2152 + _tmp2151 * _tmp539;
  const Scalar _tmp2229 = -_tmp1039 * _tmp2148 + _tmp2146 * _tmp539;
  const Scalar _tmp2230 = _tmp1042 * _tmp2229 + _tmp1522 * _tmp2228;
  const Scalar _tmp2231 = -_tmp1259 * _tmp2230 + _tmp1260 * _tmp2230 + _tmp2229 * _tmp553;
  const Scalar _tmp2232 = std::pow(matches_0_12_weight, Scalar(2)) / std::pow(_tmp803, Scalar(2));
  const Scalar _tmp2233 = -_tmp1046 * _tmp2230 + _tmp1049 * _tmp2230 + _tmp2228 * _tmp553;
  const Scalar _tmp2234 = std::pow(matches_0_13_weight, Scalar(2)) / std::pow(_tmp806, Scalar(2));
  const Scalar _tmp2235 = _tmp2146 * _tmp569 - _tmp2148 * _tmp976;
  const Scalar _tmp2236 = _tmp2151 * _tmp569 - _tmp2152 * _tmp975;
  const Scalar _tmp2237 = _tmp1502 * _tmp2236 + _tmp2235 * _tmp979;
  const Scalar _tmp2238 = -_tmp1247 * _tmp2237 + _tmp1248 * _tmp2237 + _tmp2236 * _tmp583;
  const Scalar _tmp2239 = _tmp2235 * _tmp583 - _tmp2237 * _tmp983 + _tmp2237 * _tmp985;
  const Scalar _tmp2240 = _tmp2151 * _tmp599 - _tmp2152 * _tmp595 * _tmp896;
  const Scalar _tmp2241 = -_tmp1462 * _tmp2147 + _tmp2146 * _tmp599;
  const Scalar _tmp2242 = _tmp1450 * _tmp2240 + _tmp2241 * _tmp901;
  const Scalar _tmp2243 = _tmp1252 * _tmp2242 - _tmp1253 * _tmp2242 + _tmp2240 * _tmp613;
  const Scalar _tmp2244 = _tmp2241 * _tmp613 - _tmp2242 * _tmp905 + _tmp2242 * _tmp908;
  const Scalar _tmp2245 = std::pow(matches_0_14_weight, Scalar(2)) / std::pow(_tmp809, Scalar(2));
  const Scalar _tmp2246 = std::pow(matches_0_15_weight, Scalar(2)) / std::pow(_tmp812, Scalar(2));
  const Scalar _tmp2247 = -_tmp1201 * _tmp2148 + _tmp2146 * _tmp629;
  const Scalar _tmp2248 = -_tmp1210 * _tmp2147 + _tmp2150 * _tmp630;
  const Scalar _tmp2249 = _tmp1204 * _tmp2247 + _tmp1531 * _tmp2248;
  const Scalar _tmp2250 = -_tmp1208 * _tmp2249 + _tmp1212 * _tmp2249 + _tmp2248 * _tmp643;
  const Scalar _tmp2251 = _tmp1301 * _tmp2249 - _tmp1302 * _tmp2249 + _tmp2247 * _tmp643;
  const Scalar _tmp2252 = std::pow(matches_0_16_weight, Scalar(2)) / std::pow(_tmp815, Scalar(2));
  const Scalar _tmp2253 = -_tmp1304 * _tmp2152 * _tmp655 + _tmp2151 * _tmp659;
  const Scalar _tmp2254 = -_tmp1850 * _tmp2147 + _tmp2146 * _tmp659;
  const Scalar _tmp2255 = _tmp1308 * _tmp2254 + _tmp1425 * _tmp2253;
  const Scalar _tmp2256 = _tmp1312 * _tmp2255 - _tmp1314 * _tmp2255 + _tmp2254 * _tmp673;
  const Scalar _tmp2257 = _tmp1329 * _tmp2255 - _tmp1330 * _tmp2255 + _tmp2253 * _tmp673;
  const Scalar _tmp2258 = std::pow(matches_0_17_weight, Scalar(2)) / std::pow(_tmp818, Scalar(2));
  const Scalar _tmp2259 = -_tmp1087 * _tmp2152 + _tmp2151 * _tmp689;
  const Scalar _tmp2260 = -_tmp1083 * _tmp2148 + _tmp2146 * _tmp689;
  const Scalar _tmp2261 = _tmp1086 * _tmp2260 + _tmp1347 * _tmp2259;
  const Scalar _tmp2262 = _tmp1093 * _tmp2261;
  const Scalar _tmp2263 = -_tmp1090 * _tmp2262 + _tmp1092 * _tmp2261 + _tmp2259 * _tmp703;
  const Scalar _tmp2264 = -_tmp1241 * _tmp2262 + _tmp1243 * _tmp2261 + _tmp2260 * _tmp703;
  const Scalar _tmp2265 = -_tmp1145 * _tmp2148 + _tmp2146 * _tmp719;
  const Scalar _tmp2266 = -_tmp1149 * _tmp2152 + _tmp2151 * _tmp719;
  const Scalar _tmp2267 = _tmp1148 * _tmp2265 + _tmp1493 * _tmp2266;
  const Scalar _tmp2268 = _tmp1177 * _tmp2267 - _tmp1178 * _tmp2267 + _tmp2266 * _tmp733;
  const Scalar _tmp2269 = std::pow(matches_0_18_weight, Scalar(2)) / std::pow(_tmp821, Scalar(2));
  const Scalar _tmp2270 = -_tmp1153 * _tmp2267 + _tmp1156 * _tmp2267 + _tmp2265 * _tmp733;
  const Scalar _tmp2271 = std::pow(matches_0_19_weight, Scalar(2)) / std::pow(_tmp824, Scalar(2));
  const Scalar _tmp2272 = -_tmp1479 * _tmp2147 + _tmp2145 * _tmp754;
  const Scalar _tmp2273 = -_tmp1471 * _tmp2152 + _tmp2151 * _tmp749;
  const Scalar _tmp2274 = _tmp1100 * _tmp2272 + _tmp1474 * _tmp2273;
  const Scalar _tmp2275 = _tmp1103 * _tmp2274;
  const Scalar _tmp2276 = -_tmp1181 * _tmp2275 + _tmp1182 * _tmp2274 + _tmp2273 * _tmp763;
  const Scalar _tmp2277 = -_tmp1104 * _tmp2275 + _tmp1107 * _tmp2274 + _tmp2272 * _tmp763;

  // Output terms (4)
  if (residual != nullptr) {
    Eigen::Matrix<Scalar, 72, 1>& _residual = (*residual);

    _residual(0, 0) = _tmp63;
    _residual(1, 0) = _tmp65;
    _residual(2, 0) = _tmp67;
    _residual(3, 0) = _tmp68;
    _residual(4, 0) = _tmp69;
    _residual(5, 0) = _tmp70;
    _residual(6, 0) = _tmp133;
    _residual(7, 0) = _tmp134;
    _residual(8, 0) = _tmp137;
    _residual(9, 0) = _tmp139;
    _residual(10, 0) = _tmp140;
    _residual(11, 0) = _tmp141;
    _residual(12, 0) = _tmp194;
    _residual(13, 0) = _tmp195;
    _residual(14, 0) = _tmp224;
    _residual(15, 0) = _tmp225;
    _residual(16, 0) = _tmp254;
    _residual(17, 0) = _tmp255;
    _residual(18, 0) = _tmp284;
    _residual(19, 0) = _tmp285;
    _residual(20, 0) = _tmp314;
    _residual(21, 0) = _tmp315;
    _residual(22, 0) = _tmp344;
    _residual(23, 0) = _tmp345;
    _residual(24, 0) = _tmp374;
    _residual(25, 0) = _tmp375;
    _residual(26, 0) = _tmp404;
    _residual(27, 0) = _tmp405;
    _residual(28, 0) = _tmp434;
    _residual(29, 0) = _tmp435;
    _residual(30, 0) = _tmp464;
    _residual(31, 0) = _tmp465;
    _residual(32, 0) = _tmp494;
    _residual(33, 0) = _tmp495;
    _residual(34, 0) = _tmp524;
    _residual(35, 0) = _tmp525;
    _residual(36, 0) = _tmp554;
    _residual(37, 0) = _tmp555;
    _residual(38, 0) = _tmp584;
    _residual(39, 0) = _tmp585;
    _residual(40, 0) = _tmp614;
    _residual(41, 0) = _tmp615;
    _residual(42, 0) = _tmp644;
    _residual(43, 0) = _tmp645;
    _residual(44, 0) = _tmp674;
    _residual(45, 0) = _tmp675;
    _residual(46, 0) = _tmp704;
    _residual(47, 0) = _tmp705;
    _residual(48, 0) = _tmp734;
    _residual(49, 0) = _tmp735;
    _residual(50, 0) = _tmp764;
    _residual(51, 0) = _tmp765;
    _residual(52, 0) = _tmp766 * _tmp768;
    _residual(53, 0) = _tmp769 * _tmp771;
    _residual(54, 0) = _tmp772 * _tmp774;
    _residual(55, 0) = _tmp775 * _tmp777;
    _residual(56, 0) = _tmp778 * _tmp780;
    _residual(57, 0) = _tmp781 * _tmp783;
    _residual(58, 0) = _tmp784 * _tmp786;
    _residual(59, 0) = _tmp787 * _tmp789;
    _residual(60, 0) = _tmp790 * _tmp792;
    _residual(61, 0) = _tmp793 * _tmp795;
    _residual(62, 0) = _tmp796 * _tmp798;
    _residual(63, 0) = _tmp799 * _tmp801;
    _residual(64, 0) = _tmp802 * _tmp804;
    _residual(65, 0) = _tmp805 * _tmp807;
    _residual(66, 0) = _tmp808 * _tmp810;
    _residual(67, 0) = _tmp811 * _tmp813;
    _residual(68, 0) = _tmp814 * _tmp816;
    _residual(69, 0) = _tmp817 * _tmp819;
    _residual(70, 0) = _tmp820 * _tmp822;
    _residual(71, 0) = _tmp823 * _tmp825;
  }

  if (rhs != nullptr) {
    Eigen::Matrix<Scalar, 26, 1>& _rhs = (*rhs);

    _rhs(0, 0) = _tmp1002 * _tmp225 + _tmp1018 * _tmp495 + _tmp1020 * _tmp67 + _tmp1035 * _tmp374 +
                 _tmp1050 * _tmp554 + _tmp1066 * _tmp284 + _tmp1080 * _tmp344 + _tmp1095 * _tmp704 +
                 _tmp1108 * _tmp765 + _tmp1122 * _tmp195 + _tmp1137 * _tmp405 + _tmp1142 * _tmp140 +
                 _tmp1157 * _tmp735 + _tmp1173 * _tmp254 + _tmp1176 * _tmp133 + _tmp1180 * _tmp734 +
                 _tmp1184 * _tmp764 + _tmp1186 * _tmp70 + _tmp1198 * _tmp315 + _tmp1213 * _tmp644 +
                 _tmp1217 * _tmp404 + _tmp1232 * _tmp435 + _tmp1235 * _tmp141 + _tmp1240 * _tmp194 +
                 _tmp1244 * _tmp705 + _tmp1249 * _tmp584 + _tmp1254 * _tmp614 + _tmp1257 * _tmp375 +
                 _tmp1261 * _tmp555 + _tmp1263 * _tmp63 + _tmp1266 * _tmp139 + _tmp1270 * _tmp434 +
                 _tmp1273 * _tmp285 + _tmp1277 * _tmp255 + _tmp1278 * _tmp68 + _tmp1280 * _tmp345 +
                 _tmp1285 * _tmp314 + _tmp1299 * _tmp465 + _tmp1303 * _tmp645 + _tmp1315 * _tmp675 +
                 _tmp1320 * _tmp464 + _tmp1325 * _tmp224 + _tmp1326 * _tmp65 + _tmp1331 * _tmp674 +
                 _tmp1335 * _tmp494 + _tmp134 * _tmp972 + _tmp137 * _tmp988 + _tmp524 * _tmp927 +
                 _tmp525 * _tmp930 + _tmp585 * _tmp986 + _tmp615 * _tmp909 + _tmp69 * _tmp882;
    _rhs(1, 0) = _tmp133 * _tmp1541 + _tmp134 * _tmp1398 + _tmp1349 * _tmp704 + _tmp1355 * _tmp524 +
                 _tmp1362 * _tmp434 + _tmp1363 * _tmp435 + _tmp137 * _tmp1481 + _tmp1378 * _tmp67 +
                 _tmp1379 * _tmp525 + _tmp139 * _tmp1508 + _tmp140 * _tmp1544 + _tmp1404 * _tmp225 +
                 _tmp1409 * _tmp464 + _tmp141 * _tmp1505 + _tmp1414 * _tmp285 + _tmp1421 * _tmp315 +
                 _tmp1422 * _tmp465 + _tmp1427 * _tmp675 + _tmp1435 * _tmp405 + _tmp1441 * _tmp494 +
                 _tmp1446 * _tmp194 + _tmp1452 * _tmp614 + _tmp1461 * _tmp344 + _tmp1463 * _tmp615 +
                 _tmp1469 * _tmp375 + _tmp1477 * _tmp764 + _tmp1478 * _tmp314 + _tmp1480 * _tmp765 +
                 _tmp1484 * _tmp63 + _tmp1487 * _tmp70 + _tmp1488 * _tmp224 + _tmp1490 * _tmp705 +
                 _tmp1496 * _tmp735 + _tmp1498 * _tmp374 + _tmp1499 * _tmp284 + _tmp1504 * _tmp585 +
                 _tmp1515 * _tmp254 + _tmp1516 * _tmp69 + _tmp1517 * _tmp68 + _tmp1518 * _tmp255 +
                 _tmp1519 * _tmp404 + _tmp1525 * _tmp554 + _tmp1527 * _tmp65 + _tmp1533 * _tmp645 +
                 _tmp1534 * _tmp495 + _tmp1535 * _tmp674 + _tmp1536 * _tmp584 + _tmp1539 * _tmp345 +
                 _tmp1540 * _tmp195 + _tmp1542 * _tmp644 + _tmp1545 * _tmp555 + _tmp1547 * _tmp734;
    _rhs(2, 0) = _tmp133 * _tmp1582 + _tmp134 * _tmp1648 + _tmp137 * _tmp1576 + _tmp139 * _tmp1584 +
                 _tmp140 * _tmp1615 + _tmp141 * _tmp1647 + _tmp1555 * _tmp615 + _tmp1559 * _tmp435 +
                 _tmp1563 * _tmp764 + _tmp1580 * _tmp735 + _tmp1588 * _tmp495 + _tmp1592 * _tmp195 +
                 _tmp1596 * _tmp674 + _tmp1597 * _tmp194 + _tmp1610 * _tmp65 + _tmp1614 * _tmp255 +
                 _tmp1619 * _tmp374 + _tmp1621 * _tmp69 + _tmp1625 * _tmp705 + _tmp1629 * _tmp344 +
                 _tmp1630 * _tmp254 + _tmp1631 * _tmp63 + _tmp1636 * _tmp645 + _tmp1637 * _tmp434 +
                 _tmp1641 * _tmp555 + _tmp1646 * _tmp585 + _tmp1652 * _tmp524 + _tmp1653 * _tmp494 +
                 _tmp1654 * _tmp70 + _tmp1655 * _tmp345 + _tmp1659 * _tmp405 + _tmp1663 * _tmp314 +
                 _tmp1664 * _tmp525 + _tmp1665 * _tmp704 + _tmp1669 * _tmp285 + _tmp1670 * _tmp614 +
                 _tmp1674 * _tmp225 + _tmp1675 * _tmp584 + _tmp1676 * _tmp68 + _tmp1677 * _tmp734 +
                 _tmp1678 * _tmp284 + _tmp1679 * _tmp224 + _tmp1680 * _tmp315 + _tmp1681 * _tmp554 +
                 _tmp1682 * _tmp765 + _tmp1683 * _tmp644 + _tmp1685 * _tmp375 + _tmp1686 * _tmp404 +
                 _tmp1687 * _tmp67 + _tmp1692 * _tmp465 + _tmp1693 * _tmp675 + _tmp1694 * _tmp464;
    _rhs(3, 0) = _tmp133 * _tmp1802 + _tmp134 * _tmp1791 + _tmp137 * _tmp1890 + _tmp139 * _tmp1833 +
                 _tmp140 * _tmp1815 + _tmp141 * _tmp1895 + _tmp1703 * _tmp255 + _tmp1710 * _tmp764 +
                 _tmp1718 * _tmp585 + _tmp1719 * _tmp70 + _tmp1727 * _tmp734 + _tmp1728 * _tmp765 +
                 _tmp1729 * _tmp67 + _tmp1737 * _tmp555 + _tmp1746 * _tmp525 + _tmp1747 * _tmp554 +
                 _tmp1748 * _tmp69 + _tmp1756 * _tmp375 + _tmp1757 * _tmp374 + _tmp1765 * _tmp344 +
                 _tmp1773 * _tmp194 + _tmp1782 * _tmp315 + _tmp1789 * _tmp645 + _tmp1792 * _tmp65 +
                 _tmp1800 * _tmp404 + _tmp1801 * _tmp345 + _tmp1803 * _tmp254 + _tmp1805 * _tmp195 +
                 _tmp1814 * _tmp434 + _tmp1824 * _tmp614 + _tmp1831 * _tmp225 + _tmp1832 * _tmp435 +
                 _tmp1835 * _tmp524 + _tmp1836 * _tmp63 + _tmp1837 * _tmp224 + _tmp1838 * _tmp314 +
                 _tmp1839 * _tmp405 + _tmp1849 * _tmp494 + _tmp1858 * _tmp675 + _tmp1860 * _tmp495 +
                 _tmp1869 * _tmp705 + _tmp1870 * _tmp735 + _tmp1877 * _tmp284 + _tmp1878 * _tmp615 +
                 _tmp1879 * _tmp644 + _tmp1887 * _tmp465 + _tmp1888 * _tmp68 + _tmp1889 * _tmp464 +
                 _tmp1891 * _tmp584 + _tmp1892 * _tmp674 + _tmp1893 * _tmp704 + _tmp1894 * _tmp285;
    _rhs(4, 0) = _tmp133 * _tmp1972 + _tmp134 * _tmp1955 + _tmp137 * _tmp2017 + _tmp139 * _tmp1997 +
                 _tmp140 * _tmp1966 + _tmp141 * _tmp2022 + _tmp1899 * _tmp434 + _tmp1903 * _tmp524 +
                 _tmp1907 * _tmp705 + _tmp1911 * _tmp585 + _tmp1912 * _tmp584 + _tmp1916 * _tmp495 +
                 _tmp1921 * _tmp285 + _tmp1922 * _tmp70 + _tmp1923 * _tmp69 + _tmp1929 * _tmp344 +
                 _tmp1935 * _tmp615 + _tmp1939 * _tmp735 + _tmp194 * _tmp2004 + _tmp1943 * _tmp375 +
                 _tmp1947 * _tmp554 + _tmp195 * _tmp1988 + _tmp1951 * _tmp255 + _tmp1952 * _tmp67 +
                 _tmp1961 * _tmp224 + _tmp1962 * _tmp374 + _tmp1963 * _tmp525 + _tmp1964 * _tmp704 +
                 _tmp1965 * _tmp734 + _tmp1971 * _tmp645 + _tmp1973 * _tmp435 + _tmp1978 * _tmp405 +
                 _tmp1982 * _tmp464 + _tmp1983 * _tmp644 + _tmp1984 * _tmp494 + _tmp1989 * _tmp63 +
                 _tmp1990 * _tmp65 + _tmp1994 * _tmp314 + _tmp1995 * _tmp68 + _tmp1996 * _tmp315 +
                 _tmp2002 * _tmp674 + _tmp2003 * _tmp225 + _tmp2005 * _tmp675 + _tmp2006 * _tmp254 +
                 _tmp2007 * _tmp284 + _tmp2014 * _tmp764 + _tmp2015 * _tmp465 + _tmp2016 * _tmp765 +
                 _tmp2018 * _tmp614 + _tmp2019 * _tmp555 + _tmp2021 * _tmp345 + _tmp2023 * _tmp404;
    _rhs(5, 0) = _tmp133 * _tmp2112 + _tmp134 * _tmp2108 + _tmp137 * _tmp2143 + _tmp139 * _tmp2137 +
                 _tmp140 * _tmp2111 + _tmp141 * _tmp2144 + _tmp194 * _tmp2064 + _tmp195 * _tmp2136 +
                 _tmp2027 * _tmp735 + _tmp2031 * _tmp404 + _tmp2035 * _tmp705 + _tmp2036 * _tmp405 +
                 _tmp2040 * _tmp255 + _tmp2044 * _tmp524 + _tmp2048 * _tmp584 + _tmp2052 * _tmp494 +
                 _tmp2053 * _tmp67 + _tmp2054 * _tmp734 + _tmp2060 * _tmp314 + _tmp2065 * _tmp69 +
                 _tmp2066 * _tmp70 + _tmp2070 * _tmp765 + _tmp2075 * _tmp464 + _tmp2079 * _tmp374 +
                 _tmp2080 * _tmp375 + _tmp2084 * _tmp675 + _tmp2085 * _tmp585 + _tmp2090 * _tmp224 +
                 _tmp2094 * _tmp345 + _tmp2095 * _tmp465 + _tmp2100 * _tmp614 + _tmp2101 * _tmp764 +
                 _tmp2102 * _tmp65 + _tmp2106 * _tmp554 + _tmp2110 * _tmp555 + _tmp2113 * _tmp674 +
                 _tmp2118 * _tmp285 + _tmp2123 * _tmp645 + _tmp2124 * _tmp525 + _tmp2125 * _tmp344 +
                 _tmp2129 * _tmp434 + _tmp2130 * _tmp63 + _tmp2131 * _tmp435 + _tmp2132 * _tmp225 +
                 _tmp2133 * _tmp68 + _tmp2134 * _tmp495 + _tmp2135 * _tmp644 + _tmp2138 * _tmp315 +
                 _tmp2139 * _tmp284 + _tmp2140 * _tmp615 + _tmp2141 * _tmp254 + _tmp2142 * _tmp704;
    _rhs(6, 0) = _tmp194 * _tmp2155 + _tmp195 * _tmp2157 + _tmp2156 * _tmp766;
    _rhs(7, 0) = _tmp2158 * _tmp769 + _tmp2162 * _tmp224 + _tmp2164 * _tmp225;
    _rhs(8, 0) = _tmp2165 * _tmp772 + _tmp2169 * _tmp254 + _tmp2170 * _tmp255;
    _rhs(9, 0) = _tmp2175 * _tmp284 + _tmp2176 * _tmp775 + _tmp2178 * _tmp285;
    _rhs(10, 0) = _tmp2179 * _tmp778 + _tmp2184 * _tmp315 + _tmp2185 * _tmp314;
    _rhs(11, 0) = _tmp2189 * _tmp344 + _tmp2190 * _tmp345 + _tmp2191 * _tmp781;
    _rhs(12, 0) = _tmp2195 * _tmp374 + _tmp2196 * _tmp375 + _tmp2197 * _tmp784;
    _rhs(13, 0) = _tmp2198 * _tmp787 + _tmp2202 * _tmp404 + _tmp2203 * _tmp405;
    _rhs(14, 0) = _tmp2207 * _tmp434 + _tmp2208 * _tmp790 + _tmp2209 * _tmp435;
    _rhs(15, 0) = _tmp2213 * _tmp465 + _tmp2214 * _tmp793 + _tmp2215 * _tmp464;
    _rhs(16, 0) = _tmp2219 * _tmp494 + _tmp2220 * _tmp495 + _tmp2221 * _tmp796;
    _rhs(17, 0) = _tmp2222 * _tmp799 + _tmp2226 * _tmp525 + _tmp2227 * _tmp524;
    _rhs(18, 0) = _tmp2231 * _tmp555 + _tmp2232 * _tmp802 + _tmp2233 * _tmp554;
    _rhs(19, 0) = _tmp2234 * _tmp805 + _tmp2238 * _tmp584 + _tmp2239 * _tmp585;
    _rhs(20, 0) = _tmp2243 * _tmp614 + _tmp2244 * _tmp615 + _tmp2245 * _tmp808;
    _rhs(21, 0) = _tmp2246 * _tmp811 + _tmp2250 * _tmp644 + _tmp2251 * _tmp645;
    _rhs(22, 0) = _tmp2252 * _tmp814 + _tmp2256 * _tmp675 + _tmp2257 * _tmp674;
    _rhs(23, 0) = _tmp2258 * _tmp817 + _tmp2263 * _tmp704 + _tmp2264 * _tmp705;
    _rhs(24, 0) = _tmp2268 * _tmp734 + _tmp2269 * _tmp820 + _tmp2270 * _tmp735;
    _rhs(25, 0) = _tmp2271 * _tmp823 + _tmp2276 * _tmp764 + _tmp2277 * _tmp765;
  }

  if (jacobian != nullptr) {
    static constexpr int kRows_jacobian = 72;
    static constexpr int kCols_jacobian = 26;
    static constexpr int kNumNonZero_jacobian = 372;
    static constexpr int kColPtrs_jacobian[] = {0,   52,  104, 156, 208, 260, 312, 315, 318,
                                                321, 324, 327, 330, 333, 336, 339, 342, 345,
                                                348, 351, 354, 357, 360, 363, 366, 369, 372};
    static constexpr int kRowIndices_jacobian[] = {
        0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
        22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
        44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13,
        14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,  4,  5,
        6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
        28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
        50, 51, 0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
        42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11,
        12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
        34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,
        4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
        26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
        48, 49, 50, 51, 12, 13, 52, 14, 15, 53, 16, 17, 54, 18, 19, 55, 20, 21, 56, 22, 23, 57,
        24, 25, 58, 26, 27, 59, 28, 29, 60, 30, 31, 61, 32, 33, 62, 34, 35, 63, 36, 37, 64, 38,
        39, 65, 40, 41, 66, 42, 43, 67, 44, 45, 68, 46, 47, 69, 48, 49, 70, 50, 51, 71};
    if (jacobian->nonZeros() != 372 || jacobian->outerSize() != 26 || jacobian->innerSize() != 72 ||
        !jacobian->isCompressed()) {
      // Matrix does not have the expected layout, create a correctly initialized sparse matrix
      Scalar jacobian_empty_value_ptr[372];
      *jacobian = Eigen::Map<const Eigen::SparseMatrix<Scalar>>(
          kRows_jacobian, kCols_jacobian, kNumNonZero_jacobian, kColPtrs_jacobian,
          kRowIndices_jacobian, jacobian_empty_value_ptr);
    }
    Scalar* jacobian_value_ptr = jacobian->valuePtr();

    jacobian_value_ptr[0] = _tmp1263;
    jacobian_value_ptr[1] = _tmp1326;
    jacobian_value_ptr[2] = _tmp1020;
    jacobian_value_ptr[3] = _tmp1278;
    jacobian_value_ptr[4] = _tmp882;
    jacobian_value_ptr[5] = _tmp1186;
    jacobian_value_ptr[6] = _tmp1176;
    jacobian_value_ptr[7] = _tmp972;
    jacobian_value_ptr[8] = _tmp988;
    jacobian_value_ptr[9] = _tmp1266;
    jacobian_value_ptr[10] = _tmp1142;
    jacobian_value_ptr[11] = _tmp1235;
    jacobian_value_ptr[12] = _tmp1240;
    jacobian_value_ptr[13] = _tmp1122;
    jacobian_value_ptr[14] = _tmp1325;
    jacobian_value_ptr[15] = _tmp1002;
    jacobian_value_ptr[16] = _tmp1173;
    jacobian_value_ptr[17] = _tmp1277;
    jacobian_value_ptr[18] = _tmp1066;
    jacobian_value_ptr[19] = _tmp1273;
    jacobian_value_ptr[20] = _tmp1285;
    jacobian_value_ptr[21] = _tmp1198;
    jacobian_value_ptr[22] = _tmp1080;
    jacobian_value_ptr[23] = _tmp1280;
    jacobian_value_ptr[24] = _tmp1035;
    jacobian_value_ptr[25] = _tmp1257;
    jacobian_value_ptr[26] = _tmp1217;
    jacobian_value_ptr[27] = _tmp1137;
    jacobian_value_ptr[28] = _tmp1270;
    jacobian_value_ptr[29] = _tmp1232;
    jacobian_value_ptr[30] = _tmp1320;
    jacobian_value_ptr[31] = _tmp1299;
    jacobian_value_ptr[32] = _tmp1335;
    jacobian_value_ptr[33] = _tmp1018;
    jacobian_value_ptr[34] = _tmp927;
    jacobian_value_ptr[35] = _tmp930;
    jacobian_value_ptr[36] = _tmp1050;
    jacobian_value_ptr[37] = _tmp1261;
    jacobian_value_ptr[38] = _tmp1249;
    jacobian_value_ptr[39] = _tmp986;
    jacobian_value_ptr[40] = _tmp1254;
    jacobian_value_ptr[41] = _tmp909;
    jacobian_value_ptr[42] = _tmp1213;
    jacobian_value_ptr[43] = _tmp1303;
    jacobian_value_ptr[44] = _tmp1331;
    jacobian_value_ptr[45] = _tmp1315;
    jacobian_value_ptr[46] = _tmp1095;
    jacobian_value_ptr[47] = _tmp1244;
    jacobian_value_ptr[48] = _tmp1180;
    jacobian_value_ptr[49] = _tmp1157;
    jacobian_value_ptr[50] = _tmp1184;
    jacobian_value_ptr[51] = _tmp1108;
    jacobian_value_ptr[52] = _tmp1484;
    jacobian_value_ptr[53] = _tmp1527;
    jacobian_value_ptr[54] = _tmp1378;
    jacobian_value_ptr[55] = _tmp1517;
    jacobian_value_ptr[56] = _tmp1516;
    jacobian_value_ptr[57] = _tmp1487;
    jacobian_value_ptr[58] = _tmp1541;
    jacobian_value_ptr[59] = _tmp1398;
    jacobian_value_ptr[60] = _tmp1481;
    jacobian_value_ptr[61] = _tmp1508;
    jacobian_value_ptr[62] = _tmp1544;
    jacobian_value_ptr[63] = _tmp1505;
    jacobian_value_ptr[64] = _tmp1446;
    jacobian_value_ptr[65] = _tmp1540;
    jacobian_value_ptr[66] = _tmp1488;
    jacobian_value_ptr[67] = _tmp1404;
    jacobian_value_ptr[68] = _tmp1515;
    jacobian_value_ptr[69] = _tmp1518;
    jacobian_value_ptr[70] = _tmp1499;
    jacobian_value_ptr[71] = _tmp1414;
    jacobian_value_ptr[72] = _tmp1478;
    jacobian_value_ptr[73] = _tmp1421;
    jacobian_value_ptr[74] = _tmp1461;
    jacobian_value_ptr[75] = _tmp1539;
    jacobian_value_ptr[76] = _tmp1498;
    jacobian_value_ptr[77] = _tmp1469;
    jacobian_value_ptr[78] = _tmp1519;
    jacobian_value_ptr[79] = _tmp1435;
    jacobian_value_ptr[80] = _tmp1362;
    jacobian_value_ptr[81] = _tmp1363;
    jacobian_value_ptr[82] = _tmp1409;
    jacobian_value_ptr[83] = _tmp1422;
    jacobian_value_ptr[84] = _tmp1441;
    jacobian_value_ptr[85] = _tmp1534;
    jacobian_value_ptr[86] = _tmp1355;
    jacobian_value_ptr[87] = _tmp1379;
    jacobian_value_ptr[88] = _tmp1525;
    jacobian_value_ptr[89] = _tmp1545;
    jacobian_value_ptr[90] = _tmp1536;
    jacobian_value_ptr[91] = _tmp1504;
    jacobian_value_ptr[92] = _tmp1452;
    jacobian_value_ptr[93] = _tmp1463;
    jacobian_value_ptr[94] = _tmp1542;
    jacobian_value_ptr[95] = _tmp1533;
    jacobian_value_ptr[96] = _tmp1535;
    jacobian_value_ptr[97] = _tmp1427;
    jacobian_value_ptr[98] = _tmp1349;
    jacobian_value_ptr[99] = _tmp1490;
    jacobian_value_ptr[100] = _tmp1547;
    jacobian_value_ptr[101] = _tmp1496;
    jacobian_value_ptr[102] = _tmp1477;
    jacobian_value_ptr[103] = _tmp1480;
    jacobian_value_ptr[104] = _tmp1631;
    jacobian_value_ptr[105] = _tmp1610;
    jacobian_value_ptr[106] = _tmp1687;
    jacobian_value_ptr[107] = _tmp1676;
    jacobian_value_ptr[108] = _tmp1621;
    jacobian_value_ptr[109] = _tmp1654;
    jacobian_value_ptr[110] = _tmp1582;
    jacobian_value_ptr[111] = _tmp1648;
    jacobian_value_ptr[112] = _tmp1576;
    jacobian_value_ptr[113] = _tmp1584;
    jacobian_value_ptr[114] = _tmp1615;
    jacobian_value_ptr[115] = _tmp1647;
    jacobian_value_ptr[116] = _tmp1597;
    jacobian_value_ptr[117] = _tmp1592;
    jacobian_value_ptr[118] = _tmp1679;
    jacobian_value_ptr[119] = _tmp1674;
    jacobian_value_ptr[120] = _tmp1630;
    jacobian_value_ptr[121] = _tmp1614;
    jacobian_value_ptr[122] = _tmp1678;
    jacobian_value_ptr[123] = _tmp1669;
    jacobian_value_ptr[124] = _tmp1663;
    jacobian_value_ptr[125] = _tmp1680;
    jacobian_value_ptr[126] = _tmp1629;
    jacobian_value_ptr[127] = _tmp1655;
    jacobian_value_ptr[128] = _tmp1619;
    jacobian_value_ptr[129] = _tmp1685;
    jacobian_value_ptr[130] = _tmp1686;
    jacobian_value_ptr[131] = _tmp1659;
    jacobian_value_ptr[132] = _tmp1637;
    jacobian_value_ptr[133] = _tmp1559;
    jacobian_value_ptr[134] = _tmp1694;
    jacobian_value_ptr[135] = _tmp1692;
    jacobian_value_ptr[136] = _tmp1653;
    jacobian_value_ptr[137] = _tmp1588;
    jacobian_value_ptr[138] = _tmp1652;
    jacobian_value_ptr[139] = _tmp1664;
    jacobian_value_ptr[140] = _tmp1681;
    jacobian_value_ptr[141] = _tmp1641;
    jacobian_value_ptr[142] = _tmp1675;
    jacobian_value_ptr[143] = _tmp1646;
    jacobian_value_ptr[144] = _tmp1670;
    jacobian_value_ptr[145] = _tmp1555;
    jacobian_value_ptr[146] = _tmp1683;
    jacobian_value_ptr[147] = _tmp1636;
    jacobian_value_ptr[148] = _tmp1596;
    jacobian_value_ptr[149] = _tmp1693;
    jacobian_value_ptr[150] = _tmp1665;
    jacobian_value_ptr[151] = _tmp1625;
    jacobian_value_ptr[152] = _tmp1677;
    jacobian_value_ptr[153] = _tmp1580;
    jacobian_value_ptr[154] = _tmp1563;
    jacobian_value_ptr[155] = _tmp1682;
    jacobian_value_ptr[156] = _tmp1836;
    jacobian_value_ptr[157] = _tmp1792;
    jacobian_value_ptr[158] = _tmp1729;
    jacobian_value_ptr[159] = _tmp1888;
    jacobian_value_ptr[160] = _tmp1748;
    jacobian_value_ptr[161] = _tmp1719;
    jacobian_value_ptr[162] = _tmp1802;
    jacobian_value_ptr[163] = _tmp1791;
    jacobian_value_ptr[164] = _tmp1890;
    jacobian_value_ptr[165] = _tmp1833;
    jacobian_value_ptr[166] = _tmp1815;
    jacobian_value_ptr[167] = _tmp1895;
    jacobian_value_ptr[168] = _tmp1773;
    jacobian_value_ptr[169] = _tmp1805;
    jacobian_value_ptr[170] = _tmp1837;
    jacobian_value_ptr[171] = _tmp1831;
    jacobian_value_ptr[172] = _tmp1803;
    jacobian_value_ptr[173] = _tmp1703;
    jacobian_value_ptr[174] = _tmp1877;
    jacobian_value_ptr[175] = _tmp1894;
    jacobian_value_ptr[176] = _tmp1838;
    jacobian_value_ptr[177] = _tmp1782;
    jacobian_value_ptr[178] = _tmp1765;
    jacobian_value_ptr[179] = _tmp1801;
    jacobian_value_ptr[180] = _tmp1757;
    jacobian_value_ptr[181] = _tmp1756;
    jacobian_value_ptr[182] = _tmp1800;
    jacobian_value_ptr[183] = _tmp1839;
    jacobian_value_ptr[184] = _tmp1814;
    jacobian_value_ptr[185] = _tmp1832;
    jacobian_value_ptr[186] = _tmp1889;
    jacobian_value_ptr[187] = _tmp1887;
    jacobian_value_ptr[188] = _tmp1849;
    jacobian_value_ptr[189] = _tmp1860;
    jacobian_value_ptr[190] = _tmp1835;
    jacobian_value_ptr[191] = _tmp1746;
    jacobian_value_ptr[192] = _tmp1747;
    jacobian_value_ptr[193] = _tmp1737;
    jacobian_value_ptr[194] = _tmp1891;
    jacobian_value_ptr[195] = _tmp1718;
    jacobian_value_ptr[196] = _tmp1824;
    jacobian_value_ptr[197] = _tmp1878;
    jacobian_value_ptr[198] = _tmp1879;
    jacobian_value_ptr[199] = _tmp1789;
    jacobian_value_ptr[200] = _tmp1892;
    jacobian_value_ptr[201] = _tmp1858;
    jacobian_value_ptr[202] = _tmp1893;
    jacobian_value_ptr[203] = _tmp1869;
    jacobian_value_ptr[204] = _tmp1727;
    jacobian_value_ptr[205] = _tmp1870;
    jacobian_value_ptr[206] = _tmp1710;
    jacobian_value_ptr[207] = _tmp1728;
    jacobian_value_ptr[208] = _tmp1989;
    jacobian_value_ptr[209] = _tmp1990;
    jacobian_value_ptr[210] = _tmp1952;
    jacobian_value_ptr[211] = _tmp1995;
    jacobian_value_ptr[212] = _tmp1923;
    jacobian_value_ptr[213] = _tmp1922;
    jacobian_value_ptr[214] = _tmp1972;
    jacobian_value_ptr[215] = _tmp1955;
    jacobian_value_ptr[216] = _tmp2017;
    jacobian_value_ptr[217] = _tmp1997;
    jacobian_value_ptr[218] = _tmp1966;
    jacobian_value_ptr[219] = _tmp2022;
    jacobian_value_ptr[220] = _tmp2004;
    jacobian_value_ptr[221] = _tmp1988;
    jacobian_value_ptr[222] = _tmp1961;
    jacobian_value_ptr[223] = _tmp2003;
    jacobian_value_ptr[224] = _tmp2006;
    jacobian_value_ptr[225] = _tmp1951;
    jacobian_value_ptr[226] = _tmp2007;
    jacobian_value_ptr[227] = _tmp1921;
    jacobian_value_ptr[228] = _tmp1994;
    jacobian_value_ptr[229] = _tmp1996;
    jacobian_value_ptr[230] = _tmp1929;
    jacobian_value_ptr[231] = _tmp2021;
    jacobian_value_ptr[232] = _tmp1962;
    jacobian_value_ptr[233] = _tmp1943;
    jacobian_value_ptr[234] = _tmp2023;
    jacobian_value_ptr[235] = _tmp1978;
    jacobian_value_ptr[236] = _tmp1899;
    jacobian_value_ptr[237] = _tmp1973;
    jacobian_value_ptr[238] = _tmp1982;
    jacobian_value_ptr[239] = _tmp2015;
    jacobian_value_ptr[240] = _tmp1984;
    jacobian_value_ptr[241] = _tmp1916;
    jacobian_value_ptr[242] = _tmp1903;
    jacobian_value_ptr[243] = _tmp1963;
    jacobian_value_ptr[244] = _tmp1947;
    jacobian_value_ptr[245] = _tmp2019;
    jacobian_value_ptr[246] = _tmp1912;
    jacobian_value_ptr[247] = _tmp1911;
    jacobian_value_ptr[248] = _tmp2018;
    jacobian_value_ptr[249] = _tmp1935;
    jacobian_value_ptr[250] = _tmp1983;
    jacobian_value_ptr[251] = _tmp1971;
    jacobian_value_ptr[252] = _tmp2002;
    jacobian_value_ptr[253] = _tmp2005;
    jacobian_value_ptr[254] = _tmp1964;
    jacobian_value_ptr[255] = _tmp1907;
    jacobian_value_ptr[256] = _tmp1965;
    jacobian_value_ptr[257] = _tmp1939;
    jacobian_value_ptr[258] = _tmp2014;
    jacobian_value_ptr[259] = _tmp2016;
    jacobian_value_ptr[260] = _tmp2130;
    jacobian_value_ptr[261] = _tmp2102;
    jacobian_value_ptr[262] = _tmp2053;
    jacobian_value_ptr[263] = _tmp2133;
    jacobian_value_ptr[264] = _tmp2065;
    jacobian_value_ptr[265] = _tmp2066;
    jacobian_value_ptr[266] = _tmp2112;
    jacobian_value_ptr[267] = _tmp2108;
    jacobian_value_ptr[268] = _tmp2143;
    jacobian_value_ptr[269] = _tmp2137;
    jacobian_value_ptr[270] = _tmp2111;
    jacobian_value_ptr[271] = _tmp2144;
    jacobian_value_ptr[272] = _tmp2064;
    jacobian_value_ptr[273] = _tmp2136;
    jacobian_value_ptr[274] = _tmp2090;
    jacobian_value_ptr[275] = _tmp2132;
    jacobian_value_ptr[276] = _tmp2141;
    jacobian_value_ptr[277] = _tmp2040;
    jacobian_value_ptr[278] = _tmp2139;
    jacobian_value_ptr[279] = _tmp2118;
    jacobian_value_ptr[280] = _tmp2060;
    jacobian_value_ptr[281] = _tmp2138;
    jacobian_value_ptr[282] = _tmp2125;
    jacobian_value_ptr[283] = _tmp2094;
    jacobian_value_ptr[284] = _tmp2079;
    jacobian_value_ptr[285] = _tmp2080;
    jacobian_value_ptr[286] = _tmp2031;
    jacobian_value_ptr[287] = _tmp2036;
    jacobian_value_ptr[288] = _tmp2129;
    jacobian_value_ptr[289] = _tmp2131;
    jacobian_value_ptr[290] = _tmp2075;
    jacobian_value_ptr[291] = _tmp2095;
    jacobian_value_ptr[292] = _tmp2052;
    jacobian_value_ptr[293] = _tmp2134;
    jacobian_value_ptr[294] = _tmp2044;
    jacobian_value_ptr[295] = _tmp2124;
    jacobian_value_ptr[296] = _tmp2106;
    jacobian_value_ptr[297] = _tmp2110;
    jacobian_value_ptr[298] = _tmp2048;
    jacobian_value_ptr[299] = _tmp2085;
    jacobian_value_ptr[300] = _tmp2100;
    jacobian_value_ptr[301] = _tmp2140;
    jacobian_value_ptr[302] = _tmp2135;
    jacobian_value_ptr[303] = _tmp2123;
    jacobian_value_ptr[304] = _tmp2113;
    jacobian_value_ptr[305] = _tmp2084;
    jacobian_value_ptr[306] = _tmp2142;
    jacobian_value_ptr[307] = _tmp2035;
    jacobian_value_ptr[308] = _tmp2054;
    jacobian_value_ptr[309] = _tmp2027;
    jacobian_value_ptr[310] = _tmp2101;
    jacobian_value_ptr[311] = _tmp2070;
    jacobian_value_ptr[312] = _tmp2155;
    jacobian_value_ptr[313] = _tmp2157;
    jacobian_value_ptr[314] = _tmp768;
    jacobian_value_ptr[315] = _tmp2162;
    jacobian_value_ptr[316] = _tmp2164;
    jacobian_value_ptr[317] = _tmp771;
    jacobian_value_ptr[318] = _tmp2169;
    jacobian_value_ptr[319] = _tmp2170;
    jacobian_value_ptr[320] = _tmp774;
    jacobian_value_ptr[321] = _tmp2175;
    jacobian_value_ptr[322] = _tmp2178;
    jacobian_value_ptr[323] = _tmp777;
    jacobian_value_ptr[324] = _tmp2185;
    jacobian_value_ptr[325] = _tmp2184;
    jacobian_value_ptr[326] = _tmp780;
    jacobian_value_ptr[327] = _tmp2189;
    jacobian_value_ptr[328] = _tmp2190;
    jacobian_value_ptr[329] = _tmp783;
    jacobian_value_ptr[330] = _tmp2195;
    jacobian_value_ptr[331] = _tmp2196;
    jacobian_value_ptr[332] = _tmp786;
    jacobian_value_ptr[333] = _tmp2202;
    jacobian_value_ptr[334] = _tmp2203;
    jacobian_value_ptr[335] = _tmp789;
    jacobian_value_ptr[336] = _tmp2207;
    jacobian_value_ptr[337] = _tmp2209;
    jacobian_value_ptr[338] = _tmp792;
    jacobian_value_ptr[339] = _tmp2215;
    jacobian_value_ptr[340] = _tmp2213;
    jacobian_value_ptr[341] = _tmp795;
    jacobian_value_ptr[342] = _tmp2219;
    jacobian_value_ptr[343] = _tmp2220;
    jacobian_value_ptr[344] = _tmp798;
    jacobian_value_ptr[345] = _tmp2227;
    jacobian_value_ptr[346] = _tmp2226;
    jacobian_value_ptr[347] = _tmp801;
    jacobian_value_ptr[348] = _tmp2233;
    jacobian_value_ptr[349] = _tmp2231;
    jacobian_value_ptr[350] = _tmp804;
    jacobian_value_ptr[351] = _tmp2238;
    jacobian_value_ptr[352] = _tmp2239;
    jacobian_value_ptr[353] = _tmp807;
    jacobian_value_ptr[354] = _tmp2243;
    jacobian_value_ptr[355] = _tmp2244;
    jacobian_value_ptr[356] = _tmp810;
    jacobian_value_ptr[357] = _tmp2250;
    jacobian_value_ptr[358] = _tmp2251;
    jacobian_value_ptr[359] = _tmp813;
    jacobian_value_ptr[360] = _tmp2257;
    jacobian_value_ptr[361] = _tmp2256;
    jacobian_value_ptr[362] = _tmp816;
    jacobian_value_ptr[363] = _tmp2263;
    jacobian_value_ptr[364] = _tmp2264;
    jacobian_value_ptr[365] = _tmp819;
    jacobian_value_ptr[366] = _tmp2268;
    jacobian_value_ptr[367] = _tmp2270;
    jacobian_value_ptr[368] = _tmp822;
    jacobian_value_ptr[369] = _tmp2276;
    jacobian_value_ptr[370] = _tmp2277;
    jacobian_value_ptr[371] = _tmp825;
  }

  if (hessian != nullptr) {
    static constexpr int kRows_hessian = 26;
    static constexpr int kCols_hessian = 26;
    static constexpr int kNumNonZero_hessian = 161;
    static constexpr int kColPtrs_hessian[] = {0,   26,  51,  75,  98,  120, 141, 142, 143,
                                               144, 145, 146, 147, 148, 149, 150, 151, 152,
                                               153, 154, 155, 156, 157, 158, 159, 160, 161};
    static constexpr int kRowIndices_hessian[] = {
        0,  1,  2,  3,  4,  5,  6, 7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
        23, 24, 25, 1,  2,  3,  4, 5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
        21, 22, 23, 24, 25, 2,  3, 4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 23, 24, 25, 3, 4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 23, 24, 25, 4, 5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
        21, 22, 23, 24, 25, 5,  6, 7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
        23, 24, 25, 6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25};
    if (hessian->nonZeros() != 161 || hessian->outerSize() != 26 || hessian->innerSize() != 26 ||
        !hessian->isCompressed()) {
      // Matrix does not have the expected layout, create a correctly initialized sparse matrix
      Scalar hessian_empty_value_ptr[161];
      *hessian = Eigen::Map<const Eigen::SparseMatrix<Scalar>>(
          kRows_hessian, kCols_hessian, kNumNonZero_hessian, kColPtrs_hessian, kRowIndices_hessian,
          hessian_empty_value_ptr);
    }
    Scalar* hessian_value_ptr = hessian->valuePtr();

    hessian_value_ptr[0] = std::pow(_tmp1002, Scalar(2)) + std::pow(_tmp1018, Scalar(2)) +
                           std::pow(_tmp1020, Scalar(2)) + std::pow(_tmp1035, Scalar(2)) +
                           std::pow(_tmp1050, Scalar(2)) + std::pow(_tmp1066, Scalar(2)) +
                           std::pow(_tmp1080, Scalar(2)) + std::pow(_tmp1095, Scalar(2)) +
                           std::pow(_tmp1108, Scalar(2)) + std::pow(_tmp1122, Scalar(2)) +
                           std::pow(_tmp1137, Scalar(2)) + std::pow(_tmp1142, Scalar(2)) +
                           std::pow(_tmp1157, Scalar(2)) + std::pow(_tmp1173, Scalar(2)) +
                           std::pow(_tmp1176, Scalar(2)) + std::pow(_tmp1180, Scalar(2)) +
                           std::pow(_tmp1184, Scalar(2)) + std::pow(_tmp1186, Scalar(2)) +
                           std::pow(_tmp1198, Scalar(2)) + std::pow(_tmp1213, Scalar(2)) +
                           std::pow(_tmp1217, Scalar(2)) + std::pow(_tmp1232, Scalar(2)) +
                           std::pow(_tmp1235, Scalar(2)) + std::pow(_tmp1240, Scalar(2)) +
                           std::pow(_tmp1244, Scalar(2)) + std::pow(_tmp1249, Scalar(2)) +
                           std::pow(_tmp1254, Scalar(2)) + std::pow(_tmp1257, Scalar(2)) +
                           std::pow(_tmp1261, Scalar(2)) + std::pow(_tmp1263, Scalar(2)) +
                           std::pow(_tmp1266, Scalar(2)) + std::pow(_tmp1270, Scalar(2)) +
                           std::pow(_tmp1273, Scalar(2)) + std::pow(_tmp1277, Scalar(2)) +
                           std::pow(_tmp1278, Scalar(2)) + std::pow(_tmp1280, Scalar(2)) +
                           std::pow(_tmp1285, Scalar(2)) + std::pow(_tmp1299, Scalar(2)) +
                           std::pow(_tmp1303, Scalar(2)) + std::pow(_tmp1315, Scalar(2)) +
                           std::pow(_tmp1320, Scalar(2)) + std::pow(_tmp1325, Scalar(2)) +
                           std::pow(_tmp1326, Scalar(2)) + std::pow(_tmp1331, Scalar(2)) +
                           std::pow(_tmp1335, Scalar(2)) + std::pow(_tmp882, Scalar(2)) +
                           std::pow(_tmp909, Scalar(2)) + std::pow(_tmp927, Scalar(2)) +
                           std::pow(_tmp930, Scalar(2)) + std::pow(_tmp972, Scalar(2)) +
                           std::pow(_tmp986, Scalar(2)) + std::pow(_tmp988, Scalar(2));
    hessian_value_ptr[1] =
        _tmp1002 * _tmp1404 + _tmp1018 * _tmp1534 + _tmp1020 * _tmp1378 + _tmp1035 * _tmp1498 +
        _tmp1050 * _tmp1525 + _tmp1066 * _tmp1499 + _tmp1080 * _tmp1461 + _tmp1095 * _tmp1349 +
        _tmp1108 * _tmp1480 + _tmp1122 * _tmp1540 + _tmp1137 * _tmp1435 + _tmp1142 * _tmp1544 +
        _tmp1157 * _tmp1496 + _tmp1173 * _tmp1515 + _tmp1176 * _tmp1541 + _tmp1180 * _tmp1547 +
        _tmp1184 * _tmp1477 + _tmp1186 * _tmp1487 + _tmp1198 * _tmp1421 + _tmp1213 * _tmp1542 +
        _tmp1217 * _tmp1519 + _tmp1232 * _tmp1363 + _tmp1235 * _tmp1505 + _tmp1240 * _tmp1446 +
        _tmp1244 * _tmp1490 + _tmp1249 * _tmp1536 + _tmp1254 * _tmp1452 + _tmp1257 * _tmp1469 +
        _tmp1261 * _tmp1545 + _tmp1263 * _tmp1484 + _tmp1266 * _tmp1508 + _tmp1270 * _tmp1362 +
        _tmp1273 * _tmp1414 + _tmp1277 * _tmp1518 + _tmp1278 * _tmp1517 + _tmp1280 * _tmp1539 +
        _tmp1285 * _tmp1478 + _tmp1299 * _tmp1422 + _tmp1303 * _tmp1533 + _tmp1315 * _tmp1427 +
        _tmp1320 * _tmp1409 + _tmp1325 * _tmp1488 + _tmp1326 * _tmp1527 + _tmp1331 * _tmp1535 +
        _tmp1335 * _tmp1441 + _tmp1355 * _tmp927 + _tmp1379 * _tmp930 + _tmp1398 * _tmp972 +
        _tmp1463 * _tmp909 + _tmp1481 * _tmp988 + _tmp1504 * _tmp986 + _tmp1516 * _tmp882;
    hessian_value_ptr[2] =
        _tmp1002 * _tmp1674 + _tmp1018 * _tmp1588 + _tmp1020 * _tmp1687 + _tmp1035 * _tmp1619 +
        _tmp1050 * _tmp1681 + _tmp1066 * _tmp1678 + _tmp1080 * _tmp1629 + _tmp1095 * _tmp1665 +
        _tmp1108 * _tmp1682 + _tmp1122 * _tmp1592 + _tmp1137 * _tmp1659 + _tmp1142 * _tmp1615 +
        _tmp1157 * _tmp1580 + _tmp1173 * _tmp1630 + _tmp1176 * _tmp1582 + _tmp1180 * _tmp1677 +
        _tmp1184 * _tmp1563 + _tmp1186 * _tmp1654 + _tmp1198 * _tmp1680 + _tmp1213 * _tmp1683 +
        _tmp1217 * _tmp1686 + _tmp1232 * _tmp1559 + _tmp1235 * _tmp1647 + _tmp1240 * _tmp1597 +
        _tmp1244 * _tmp1625 + _tmp1249 * _tmp1675 + _tmp1254 * _tmp1670 + _tmp1257 * _tmp1685 +
        _tmp1261 * _tmp1641 + _tmp1263 * _tmp1631 + _tmp1266 * _tmp1584 + _tmp1270 * _tmp1637 +
        _tmp1273 * _tmp1669 + _tmp1277 * _tmp1614 + _tmp1278 * _tmp1676 + _tmp1280 * _tmp1655 +
        _tmp1285 * _tmp1663 + _tmp1299 * _tmp1692 + _tmp1303 * _tmp1636 + _tmp1315 * _tmp1693 +
        _tmp1320 * _tmp1694 + _tmp1325 * _tmp1679 + _tmp1326 * _tmp1610 + _tmp1331 * _tmp1596 +
        _tmp1335 * _tmp1653 + _tmp1555 * _tmp909 + _tmp1576 * _tmp988 + _tmp1621 * _tmp882 +
        _tmp1646 * _tmp986 + _tmp1648 * _tmp972 + _tmp1652 * _tmp927 + _tmp1664 * _tmp930;
    hessian_value_ptr[3] =
        _tmp1002 * _tmp1831 + _tmp1018 * _tmp1860 + _tmp1020 * _tmp1729 + _tmp1035 * _tmp1757 +
        _tmp1050 * _tmp1747 + _tmp1066 * _tmp1877 + _tmp1080 * _tmp1765 + _tmp1095 * _tmp1893 +
        _tmp1108 * _tmp1728 + _tmp1122 * _tmp1805 + _tmp1137 * _tmp1839 + _tmp1142 * _tmp1815 +
        _tmp1157 * _tmp1870 + _tmp1173 * _tmp1803 + _tmp1176 * _tmp1802 + _tmp1180 * _tmp1727 +
        _tmp1184 * _tmp1710 + _tmp1186 * _tmp1719 + _tmp1198 * _tmp1782 + _tmp1213 * _tmp1879 +
        _tmp1217 * _tmp1800 + _tmp1232 * _tmp1832 + _tmp1235 * _tmp1895 + _tmp1240 * _tmp1773 +
        _tmp1244 * _tmp1869 + _tmp1249 * _tmp1891 + _tmp1254 * _tmp1824 + _tmp1257 * _tmp1756 +
        _tmp1261 * _tmp1737 + _tmp1263 * _tmp1836 + _tmp1266 * _tmp1833 + _tmp1270 * _tmp1814 +
        _tmp1273 * _tmp1894 + _tmp1277 * _tmp1703 + _tmp1278 * _tmp1888 + _tmp1280 * _tmp1801 +
        _tmp1285 * _tmp1838 + _tmp1299 * _tmp1887 + _tmp1303 * _tmp1789 + _tmp1315 * _tmp1858 +
        _tmp1320 * _tmp1889 + _tmp1325 * _tmp1837 + _tmp1326 * _tmp1792 + _tmp1331 * _tmp1892 +
        _tmp1335 * _tmp1849 + _tmp1718 * _tmp986 + _tmp1746 * _tmp930 + _tmp1748 * _tmp882 +
        _tmp1791 * _tmp972 + _tmp1835 * _tmp927 + _tmp1878 * _tmp909 + _tmp1890 * _tmp988;
    hessian_value_ptr[4] =
        _tmp1002 * _tmp2003 + _tmp1018 * _tmp1916 + _tmp1020 * _tmp1952 + _tmp1035 * _tmp1962 +
        _tmp1050 * _tmp1947 + _tmp1066 * _tmp2007 + _tmp1080 * _tmp1929 + _tmp1095 * _tmp1964 +
        _tmp1108 * _tmp2016 + _tmp1122 * _tmp1988 + _tmp1137 * _tmp1978 + _tmp1142 * _tmp1966 +
        _tmp1157 * _tmp1939 + _tmp1173 * _tmp2006 + _tmp1176 * _tmp1972 + _tmp1180 * _tmp1965 +
        _tmp1184 * _tmp2014 + _tmp1186 * _tmp1922 + _tmp1198 * _tmp1996 + _tmp1213 * _tmp1983 +
        _tmp1217 * _tmp2023 + _tmp1232 * _tmp1973 + _tmp1235 * _tmp2022 + _tmp1240 * _tmp2004 +
        _tmp1244 * _tmp1907 + _tmp1249 * _tmp1912 + _tmp1254 * _tmp2018 + _tmp1257 * _tmp1943 +
        _tmp1261 * _tmp2019 + _tmp1263 * _tmp1989 + _tmp1266 * _tmp1997 + _tmp1270 * _tmp1899 +
        _tmp1273 * _tmp1921 + _tmp1277 * _tmp1951 + _tmp1278 * _tmp1995 + _tmp1280 * _tmp2021 +
        _tmp1285 * _tmp1994 + _tmp1299 * _tmp2015 + _tmp1303 * _tmp1971 + _tmp1315 * _tmp2005 +
        _tmp1320 * _tmp1982 + _tmp1325 * _tmp1961 + _tmp1326 * _tmp1990 + _tmp1331 * _tmp2002 +
        _tmp1335 * _tmp1984 + _tmp1903 * _tmp927 + _tmp1911 * _tmp986 + _tmp1923 * _tmp882 +
        _tmp1935 * _tmp909 + _tmp1955 * _tmp972 + _tmp1963 * _tmp930 + _tmp2017 * _tmp988;
    hessian_value_ptr[5] =
        _tmp1002 * _tmp2132 + _tmp1018 * _tmp2134 + _tmp1020 * _tmp2053 + _tmp1035 * _tmp2079 +
        _tmp1050 * _tmp2106 + _tmp1066 * _tmp2139 + _tmp1080 * _tmp2125 + _tmp1095 * _tmp2142 +
        _tmp1108 * _tmp2070 + _tmp1122 * _tmp2136 + _tmp1137 * _tmp2036 + _tmp1142 * _tmp2111 +
        _tmp1157 * _tmp2027 + _tmp1173 * _tmp2141 + _tmp1176 * _tmp2112 + _tmp1180 * _tmp2054 +
        _tmp1184 * _tmp2101 + _tmp1186 * _tmp2066 + _tmp1198 * _tmp2138 + _tmp1213 * _tmp2135 +
        _tmp1217 * _tmp2031 + _tmp1232 * _tmp2131 + _tmp1235 * _tmp2144 + _tmp1240 * _tmp2064 +
        _tmp1244 * _tmp2035 + _tmp1249 * _tmp2048 + _tmp1254 * _tmp2100 + _tmp1257 * _tmp2080 +
        _tmp1261 * _tmp2110 + _tmp1263 * _tmp2130 + _tmp1266 * _tmp2137 + _tmp1270 * _tmp2129 +
        _tmp1273 * _tmp2118 + _tmp1277 * _tmp2040 + _tmp1278 * _tmp2133 + _tmp1280 * _tmp2094 +
        _tmp1285 * _tmp2060 + _tmp1299 * _tmp2095 + _tmp1303 * _tmp2123 + _tmp1315 * _tmp2084 +
        _tmp1320 * _tmp2075 + _tmp1325 * _tmp2090 + _tmp1326 * _tmp2102 + _tmp1331 * _tmp2113 +
        _tmp1335 * _tmp2052 + _tmp2044 * _tmp927 + _tmp2065 * _tmp882 + _tmp2085 * _tmp986 +
        _tmp2108 * _tmp972 + _tmp2124 * _tmp930 + _tmp2140 * _tmp909 + _tmp2143 * _tmp988;
    hessian_value_ptr[6] = _tmp1122 * _tmp2157 + _tmp1240 * _tmp2155;
    hessian_value_ptr[7] = _tmp1002 * _tmp2164 + _tmp1325 * _tmp2162;
    hessian_value_ptr[8] = _tmp1173 * _tmp2169 + _tmp1277 * _tmp2170;
    hessian_value_ptr[9] = _tmp1066 * _tmp2175 + _tmp1273 * _tmp2178;
    hessian_value_ptr[10] = _tmp1198 * _tmp2184 + _tmp1285 * _tmp2185;
    hessian_value_ptr[11] = _tmp1080 * _tmp2189 + _tmp1280 * _tmp2190;
    hessian_value_ptr[12] = _tmp1035 * _tmp2195 + _tmp1257 * _tmp2196;
    hessian_value_ptr[13] = _tmp1137 * _tmp2203 + _tmp1217 * _tmp2202;
    hessian_value_ptr[14] = _tmp1232 * _tmp2209 + _tmp1270 * _tmp2207;
    hessian_value_ptr[15] = _tmp1299 * _tmp2213 + _tmp1320 * _tmp2215;
    hessian_value_ptr[16] = _tmp1018 * _tmp2220 + _tmp1335 * _tmp2219;
    hessian_value_ptr[17] = _tmp2226 * _tmp930 + _tmp2227 * _tmp927;
    hessian_value_ptr[18] = _tmp1050 * _tmp2233 + _tmp1261 * _tmp2231;
    hessian_value_ptr[19] = _tmp1249 * _tmp2238 + _tmp2239 * _tmp986;
    hessian_value_ptr[20] = _tmp1254 * _tmp2243 + _tmp2244 * _tmp909;
    hessian_value_ptr[21] = _tmp1213 * _tmp2250 + _tmp1303 * _tmp2251;
    hessian_value_ptr[22] = _tmp1315 * _tmp2256 + _tmp1331 * _tmp2257;
    hessian_value_ptr[23] = _tmp1095 * _tmp2263 + _tmp1244 * _tmp2264;
    hessian_value_ptr[24] = _tmp1157 * _tmp2270 + _tmp1180 * _tmp2268;
    hessian_value_ptr[25] = _tmp1108 * _tmp2277 + _tmp1184 * _tmp2276;
    hessian_value_ptr[26] = std::pow(_tmp1349, Scalar(2)) + std::pow(_tmp1355, Scalar(2)) +
                            std::pow(_tmp1362, Scalar(2)) + std::pow(_tmp1363, Scalar(2)) +
                            std::pow(_tmp1378, Scalar(2)) + std::pow(_tmp1379, Scalar(2)) +
                            std::pow(_tmp1398, Scalar(2)) + std::pow(_tmp1404, Scalar(2)) +
                            std::pow(_tmp1409, Scalar(2)) + std::pow(_tmp1414, Scalar(2)) +
                            std::pow(_tmp1421, Scalar(2)) + std::pow(_tmp1422, Scalar(2)) +
                            std::pow(_tmp1427, Scalar(2)) + std::pow(_tmp1435, Scalar(2)) +
                            std::pow(_tmp1441, Scalar(2)) + std::pow(_tmp1446, Scalar(2)) +
                            std::pow(_tmp1452, Scalar(2)) + std::pow(_tmp1461, Scalar(2)) +
                            std::pow(_tmp1463, Scalar(2)) + std::pow(_tmp1469, Scalar(2)) +
                            std::pow(_tmp1477, Scalar(2)) + std::pow(_tmp1478, Scalar(2)) +
                            std::pow(_tmp1480, Scalar(2)) + std::pow(_tmp1481, Scalar(2)) +
                            std::pow(_tmp1484, Scalar(2)) + std::pow(_tmp1487, Scalar(2)) +
                            std::pow(_tmp1488, Scalar(2)) + std::pow(_tmp1490, Scalar(2)) +
                            std::pow(_tmp1496, Scalar(2)) + std::pow(_tmp1498, Scalar(2)) +
                            std::pow(_tmp1499, Scalar(2)) + std::pow(_tmp1504, Scalar(2)) +
                            std::pow(_tmp1505, Scalar(2)) + std::pow(_tmp1508, Scalar(2)) +
                            std::pow(_tmp1515, Scalar(2)) + std::pow(_tmp1516, Scalar(2)) +
                            std::pow(_tmp1517, Scalar(2)) + std::pow(_tmp1518, Scalar(2)) +
                            std::pow(_tmp1519, Scalar(2)) + std::pow(_tmp1525, Scalar(2)) +
                            std::pow(_tmp1527, Scalar(2)) + std::pow(_tmp1533, Scalar(2)) +
                            std::pow(_tmp1534, Scalar(2)) + std::pow(_tmp1535, Scalar(2)) +
                            std::pow(_tmp1536, Scalar(2)) + std::pow(_tmp1539, Scalar(2)) +
                            std::pow(_tmp1540, Scalar(2)) + std::pow(_tmp1541, Scalar(2)) +
                            std::pow(_tmp1542, Scalar(2)) + std::pow(_tmp1544, Scalar(2)) +
                            std::pow(_tmp1545, Scalar(2)) + std::pow(_tmp1547, Scalar(2));
    hessian_value_ptr[27] =
        _tmp1349 * _tmp1665 + _tmp1355 * _tmp1652 + _tmp1362 * _tmp1637 + _tmp1363 * _tmp1559 +
        _tmp1378 * _tmp1687 + _tmp1379 * _tmp1664 + _tmp1398 * _tmp1648 + _tmp1404 * _tmp1674 +
        _tmp1409 * _tmp1694 + _tmp1414 * _tmp1669 + _tmp1421 * _tmp1680 + _tmp1422 * _tmp1692 +
        _tmp1427 * _tmp1693 + _tmp1435 * _tmp1659 + _tmp1441 * _tmp1653 + _tmp1446 * _tmp1597 +
        _tmp1452 * _tmp1670 + _tmp1461 * _tmp1629 + _tmp1463 * _tmp1555 + _tmp1469 * _tmp1685 +
        _tmp1477 * _tmp1563 + _tmp1478 * _tmp1663 + _tmp1480 * _tmp1682 + _tmp1481 * _tmp1576 +
        _tmp1484 * _tmp1631 + _tmp1487 * _tmp1654 + _tmp1488 * _tmp1679 + _tmp1490 * _tmp1625 +
        _tmp1496 * _tmp1580 + _tmp1498 * _tmp1619 + _tmp1499 * _tmp1678 + _tmp1504 * _tmp1646 +
        _tmp1505 * _tmp1647 + _tmp1508 * _tmp1584 + _tmp1515 * _tmp1630 + _tmp1516 * _tmp1621 +
        _tmp1517 * _tmp1676 + _tmp1518 * _tmp1614 + _tmp1519 * _tmp1686 + _tmp1525 * _tmp1681 +
        _tmp1527 * _tmp1610 + _tmp1533 * _tmp1636 + _tmp1534 * _tmp1588 + _tmp1535 * _tmp1596 +
        _tmp1536 * _tmp1675 + _tmp1539 * _tmp1655 + _tmp1540 * _tmp1592 + _tmp1541 * _tmp1582 +
        _tmp1542 * _tmp1683 + _tmp1544 * _tmp1615 + _tmp1545 * _tmp1641 + _tmp1547 * _tmp1677;
    hessian_value_ptr[28] =
        _tmp1349 * _tmp1893 + _tmp1355 * _tmp1835 + _tmp1362 * _tmp1814 + _tmp1363 * _tmp1832 +
        _tmp1378 * _tmp1729 + _tmp1379 * _tmp1746 + _tmp1398 * _tmp1791 + _tmp1404 * _tmp1831 +
        _tmp1409 * _tmp1889 + _tmp1414 * _tmp1894 + _tmp1421 * _tmp1782 + _tmp1422 * _tmp1887 +
        _tmp1427 * _tmp1858 + _tmp1435 * _tmp1839 + _tmp1441 * _tmp1849 + _tmp1446 * _tmp1773 +
        _tmp1452 * _tmp1824 + _tmp1461 * _tmp1765 + _tmp1463 * _tmp1878 + _tmp1469 * _tmp1756 +
        _tmp1477 * _tmp1710 + _tmp1478 * _tmp1838 + _tmp1480 * _tmp1728 + _tmp1481 * _tmp1890 +
        _tmp1484 * _tmp1836 + _tmp1487 * _tmp1719 + _tmp1488 * _tmp1837 + _tmp1490 * _tmp1869 +
        _tmp1496 * _tmp1870 + _tmp1498 * _tmp1757 + _tmp1499 * _tmp1877 + _tmp1504 * _tmp1718 +
        _tmp1505 * _tmp1895 + _tmp1508 * _tmp1833 + _tmp1515 * _tmp1803 + _tmp1516 * _tmp1748 +
        _tmp1517 * _tmp1888 + _tmp1518 * _tmp1703 + _tmp1519 * _tmp1800 + _tmp1525 * _tmp1747 +
        _tmp1527 * _tmp1792 + _tmp1533 * _tmp1789 + _tmp1534 * _tmp1860 + _tmp1535 * _tmp1892 +
        _tmp1536 * _tmp1891 + _tmp1539 * _tmp1801 + _tmp1540 * _tmp1805 + _tmp1541 * _tmp1802 +
        _tmp1542 * _tmp1879 + _tmp1544 * _tmp1815 + _tmp1545 * _tmp1737 + _tmp1547 * _tmp1727;
    hessian_value_ptr[29] =
        _tmp1349 * _tmp1964 + _tmp1355 * _tmp1903 + _tmp1362 * _tmp1899 + _tmp1363 * _tmp1973 +
        _tmp1378 * _tmp1952 + _tmp1379 * _tmp1963 + _tmp1398 * _tmp1955 + _tmp1404 * _tmp2003 +
        _tmp1409 * _tmp1982 + _tmp1414 * _tmp1921 + _tmp1421 * _tmp1996 + _tmp1422 * _tmp2015 +
        _tmp1427 * _tmp2005 + _tmp1435 * _tmp1978 + _tmp1441 * _tmp1984 + _tmp1446 * _tmp2004 +
        _tmp1452 * _tmp2018 + _tmp1461 * _tmp1929 + _tmp1463 * _tmp1935 + _tmp1469 * _tmp1943 +
        _tmp1477 * _tmp2014 + _tmp1478 * _tmp1994 + _tmp1480 * _tmp2016 + _tmp1481 * _tmp2017 +
        _tmp1484 * _tmp1989 + _tmp1487 * _tmp1922 + _tmp1488 * _tmp1961 + _tmp1490 * _tmp1907 +
        _tmp1496 * _tmp1939 + _tmp1498 * _tmp1962 + _tmp1499 * _tmp2007 + _tmp1504 * _tmp1911 +
        _tmp1505 * _tmp2022 + _tmp1508 * _tmp1997 + _tmp1515 * _tmp2006 + _tmp1516 * _tmp1923 +
        _tmp1517 * _tmp1995 + _tmp1518 * _tmp1951 + _tmp1519 * _tmp2023 + _tmp1525 * _tmp1947 +
        _tmp1527 * _tmp1990 + _tmp1533 * _tmp1971 + _tmp1534 * _tmp1916 + _tmp1535 * _tmp2002 +
        _tmp1536 * _tmp1912 + _tmp1539 * _tmp2021 + _tmp1540 * _tmp1988 + _tmp1541 * _tmp1972 +
        _tmp1542 * _tmp1983 + _tmp1544 * _tmp1966 + _tmp1545 * _tmp2019 + _tmp1547 * _tmp1965;
    hessian_value_ptr[30] =
        _tmp1349 * _tmp2142 + _tmp1355 * _tmp2044 + _tmp1362 * _tmp2129 + _tmp1363 * _tmp2131 +
        _tmp1378 * _tmp2053 + _tmp1379 * _tmp2124 + _tmp1398 * _tmp2108 + _tmp1404 * _tmp2132 +
        _tmp1409 * _tmp2075 + _tmp1414 * _tmp2118 + _tmp1421 * _tmp2138 + _tmp1422 * _tmp2095 +
        _tmp1427 * _tmp2084 + _tmp1435 * _tmp2036 + _tmp1441 * _tmp2052 + _tmp1446 * _tmp2064 +
        _tmp1452 * _tmp2100 + _tmp1461 * _tmp2125 + _tmp1463 * _tmp2140 + _tmp1469 * _tmp2080 +
        _tmp1477 * _tmp2101 + _tmp1478 * _tmp2060 + _tmp1480 * _tmp2070 + _tmp1481 * _tmp2143 +
        _tmp1484 * _tmp2130 + _tmp1487 * _tmp2066 + _tmp1488 * _tmp2090 + _tmp1490 * _tmp2035 +
        _tmp1496 * _tmp2027 + _tmp1498 * _tmp2079 + _tmp1499 * _tmp2139 + _tmp1504 * _tmp2085 +
        _tmp1505 * _tmp2144 + _tmp1508 * _tmp2137 + _tmp1515 * _tmp2141 + _tmp1516 * _tmp2065 +
        _tmp1517 * _tmp2133 + _tmp1518 * _tmp2040 + _tmp1519 * _tmp2031 + _tmp1525 * _tmp2106 +
        _tmp1527 * _tmp2102 + _tmp1533 * _tmp2123 + _tmp1534 * _tmp2134 + _tmp1535 * _tmp2113 +
        _tmp1536 * _tmp2048 + _tmp1539 * _tmp2094 + _tmp1540 * _tmp2136 + _tmp1541 * _tmp2112 +
        _tmp1542 * _tmp2135 + _tmp1544 * _tmp2111 + _tmp1545 * _tmp2110 + _tmp1547 * _tmp2054;
    hessian_value_ptr[31] = _tmp1446 * _tmp2155 + _tmp1540 * _tmp2157;
    hessian_value_ptr[32] = _tmp1404 * _tmp2164 + _tmp1488 * _tmp2162;
    hessian_value_ptr[33] = _tmp1515 * _tmp2169 + _tmp1518 * _tmp2170;
    hessian_value_ptr[34] = _tmp1414 * _tmp2178 + _tmp1499 * _tmp2175;
    hessian_value_ptr[35] = _tmp1421 * _tmp2184 + _tmp1478 * _tmp2185;
    hessian_value_ptr[36] = _tmp1461 * _tmp2189 + _tmp1539 * _tmp2190;
    hessian_value_ptr[37] = _tmp1469 * _tmp2196 + _tmp1498 * _tmp2195;
    hessian_value_ptr[38] = _tmp1435 * _tmp2203 + _tmp1519 * _tmp2202;
    hessian_value_ptr[39] = _tmp1362 * _tmp2207 + _tmp1363 * _tmp2209;
    hessian_value_ptr[40] = _tmp1409 * _tmp2215 + _tmp1422 * _tmp2213;
    hessian_value_ptr[41] = _tmp1441 * _tmp2219 + _tmp1534 * _tmp2220;
    hessian_value_ptr[42] = _tmp1355 * _tmp2227 + _tmp1379 * _tmp2226;
    hessian_value_ptr[43] = _tmp1525 * _tmp2233 + _tmp1545 * _tmp2231;
    hessian_value_ptr[44] = _tmp1504 * _tmp2239 + _tmp1536 * _tmp2238;
    hessian_value_ptr[45] = _tmp1452 * _tmp2243 + _tmp1463 * _tmp2244;
    hessian_value_ptr[46] = _tmp1533 * _tmp2251 + _tmp1542 * _tmp2250;
    hessian_value_ptr[47] = _tmp1427 * _tmp2256 + _tmp1535 * _tmp2257;
    hessian_value_ptr[48] = _tmp1349 * _tmp2263 + _tmp1490 * _tmp2264;
    hessian_value_ptr[49] = _tmp1496 * _tmp2270 + _tmp1547 * _tmp2268;
    hessian_value_ptr[50] = _tmp1477 * _tmp2276 + _tmp1480 * _tmp2277;
    hessian_value_ptr[51] = std::pow(_tmp1555, Scalar(2)) + std::pow(_tmp1559, Scalar(2)) +
                            std::pow(_tmp1563, Scalar(2)) + std::pow(_tmp1576, Scalar(2)) +
                            std::pow(_tmp1580, Scalar(2)) + std::pow(_tmp1582, Scalar(2)) +
                            std::pow(_tmp1584, Scalar(2)) + std::pow(_tmp1588, Scalar(2)) +
                            std::pow(_tmp1592, Scalar(2)) + std::pow(_tmp1596, Scalar(2)) +
                            std::pow(_tmp1597, Scalar(2)) + std::pow(_tmp1610, Scalar(2)) +
                            std::pow(_tmp1614, Scalar(2)) + std::pow(_tmp1615, Scalar(2)) +
                            std::pow(_tmp1619, Scalar(2)) + std::pow(_tmp1621, Scalar(2)) +
                            std::pow(_tmp1625, Scalar(2)) + std::pow(_tmp1629, Scalar(2)) +
                            std::pow(_tmp1630, Scalar(2)) + std::pow(_tmp1631, Scalar(2)) +
                            std::pow(_tmp1636, Scalar(2)) + std::pow(_tmp1637, Scalar(2)) +
                            std::pow(_tmp1641, Scalar(2)) + std::pow(_tmp1646, Scalar(2)) +
                            std::pow(_tmp1647, Scalar(2)) + std::pow(_tmp1648, Scalar(2)) +
                            std::pow(_tmp1652, Scalar(2)) + std::pow(_tmp1653, Scalar(2)) +
                            std::pow(_tmp1654, Scalar(2)) + std::pow(_tmp1655, Scalar(2)) +
                            std::pow(_tmp1659, Scalar(2)) + std::pow(_tmp1663, Scalar(2)) +
                            std::pow(_tmp1664, Scalar(2)) + std::pow(_tmp1665, Scalar(2)) +
                            std::pow(_tmp1669, Scalar(2)) + std::pow(_tmp1670, Scalar(2)) +
                            std::pow(_tmp1674, Scalar(2)) + std::pow(_tmp1675, Scalar(2)) +
                            std::pow(_tmp1676, Scalar(2)) + std::pow(_tmp1677, Scalar(2)) +
                            std::pow(_tmp1678, Scalar(2)) + std::pow(_tmp1679, Scalar(2)) +
                            std::pow(_tmp1680, Scalar(2)) + std::pow(_tmp1681, Scalar(2)) +
                            std::pow(_tmp1682, Scalar(2)) + std::pow(_tmp1683, Scalar(2)) +
                            std::pow(_tmp1685, Scalar(2)) + std::pow(_tmp1686, Scalar(2)) +
                            std::pow(_tmp1687, Scalar(2)) + std::pow(_tmp1692, Scalar(2)) +
                            std::pow(_tmp1693, Scalar(2)) + std::pow(_tmp1694, Scalar(2));
    hessian_value_ptr[52] =
        _tmp1555 * _tmp1878 + _tmp1559 * _tmp1832 + _tmp1563 * _tmp1710 + _tmp1576 * _tmp1890 +
        _tmp1580 * _tmp1870 + _tmp1582 * _tmp1802 + _tmp1584 * _tmp1833 + _tmp1588 * _tmp1860 +
        _tmp1592 * _tmp1805 + _tmp1596 * _tmp1892 + _tmp1597 * _tmp1773 + _tmp1610 * _tmp1792 +
        _tmp1614 * _tmp1703 + _tmp1615 * _tmp1815 + _tmp1619 * _tmp1757 + _tmp1621 * _tmp1748 +
        _tmp1625 * _tmp1869 + _tmp1629 * _tmp1765 + _tmp1630 * _tmp1803 + _tmp1631 * _tmp1836 +
        _tmp1636 * _tmp1789 + _tmp1637 * _tmp1814 + _tmp1641 * _tmp1737 + _tmp1646 * _tmp1718 +
        _tmp1647 * _tmp1895 + _tmp1648 * _tmp1791 + _tmp1652 * _tmp1835 + _tmp1653 * _tmp1849 +
        _tmp1654 * _tmp1719 + _tmp1655 * _tmp1801 + _tmp1659 * _tmp1839 + _tmp1663 * _tmp1838 +
        _tmp1664 * _tmp1746 + _tmp1665 * _tmp1893 + _tmp1669 * _tmp1894 + _tmp1670 * _tmp1824 +
        _tmp1674 * _tmp1831 + _tmp1675 * _tmp1891 + _tmp1676 * _tmp1888 + _tmp1677 * _tmp1727 +
        _tmp1678 * _tmp1877 + _tmp1679 * _tmp1837 + _tmp1680 * _tmp1782 + _tmp1681 * _tmp1747 +
        _tmp1682 * _tmp1728 + _tmp1683 * _tmp1879 + _tmp1685 * _tmp1756 + _tmp1686 * _tmp1800 +
        _tmp1687 * _tmp1729 + _tmp1692 * _tmp1887 + _tmp1693 * _tmp1858 + _tmp1694 * _tmp1889;
    hessian_value_ptr[53] =
        _tmp1555 * _tmp1935 + _tmp1559 * _tmp1973 + _tmp1563 * _tmp2014 + _tmp1576 * _tmp2017 +
        _tmp1580 * _tmp1939 + _tmp1582 * _tmp1972 + _tmp1584 * _tmp1997 + _tmp1588 * _tmp1916 +
        _tmp1592 * _tmp1988 + _tmp1596 * _tmp2002 + _tmp1597 * _tmp2004 + _tmp1610 * _tmp1990 +
        _tmp1614 * _tmp1951 + _tmp1615 * _tmp1966 + _tmp1619 * _tmp1962 + _tmp1621 * _tmp1923 +
        _tmp1625 * _tmp1907 + _tmp1629 * _tmp1929 + _tmp1630 * _tmp2006 + _tmp1631 * _tmp1989 +
        _tmp1636 * _tmp1971 + _tmp1637 * _tmp1899 + _tmp1641 * _tmp2019 + _tmp1646 * _tmp1911 +
        _tmp1647 * _tmp2022 + _tmp1648 * _tmp1955 + _tmp1652 * _tmp1903 + _tmp1653 * _tmp1984 +
        _tmp1654 * _tmp1922 + _tmp1655 * _tmp2021 + _tmp1659 * _tmp1978 + _tmp1663 * _tmp1994 +
        _tmp1664 * _tmp1963 + _tmp1665 * _tmp1964 + _tmp1669 * _tmp1921 + _tmp1670 * _tmp2018 +
        _tmp1674 * _tmp2003 + _tmp1675 * _tmp1912 + _tmp1676 * _tmp1995 + _tmp1677 * _tmp1965 +
        _tmp1678 * _tmp2007 + _tmp1679 * _tmp1961 + _tmp1680 * _tmp1996 + _tmp1681 * _tmp1947 +
        _tmp1682 * _tmp2016 + _tmp1683 * _tmp1983 + _tmp1685 * _tmp1943 + _tmp1686 * _tmp2023 +
        _tmp1687 * _tmp1952 + _tmp1692 * _tmp2015 + _tmp1693 * _tmp2005 + _tmp1694 * _tmp1982;
    hessian_value_ptr[54] =
        _tmp1555 * _tmp2140 + _tmp1559 * _tmp2131 + _tmp1563 * _tmp2101 + _tmp1576 * _tmp2143 +
        _tmp1580 * _tmp2027 + _tmp1582 * _tmp2112 + _tmp1584 * _tmp2137 + _tmp1588 * _tmp2134 +
        _tmp1592 * _tmp2136 + _tmp1596 * _tmp2113 + _tmp1597 * _tmp2064 + _tmp1610 * _tmp2102 +
        _tmp1614 * _tmp2040 + _tmp1615 * _tmp2111 + _tmp1619 * _tmp2079 + _tmp1621 * _tmp2065 +
        _tmp1625 * _tmp2035 + _tmp1629 * _tmp2125 + _tmp1630 * _tmp2141 + _tmp1631 * _tmp2130 +
        _tmp1636 * _tmp2123 + _tmp1637 * _tmp2129 + _tmp1641 * _tmp2110 + _tmp1646 * _tmp2085 +
        _tmp1647 * _tmp2144 + _tmp1648 * _tmp2108 + _tmp1652 * _tmp2044 + _tmp1653 * _tmp2052 +
        _tmp1654 * _tmp2066 + _tmp1655 * _tmp2094 + _tmp1659 * _tmp2036 + _tmp1663 * _tmp2060 +
        _tmp1664 * _tmp2124 + _tmp1665 * _tmp2142 + _tmp1669 * _tmp2118 + _tmp1670 * _tmp2100 +
        _tmp1674 * _tmp2132 + _tmp1675 * _tmp2048 + _tmp1676 * _tmp2133 + _tmp1677 * _tmp2054 +
        _tmp1678 * _tmp2139 + _tmp1679 * _tmp2090 + _tmp1680 * _tmp2138 + _tmp1681 * _tmp2106 +
        _tmp1682 * _tmp2070 + _tmp1683 * _tmp2135 + _tmp1685 * _tmp2080 + _tmp1686 * _tmp2031 +
        _tmp1687 * _tmp2053 + _tmp1692 * _tmp2095 + _tmp1693 * _tmp2084 + _tmp1694 * _tmp2075;
    hessian_value_ptr[55] = _tmp1592 * _tmp2157 + _tmp1597 * _tmp2155;
    hessian_value_ptr[56] = _tmp1674 * _tmp2164 + _tmp1679 * _tmp2162;
    hessian_value_ptr[57] = _tmp1614 * _tmp2170 + _tmp1630 * _tmp2169;
    hessian_value_ptr[58] = _tmp1669 * _tmp2178 + _tmp1678 * _tmp2175;
    hessian_value_ptr[59] = _tmp1663 * _tmp2185 + _tmp1680 * _tmp2184;
    hessian_value_ptr[60] = _tmp1629 * _tmp2189 + _tmp1655 * _tmp2190;
    hessian_value_ptr[61] = _tmp1619 * _tmp2195 + _tmp1685 * _tmp2196;
    hessian_value_ptr[62] = _tmp1659 * _tmp2203 + _tmp1686 * _tmp2202;
    hessian_value_ptr[63] = _tmp1559 * _tmp2209 + _tmp1637 * _tmp2207;
    hessian_value_ptr[64] = _tmp1692 * _tmp2213 + _tmp1694 * _tmp2215;
    hessian_value_ptr[65] = _tmp1588 * _tmp2220 + _tmp1653 * _tmp2219;
    hessian_value_ptr[66] = _tmp1652 * _tmp2227 + _tmp1664 * _tmp2226;
    hessian_value_ptr[67] = _tmp1641 * _tmp2231 + _tmp1681 * _tmp2233;
    hessian_value_ptr[68] = _tmp1646 * _tmp2239 + _tmp1675 * _tmp2238;
    hessian_value_ptr[69] = _tmp1555 * _tmp2244 + _tmp1670 * _tmp2243;
    hessian_value_ptr[70] = _tmp1636 * _tmp2251 + _tmp1683 * _tmp2250;
    hessian_value_ptr[71] = _tmp1596 * _tmp2257 + _tmp1693 * _tmp2256;
    hessian_value_ptr[72] = _tmp1625 * _tmp2264 + _tmp1665 * _tmp2263;
    hessian_value_ptr[73] = _tmp1580 * _tmp2270 + _tmp1677 * _tmp2268;
    hessian_value_ptr[74] = _tmp1563 * _tmp2276 + _tmp1682 * _tmp2277;
    hessian_value_ptr[75] = std::pow(_tmp1703, Scalar(2)) + std::pow(_tmp1710, Scalar(2)) +
                            std::pow(_tmp1718, Scalar(2)) + std::pow(_tmp1719, Scalar(2)) +
                            std::pow(_tmp1727, Scalar(2)) + std::pow(_tmp1728, Scalar(2)) +
                            std::pow(_tmp1729, Scalar(2)) + std::pow(_tmp1737, Scalar(2)) +
                            std::pow(_tmp1746, Scalar(2)) + std::pow(_tmp1747, Scalar(2)) +
                            std::pow(_tmp1748, Scalar(2)) + std::pow(_tmp1756, Scalar(2)) +
                            std::pow(_tmp1757, Scalar(2)) + std::pow(_tmp1765, Scalar(2)) +
                            std::pow(_tmp1773, Scalar(2)) + std::pow(_tmp1782, Scalar(2)) +
                            std::pow(_tmp1789, Scalar(2)) + std::pow(_tmp1791, Scalar(2)) +
                            std::pow(_tmp1792, Scalar(2)) + std::pow(_tmp1800, Scalar(2)) +
                            std::pow(_tmp1801, Scalar(2)) + std::pow(_tmp1802, Scalar(2)) +
                            std::pow(_tmp1803, Scalar(2)) + std::pow(_tmp1805, Scalar(2)) +
                            std::pow(_tmp1814, Scalar(2)) + std::pow(_tmp1815, Scalar(2)) +
                            std::pow(_tmp1824, Scalar(2)) + std::pow(_tmp1831, Scalar(2)) +
                            std::pow(_tmp1832, Scalar(2)) + std::pow(_tmp1833, Scalar(2)) +
                            std::pow(_tmp1835, Scalar(2)) + std::pow(_tmp1836, Scalar(2)) +
                            std::pow(_tmp1837, Scalar(2)) + std::pow(_tmp1838, Scalar(2)) +
                            std::pow(_tmp1839, Scalar(2)) + std::pow(_tmp1849, Scalar(2)) +
                            std::pow(_tmp1858, Scalar(2)) + std::pow(_tmp1860, Scalar(2)) +
                            std::pow(_tmp1869, Scalar(2)) + std::pow(_tmp1870, Scalar(2)) +
                            std::pow(_tmp1877, Scalar(2)) + std::pow(_tmp1878, Scalar(2)) +
                            std::pow(_tmp1879, Scalar(2)) + std::pow(_tmp1887, Scalar(2)) +
                            std::pow(_tmp1888, Scalar(2)) + std::pow(_tmp1889, Scalar(2)) +
                            std::pow(_tmp1890, Scalar(2)) + std::pow(_tmp1891, Scalar(2)) +
                            std::pow(_tmp1892, Scalar(2)) + std::pow(_tmp1893, Scalar(2)) +
                            std::pow(_tmp1894, Scalar(2)) + std::pow(_tmp1895, Scalar(2));
    hessian_value_ptr[76] =
        _tmp1703 * _tmp1951 + _tmp1710 * _tmp2014 + _tmp1718 * _tmp1911 + _tmp1719 * _tmp1922 +
        _tmp1727 * _tmp1965 + _tmp1728 * _tmp2016 + _tmp1729 * _tmp1952 + _tmp1737 * _tmp2019 +
        _tmp1746 * _tmp1963 + _tmp1747 * _tmp1947 + _tmp1748 * _tmp1923 + _tmp1756 * _tmp1943 +
        _tmp1757 * _tmp1962 + _tmp1765 * _tmp1929 + _tmp1773 * _tmp2004 + _tmp1782 * _tmp1996 +
        _tmp1789 * _tmp1971 + _tmp1791 * _tmp1955 + _tmp1792 * _tmp1990 + _tmp1800 * _tmp2023 +
        _tmp1801 * _tmp2021 + _tmp1802 * _tmp1972 + _tmp1803 * _tmp2006 + _tmp1805 * _tmp1988 +
        _tmp1814 * _tmp1899 + _tmp1815 * _tmp1966 + _tmp1824 * _tmp2018 + _tmp1831 * _tmp2003 +
        _tmp1832 * _tmp1973 + _tmp1833 * _tmp1997 + _tmp1835 * _tmp1903 + _tmp1836 * _tmp1989 +
        _tmp1837 * _tmp1961 + _tmp1838 * _tmp1994 + _tmp1839 * _tmp1978 + _tmp1849 * _tmp1984 +
        _tmp1858 * _tmp2005 + _tmp1860 * _tmp1916 + _tmp1869 * _tmp1907 + _tmp1870 * _tmp1939 +
        _tmp1877 * _tmp2007 + _tmp1878 * _tmp1935 + _tmp1879 * _tmp1983 + _tmp1887 * _tmp2015 +
        _tmp1888 * _tmp1995 + _tmp1889 * _tmp1982 + _tmp1890 * _tmp2017 + _tmp1891 * _tmp1912 +
        _tmp1892 * _tmp2002 + _tmp1893 * _tmp1964 + _tmp1894 * _tmp1921 + _tmp1895 * _tmp2022;
    hessian_value_ptr[77] =
        _tmp1703 * _tmp2040 + _tmp1710 * _tmp2101 + _tmp1718 * _tmp2085 + _tmp1719 * _tmp2066 +
        _tmp1727 * _tmp2054 + _tmp1728 * _tmp2070 + _tmp1729 * _tmp2053 + _tmp1737 * _tmp2110 +
        _tmp1746 * _tmp2124 + _tmp1747 * _tmp2106 + _tmp1748 * _tmp2065 + _tmp1756 * _tmp2080 +
        _tmp1757 * _tmp2079 + _tmp1765 * _tmp2125 + _tmp1773 * _tmp2064 + _tmp1782 * _tmp2138 +
        _tmp1789 * _tmp2123 + _tmp1791 * _tmp2108 + _tmp1792 * _tmp2102 + _tmp1800 * _tmp2031 +
        _tmp1801 * _tmp2094 + _tmp1802 * _tmp2112 + _tmp1803 * _tmp2141 + _tmp1805 * _tmp2136 +
        _tmp1814 * _tmp2129 + _tmp1815 * _tmp2111 + _tmp1824 * _tmp2100 + _tmp1831 * _tmp2132 +
        _tmp1832 * _tmp2131 + _tmp1833 * _tmp2137 + _tmp1835 * _tmp2044 + _tmp1836 * _tmp2130 +
        _tmp1837 * _tmp2090 + _tmp1838 * _tmp2060 + _tmp1839 * _tmp2036 + _tmp1849 * _tmp2052 +
        _tmp1858 * _tmp2084 + _tmp1860 * _tmp2134 + _tmp1869 * _tmp2035 + _tmp1870 * _tmp2027 +
        _tmp1877 * _tmp2139 + _tmp1878 * _tmp2140 + _tmp1879 * _tmp2135 + _tmp1887 * _tmp2095 +
        _tmp1888 * _tmp2133 + _tmp1889 * _tmp2075 + _tmp1890 * _tmp2143 + _tmp1891 * _tmp2048 +
        _tmp1892 * _tmp2113 + _tmp1893 * _tmp2142 + _tmp1894 * _tmp2118 + _tmp1895 * _tmp2144;
    hessian_value_ptr[78] = _tmp1773 * _tmp2155 + _tmp1805 * _tmp2157;
    hessian_value_ptr[79] = _tmp1831 * _tmp2164 + _tmp1837 * _tmp2162;
    hessian_value_ptr[80] = _tmp1703 * _tmp2170 + _tmp1803 * _tmp2169;
    hessian_value_ptr[81] = _tmp1877 * _tmp2175 + _tmp1894 * _tmp2178;
    hessian_value_ptr[82] = _tmp1782 * _tmp2184 + _tmp1838 * _tmp2185;
    hessian_value_ptr[83] = _tmp1765 * _tmp2189 + _tmp1801 * _tmp2190;
    hessian_value_ptr[84] = _tmp1756 * _tmp2196 + _tmp1757 * _tmp2195;
    hessian_value_ptr[85] = _tmp1800 * _tmp2202 + _tmp1839 * _tmp2203;
    hessian_value_ptr[86] = _tmp1814 * _tmp2207 + _tmp1832 * _tmp2209;
    hessian_value_ptr[87] = _tmp1887 * _tmp2213 + _tmp1889 * _tmp2215;
    hessian_value_ptr[88] = _tmp1849 * _tmp2219 + _tmp1860 * _tmp2220;
    hessian_value_ptr[89] = _tmp1746 * _tmp2226 + _tmp1835 * _tmp2227;
    hessian_value_ptr[90] = _tmp1737 * _tmp2231 + _tmp1747 * _tmp2233;
    hessian_value_ptr[91] = _tmp1718 * _tmp2239 + _tmp1891 * _tmp2238;
    hessian_value_ptr[92] = _tmp1824 * _tmp2243 + _tmp1878 * _tmp2244;
    hessian_value_ptr[93] = _tmp1789 * _tmp2251 + _tmp1879 * _tmp2250;
    hessian_value_ptr[94] = _tmp1858 * _tmp2256 + _tmp1892 * _tmp2257;
    hessian_value_ptr[95] = _tmp1869 * _tmp2264 + _tmp1893 * _tmp2263;
    hessian_value_ptr[96] = _tmp1727 * _tmp2268 + _tmp1870 * _tmp2270;
    hessian_value_ptr[97] = _tmp1710 * _tmp2276 + _tmp1728 * _tmp2277;
    hessian_value_ptr[98] = std::pow(_tmp1899, Scalar(2)) + std::pow(_tmp1903, Scalar(2)) +
                            std::pow(_tmp1907, Scalar(2)) + std::pow(_tmp1911, Scalar(2)) +
                            std::pow(_tmp1912, Scalar(2)) + std::pow(_tmp1916, Scalar(2)) +
                            std::pow(_tmp1921, Scalar(2)) + std::pow(_tmp1922, Scalar(2)) +
                            std::pow(_tmp1923, Scalar(2)) + std::pow(_tmp1929, Scalar(2)) +
                            std::pow(_tmp1935, Scalar(2)) + std::pow(_tmp1939, Scalar(2)) +
                            std::pow(_tmp1943, Scalar(2)) + std::pow(_tmp1947, Scalar(2)) +
                            std::pow(_tmp1951, Scalar(2)) + std::pow(_tmp1952, Scalar(2)) +
                            std::pow(_tmp1955, Scalar(2)) + std::pow(_tmp1961, Scalar(2)) +
                            std::pow(_tmp1962, Scalar(2)) + std::pow(_tmp1963, Scalar(2)) +
                            std::pow(_tmp1964, Scalar(2)) + std::pow(_tmp1965, Scalar(2)) +
                            std::pow(_tmp1966, Scalar(2)) + std::pow(_tmp1971, Scalar(2)) +
                            std::pow(_tmp1972, Scalar(2)) + std::pow(_tmp1973, Scalar(2)) +
                            std::pow(_tmp1978, Scalar(2)) + std::pow(_tmp1982, Scalar(2)) +
                            std::pow(_tmp1983, Scalar(2)) + std::pow(_tmp1984, Scalar(2)) +
                            std::pow(_tmp1988, Scalar(2)) + std::pow(_tmp1989, Scalar(2)) +
                            std::pow(_tmp1990, Scalar(2)) + std::pow(_tmp1994, Scalar(2)) +
                            std::pow(_tmp1995, Scalar(2)) + std::pow(_tmp1996, Scalar(2)) +
                            std::pow(_tmp1997, Scalar(2)) + std::pow(_tmp2002, Scalar(2)) +
                            std::pow(_tmp2003, Scalar(2)) + std::pow(_tmp2004, Scalar(2)) +
                            std::pow(_tmp2005, Scalar(2)) + std::pow(_tmp2006, Scalar(2)) +
                            std::pow(_tmp2007, Scalar(2)) + std::pow(_tmp2014, Scalar(2)) +
                            std::pow(_tmp2015, Scalar(2)) + std::pow(_tmp2016, Scalar(2)) +
                            std::pow(_tmp2017, Scalar(2)) + std::pow(_tmp2018, Scalar(2)) +
                            std::pow(_tmp2019, Scalar(2)) + std::pow(_tmp2021, Scalar(2)) +
                            std::pow(_tmp2022, Scalar(2)) + std::pow(_tmp2023, Scalar(2));
    hessian_value_ptr[99] =
        _tmp1899 * _tmp2129 + _tmp1903 * _tmp2044 + _tmp1907 * _tmp2035 + _tmp1911 * _tmp2085 +
        _tmp1912 * _tmp2048 + _tmp1916 * _tmp2134 + _tmp1921 * _tmp2118 + _tmp1922 * _tmp2066 +
        _tmp1923 * _tmp2065 + _tmp1929 * _tmp2125 + _tmp1935 * _tmp2140 + _tmp1939 * _tmp2027 +
        _tmp1943 * _tmp2080 + _tmp1947 * _tmp2106 + _tmp1951 * _tmp2040 + _tmp1952 * _tmp2053 +
        _tmp1955 * _tmp2108 + _tmp1961 * _tmp2090 + _tmp1962 * _tmp2079 + _tmp1963 * _tmp2124 +
        _tmp1964 * _tmp2142 + _tmp1965 * _tmp2054 + _tmp1966 * _tmp2111 + _tmp1971 * _tmp2123 +
        _tmp1972 * _tmp2112 + _tmp1973 * _tmp2131 + _tmp1978 * _tmp2036 + _tmp1982 * _tmp2075 +
        _tmp1983 * _tmp2135 + _tmp1984 * _tmp2052 + _tmp1988 * _tmp2136 + _tmp1989 * _tmp2130 +
        _tmp1990 * _tmp2102 + _tmp1994 * _tmp2060 + _tmp1995 * _tmp2133 + _tmp1996 * _tmp2138 +
        _tmp1997 * _tmp2137 + _tmp2002 * _tmp2113 + _tmp2003 * _tmp2132 + _tmp2004 * _tmp2064 +
        _tmp2005 * _tmp2084 + _tmp2006 * _tmp2141 + _tmp2007 * _tmp2139 + _tmp2014 * _tmp2101 +
        _tmp2015 * _tmp2095 + _tmp2016 * _tmp2070 + _tmp2017 * _tmp2143 + _tmp2018 * _tmp2100 +
        _tmp2019 * _tmp2110 + _tmp2021 * _tmp2094 + _tmp2022 * _tmp2144 + _tmp2023 * _tmp2031;
    hessian_value_ptr[100] = _tmp1988 * _tmp2157 + _tmp2004 * _tmp2155;
    hessian_value_ptr[101] = _tmp1961 * _tmp2162 + _tmp2003 * _tmp2164;
    hessian_value_ptr[102] = _tmp1951 * _tmp2170 + _tmp2006 * _tmp2169;
    hessian_value_ptr[103] = _tmp1921 * _tmp2178 + _tmp2007 * _tmp2175;
    hessian_value_ptr[104] = _tmp1994 * _tmp2185 + _tmp1996 * _tmp2184;
    hessian_value_ptr[105] = _tmp1929 * _tmp2189 + _tmp2021 * _tmp2190;
    hessian_value_ptr[106] = _tmp1943 * _tmp2196 + _tmp1962 * _tmp2195;
    hessian_value_ptr[107] = _tmp1978 * _tmp2203 + _tmp2023 * _tmp2202;
    hessian_value_ptr[108] = _tmp1899 * _tmp2207 + _tmp1973 * _tmp2209;
    hessian_value_ptr[109] = _tmp1982 * _tmp2215 + _tmp2015 * _tmp2213;
    hessian_value_ptr[110] = _tmp1916 * _tmp2220 + _tmp1984 * _tmp2219;
    hessian_value_ptr[111] = _tmp1903 * _tmp2227 + _tmp1963 * _tmp2226;
    hessian_value_ptr[112] = _tmp1947 * _tmp2233 + _tmp2019 * _tmp2231;
    hessian_value_ptr[113] = _tmp1911 * _tmp2239 + _tmp1912 * _tmp2238;
    hessian_value_ptr[114] = _tmp1935 * _tmp2244 + _tmp2018 * _tmp2243;
    hessian_value_ptr[115] = _tmp1971 * _tmp2251 + _tmp1983 * _tmp2250;
    hessian_value_ptr[116] = _tmp2002 * _tmp2257 + _tmp2005 * _tmp2256;
    hessian_value_ptr[117] = _tmp1907 * _tmp2264 + _tmp1964 * _tmp2263;
    hessian_value_ptr[118] = _tmp1939 * _tmp2270 + _tmp1965 * _tmp2268;
    hessian_value_ptr[119] = _tmp2014 * _tmp2276 + _tmp2016 * _tmp2277;
    hessian_value_ptr[120] = std::pow(_tmp2027, Scalar(2)) + std::pow(_tmp2031, Scalar(2)) +
                             std::pow(_tmp2035, Scalar(2)) + std::pow(_tmp2036, Scalar(2)) +
                             std::pow(_tmp2040, Scalar(2)) + std::pow(_tmp2044, Scalar(2)) +
                             std::pow(_tmp2048, Scalar(2)) + std::pow(_tmp2052, Scalar(2)) +
                             std::pow(_tmp2053, Scalar(2)) + std::pow(_tmp2054, Scalar(2)) +
                             std::pow(_tmp2060, Scalar(2)) + std::pow(_tmp2064, Scalar(2)) +
                             std::pow(_tmp2065, Scalar(2)) + std::pow(_tmp2066, Scalar(2)) +
                             std::pow(_tmp2070, Scalar(2)) + std::pow(_tmp2075, Scalar(2)) +
                             std::pow(_tmp2079, Scalar(2)) + std::pow(_tmp2080, Scalar(2)) +
                             std::pow(_tmp2084, Scalar(2)) + std::pow(_tmp2085, Scalar(2)) +
                             std::pow(_tmp2090, Scalar(2)) + std::pow(_tmp2094, Scalar(2)) +
                             std::pow(_tmp2095, Scalar(2)) + std::pow(_tmp2100, Scalar(2)) +
                             std::pow(_tmp2101, Scalar(2)) + std::pow(_tmp2102, Scalar(2)) +
                             std::pow(_tmp2106, Scalar(2)) + std::pow(_tmp2108, Scalar(2)) +
                             std::pow(_tmp2110, Scalar(2)) + std::pow(_tmp2111, Scalar(2)) +
                             std::pow(_tmp2112, Scalar(2)) + std::pow(_tmp2113, Scalar(2)) +
                             std::pow(_tmp2118, Scalar(2)) + std::pow(_tmp2123, Scalar(2)) +
                             std::pow(_tmp2124, Scalar(2)) + std::pow(_tmp2125, Scalar(2)) +
                             std::pow(_tmp2129, Scalar(2)) + std::pow(_tmp2130, Scalar(2)) +
                             std::pow(_tmp2131, Scalar(2)) + std::pow(_tmp2132, Scalar(2)) +
                             std::pow(_tmp2133, Scalar(2)) + std::pow(_tmp2134, Scalar(2)) +
                             std::pow(_tmp2135, Scalar(2)) + std::pow(_tmp2136, Scalar(2)) +
                             std::pow(_tmp2137, Scalar(2)) + std::pow(_tmp2138, Scalar(2)) +
                             std::pow(_tmp2139, Scalar(2)) + std::pow(_tmp2140, Scalar(2)) +
                             std::pow(_tmp2141, Scalar(2)) + std::pow(_tmp2142, Scalar(2)) +
                             std::pow(_tmp2143, Scalar(2)) + std::pow(_tmp2144, Scalar(2));
    hessian_value_ptr[121] = _tmp2064 * _tmp2155 + _tmp2136 * _tmp2157;
    hessian_value_ptr[122] = _tmp2090 * _tmp2162 + _tmp2132 * _tmp2164;
    hessian_value_ptr[123] = _tmp2040 * _tmp2170 + _tmp2141 * _tmp2169;
    hessian_value_ptr[124] = _tmp2118 * _tmp2178 + _tmp2139 * _tmp2175;
    hessian_value_ptr[125] = _tmp2060 * _tmp2185 + _tmp2138 * _tmp2184;
    hessian_value_ptr[126] = _tmp2094 * _tmp2190 + _tmp2125 * _tmp2189;
    hessian_value_ptr[127] = _tmp2079 * _tmp2195 + _tmp2080 * _tmp2196;
    hessian_value_ptr[128] = _tmp2031 * _tmp2202 + _tmp2036 * _tmp2203;
    hessian_value_ptr[129] = _tmp2129 * _tmp2207 + _tmp2131 * _tmp2209;
    hessian_value_ptr[130] = _tmp2075 * _tmp2215 + _tmp2095 * _tmp2213;
    hessian_value_ptr[131] = _tmp2052 * _tmp2219 + _tmp2134 * _tmp2220;
    hessian_value_ptr[132] = _tmp2044 * _tmp2227 + _tmp2124 * _tmp2226;
    hessian_value_ptr[133] = _tmp2106 * _tmp2233 + _tmp2110 * _tmp2231;
    hessian_value_ptr[134] = _tmp2048 * _tmp2238 + _tmp2085 * _tmp2239;
    hessian_value_ptr[135] = _tmp2100 * _tmp2243 + _tmp2140 * _tmp2244;
    hessian_value_ptr[136] = _tmp2123 * _tmp2251 + _tmp2135 * _tmp2250;
    hessian_value_ptr[137] = _tmp2084 * _tmp2256 + _tmp2113 * _tmp2257;
    hessian_value_ptr[138] = _tmp2035 * _tmp2264 + _tmp2142 * _tmp2263;
    hessian_value_ptr[139] = _tmp2027 * _tmp2270 + _tmp2054 * _tmp2268;
    hessian_value_ptr[140] = _tmp2070 * _tmp2277 + _tmp2101 * _tmp2276;
    hessian_value_ptr[141] =
        std::pow(_tmp2155, Scalar(2)) + _tmp2156 + std::pow(_tmp2157, Scalar(2));
    hessian_value_ptr[142] =
        _tmp2158 + std::pow(_tmp2162, Scalar(2)) + std::pow(_tmp2164, Scalar(2));
    hessian_value_ptr[143] =
        _tmp2165 + std::pow(_tmp2169, Scalar(2)) + std::pow(_tmp2170, Scalar(2));
    hessian_value_ptr[144] =
        std::pow(_tmp2175, Scalar(2)) + _tmp2176 + std::pow(_tmp2178, Scalar(2));
    hessian_value_ptr[145] =
        _tmp2179 + std::pow(_tmp2184, Scalar(2)) + std::pow(_tmp2185, Scalar(2));
    hessian_value_ptr[146] =
        std::pow(_tmp2189, Scalar(2)) + std::pow(_tmp2190, Scalar(2)) + _tmp2191;
    hessian_value_ptr[147] =
        std::pow(_tmp2195, Scalar(2)) + std::pow(_tmp2196, Scalar(2)) + _tmp2197;
    hessian_value_ptr[148] =
        _tmp2198 + std::pow(_tmp2202, Scalar(2)) + std::pow(_tmp2203, Scalar(2));
    hessian_value_ptr[149] =
        std::pow(_tmp2207, Scalar(2)) + _tmp2208 + std::pow(_tmp2209, Scalar(2));
    hessian_value_ptr[150] =
        std::pow(_tmp2213, Scalar(2)) + _tmp2214 + std::pow(_tmp2215, Scalar(2));
    hessian_value_ptr[151] =
        std::pow(_tmp2219, Scalar(2)) + std::pow(_tmp2220, Scalar(2)) + _tmp2221;
    hessian_value_ptr[152] =
        _tmp2222 + std::pow(_tmp2226, Scalar(2)) + std::pow(_tmp2227, Scalar(2));
    hessian_value_ptr[153] =
        std::pow(_tmp2231, Scalar(2)) + _tmp2232 + std::pow(_tmp2233, Scalar(2));
    hessian_value_ptr[154] =
        _tmp2234 + std::pow(_tmp2238, Scalar(2)) + std::pow(_tmp2239, Scalar(2));
    hessian_value_ptr[155] =
        std::pow(_tmp2243, Scalar(2)) + std::pow(_tmp2244, Scalar(2)) + _tmp2245;
    hessian_value_ptr[156] =
        _tmp2246 + std::pow(_tmp2250, Scalar(2)) + std::pow(_tmp2251, Scalar(2));
    hessian_value_ptr[157] =
        _tmp2252 + std::pow(_tmp2256, Scalar(2)) + std::pow(_tmp2257, Scalar(2));
    hessian_value_ptr[158] =
        _tmp2258 + std::pow(_tmp2263, Scalar(2)) + std::pow(_tmp2264, Scalar(2));
    hessian_value_ptr[159] =
        std::pow(_tmp2268, Scalar(2)) + _tmp2269 + std::pow(_tmp2270, Scalar(2));
    hessian_value_ptr[160] =
        _tmp2271 + std::pow(_tmp2276, Scalar(2)) + std::pow(_tmp2277, Scalar(2));
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace bundle_adjustment_fixed_size
