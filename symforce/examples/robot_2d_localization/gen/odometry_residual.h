// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose2.h>

namespace sym {

/**
 * Residual from the scalar distance between two poses.
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 1, 1> OdometryResidual(const sym::Pose2<Scalar>& pose_a,
                                             const sym::Pose2<Scalar>& pose_b, const Scalar dist,
                                             const Scalar epsilon) {
  // Total ops: 8

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _pose_a = pose_a.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _pose_b = pose_b.Data();

  // Intermediate terms (0)

  // Output terms (1)
  Eigen::Matrix<Scalar, 1, 1> _res;

  _res(0, 0) =
      -dist + std::sqrt(Scalar(epsilon + std::pow(Scalar(-_pose_a[2] + _pose_b[2]), Scalar(2)) +
                               std::pow(Scalar(-_pose_a[3] + _pose_b[3]), Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
