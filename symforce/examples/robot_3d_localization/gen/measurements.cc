// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     measurements.cc.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

/**
 * Problem parameters for the robot_3d_localization problem
 *
 * Autogenerated from the Python version, so that the problem is identical between all
 * implementations
 */

#include <vector>

#include <Eigen/Dense>

#include <sym/pose3.h>
#include <sym/util/typedefs.h>

namespace robot_3d_localization {

// Measurement values for matching factors.
extern const std::vector<std::vector<Eigen::Vector3d>> body_t_landmark_measurements{
    {Eigen::Vector3d(3.781564790978, 9.442631088639, 7.356078978665),
     Eigen::Vector3d(6.140388498617, 1.556603800513, 1.716409568943),
     Eigen::Vector3d(0.318861611273, 8.743951708187, 6.019854824256),
     Eigen::Vector3d(7.050825042914, 0.215021020612, 9.500341630160),
     Eigen::Vector3d(8.302459219220, 2.159102363934, 1.966039076545),
     Eigen::Vector3d(1.782218076707, 2.961573069306, 5.197388611964),
     Eigen::Vector3d(4.410990398191, 2.945166512946, 6.065552926847),
     Eigen::Vector3d(1.446265349832, 2.931154240287, 3.760482931990),
     Eigen::Vector3d(4.490494532783, 7.818993399270, 1.957527006270),
     Eigen::Vector3d(4.995992889323, 5.953757716327, 0.490609654418),
     Eigen::Vector3d(6.075959864679, 1.681782523535, 0.508978855648),
     Eigen::Vector3d(9.446790840257, 9.622048879093, 8.003745754242),
     Eigen::Vector3d(3.030009120567, 1.017126225745, 7.030948855243),
     Eigen::Vector3d(4.418982718679, 1.246137387520, 4.944324509536),
     Eigen::Vector3d(0.152008089622, 9.090552633243, 2.593822836994),
     Eigen::Vector3d(6.871547054788, 3.097874664416, 5.230834946011),
     Eigen::Vector3d(5.463631616462, 1.731676751493, 9.810128559097),
     Eigen::Vector3d(7.826521536880, 9.474092610346, 8.857334758797),
     Eigen::Vector3d(6.119279219204, 9.078557243952, 0.943610729899),
     Eigen::Vector3d(2.178874186772, 0.353219256592, 3.196673534672)},
    {Eigen::Vector3d(-1.020438133344, 5.030382128583, 6.904285666191),
     Eigen::Vector3d(2.269072602039, 0.240256098692, -1.145570559859),
     Eigen::Vector3d(-3.623816465400, 2.792610257972, 6.516360127943),
     Eigen::Vector3d(7.166045580698, -0.577511401922, 5.309844341274),
     Eigen::Vector3d(3.865781402372, 2.280161662179, -1.669536979994),
     Eigen::Vector3d(-0.041405810707, -1.100402882455, 3.932795954520),
     Eigen::Vector3d(2.117892718590, 0.028379063572, 3.894457212439),
     Eigen::Vector3d(-0.965720078168, -1.348872186897, 2.555163134419),
     Eigen::Vector3d(-1.886269040001, 4.598879875900, 1.532972802421),
     Eigen::Vector3d(-1.119319892877, 3.645186126621, -0.584476001891),
     Eigen::Vector3d(1.753481347080, 0.642631641807, -2.097294467474),
     Eigen::Vector3d(3.612791230055, 8.618384185955, 5.952562110413),
     Eigen::Vector3d(2.667262785483, -2.156481386670, 4.395796392136),
     Eigen::Vector3d(2.860272219353, -1.106656240721, 2.184908200164),
     Eigen::Vector3d(-5.458955134998, 2.997377943277, 3.690751503803),
     Eigen::Vector3d(3.519144942175, 1.761552961224, 2.448816347705),
     Eigen::Vector3d(5.151413108748, -0.125978569494, 6.384830432261),
     Eigen::Vector3d(2.996058179598, 7.281205019525, 7.185756351126),
     Eigen::Vector3d(-2.020519607959, 6.632769415812, 0.446071099709),
     Eigen::Vector3d(0.580813204069, -2.967188556969, 1.237217903571)},
    {Eigen::Vector3d(-0.293307451077, -0.833536724972, 6.450821185320),
     Eigen::Vector3d(1.281022657258, -2.013700351777, -3.505970437289),
     Eigen::Vector3d(-1.028204755429, -4.049244523148, 6.029302638387),
     Eigen::Vector3d(8.221454380226, -0.407762524893, 0.687361816507),
     Eigen::Vector3d(1.372047747411, 0.423873762297, -3.508935411224),
     Eigen::Vector3d(2.426836585093, -5.060037703895, 1.365833645105),
     Eigen::Vector3d(3.445343455195, -2.485424221615, 1.176026743057),
     Eigen::Vector3d(1.567285921530, -5.521722380031, 0.579715681371),
     Eigen::Vector3d(-2.788030478385, -1.111336649875, 1.530138117474),
     Eigen::Vector3d(-2.560459576715, -1.564126370947, -0.960890951669),
     Eigen::Vector3d(0.397290373587, -2.013496148896, -3.692134288030),
     Eigen::Vector3d(0.869219127549, 4.888726338089, 5.022545272512),
     Eigen::Vector3d(4.989177854346, -4.175560692336, 0.757525207461),
     Eigen::Vector3d(3.573143760975, -3.256793415601, -0.738245166940),
     Eigen::Vector3d(-3.943759003020, -4.586909719592, 4.196459378646),
     Eigen::Vector3d(2.843902860675, -0.223997836689, -0.062145770182),
     Eigen::Vector3d(6.678770889594, -1.342781052552, 2.362981001179),
     Eigen::Vector3d(1.704177355170, 3.145848402609, 6.158917352326),
     Eigen::Vector3d(-4.359532200338, 0.549767659029, 1.129665887772),
     Eigen::Vector3d(2.575321860763, -5.989480715092, -1.700777891526)},
    {Eigen::Vector3d(3.720645843603, -2.461138546884, 3.435351817600),
     Eigen::Vector3d(1.220421505712, -1.899556515065, -6.100972050234),
     Eigen::Vector3d(4.331860776684, -5.768904831554, 2.593563287063),
     Eigen::Vector3d(7.267404508718, 3.055225909893, -4.010705297657),
     Eigen::Vector3d(-0.176587170102, -0.075267535153, -6.072752130167),
     Eigen::Vector3d(5.375611534460, -4.141921319930, -3.150610428403),
     Eigen::Vector3d(5.096231153955, -1.680917814971, -2.994644710489),
     Eigen::Vector3d(4.549285912635, -5.101989646220, -3.913469207424),
     Eigen::Vector3d(-0.176817058631, -4.129734196064, -0.326576523551),
     Eigen::Vector3d(-0.955572266228, -4.049480158686, -2.716573332777),
     Eigen::Vector3d(0.336964795066, -2.540451722471, -6.449655941134),
     Eigen::Vector3d(1.217337690390, 2.935576169833, 3.494213426731),
     Eigen::Vector3d(7.110857457232, -2.163326076591, -4.324880745358),
     Eigen::Vector3d(4.723954577735, -1.736915229672, -5.039554963604),
     Eigen::Vector3d(1.792265527876, -7.710594106980, 1.377345199821),
     Eigen::Vector3d(3.062539121870, -0.003036125559, -3.380283130024),
     Eigen::Vector3d(7.598017145682, 1.391707572497, -2.409593658242),
     Eigen::Vector3d(2.861971988900, 1.665646960764, 3.809204429648),
     Eigen::Vector3d(-2.329526006218, -3.613055244089, 0.441023677212),
     Eigen::Vector3d(4.920335152171, -4.437862629367, -6.274963071866)},
    {Eigen::Vector3d(4.585250938938, 0.025285730306, 0.220462162716),
     Eigen::Vector3d(-1.484453825913, -0.308759581577, -7.654494478070),
     Eigen::Vector3d(6.540073314119, -1.934727861501, -1.921579063729),
     Eigen::Vector3d(1.335289531702, 7.268229079620, -6.219512104552),
     Eigen::Vector3d(-3.340862636858, 0.582436907126, -6.428684090991),
     Eigen::Vector3d(4.240454560083, 0.210585478628, -6.909175824398),
     Eigen::Vector3d(2.460432961565, 2.153762025071, -5.726073712792),
     Eigen::Vector3d(3.645726277441, -1.103602935676, -7.596629391707),
     Eigen::Vector3d(0.884109260716, -3.325052457752, -2.395383768956),
     Eigen::Vector3d(-0.724274702554, -3.540352332488, -4.486118983159),
     Eigen::Vector3d(-2.063693276447, -1.212257203894, -7.921231649076),
     Eigen::Vector3d(0.101157667365, 2.940622355365, 2.540343217401),
     Eigen::Vector3d(3.420876168571, 2.987961267429, -7.892203537240),
     Eigen::Vector3d(1.264579114104, 1.799109697668, -7.628311489664),
     Eigen::Vector3d(4.983378904198, -4.849256016266, -2.592992604669),
     Eigen::Vector3d(-0.053999467181, 2.168625706852, -5.171195459936),
     Eigen::Vector3d(3.001690337059, 5.863533825342, -5.270352751375),
     Eigen::Vector3d(1.858998820661, 3.081142008540, 2.158183030799),
     Eigen::Vector3d(-0.670737039619, -4.125168436658, -1.034140179942),
     Eigen::Vector3d(2.447896931702, -0.147252770897, -9.630632141726)}};

// Measurement values for odometry factors.
extern const std::vector<sym::Pose3d> odometry_relative_pose_measurements{
    sym::Pose3d((sym::Vector7d() << -0.135012156283, -0.202229668943, -0.308959504253,
                 0.919466640714, 3.929209821594, 2.849876607288, 1.357492685556)
                    .finished()),
    sym::Pose3d((sym::Vector7d() << -0.089635293801, -0.208309881958, -0.306211617005,
                 0.924557706579, 1.637439749561, 3.808015692837, 1.411819397243)
                    .finished()),
    sym::Pose3d((sym::Vector7d() << -0.121065120493, -0.195548545328, -0.288601088278,
                 0.929415630848, -0.126726687045, 1.989101258599, 1.576368816241)
                    .finished()),
    sym::Pose3d((sym::Vector7d() << -0.136045422018, -0.212904017082, -0.276325513831,
                 0.927258180371, 0.456461941081, -0.325941788874, 1.638963638054)
                    .finished())};

// Landmark positions.
extern const std::vector<Eigen::Vector3d> landmark_positions{
    Eigen::Vector3d(3.745401188474, 9.507143064099, 7.319939418114),
    Eigen::Vector3d(5.986584841970, 1.560186404424, 1.559945203362),
    Eigen::Vector3d(0.580836121682, 8.661761457749, 6.011150117432),
    Eigen::Vector3d(7.080725777960, 0.205844942958, 9.699098521620),
    Eigen::Vector3d(8.324426408004, 2.123391106783, 1.818249672071),
    Eigen::Vector3d(1.834045098534, 3.042422429595, 5.247564316322),
    Eigen::Vector3d(4.319450186421, 2.912291401980, 6.118528947224),
    Eigen::Vector3d(1.394938606520, 2.921446485352, 3.663618432937),
    Eigen::Vector3d(4.560699842170, 7.851759613930, 1.996737821584),
    Eigen::Vector3d(5.142344384136, 5.924145688620, 0.464504127200),
    Eigen::Vector3d(6.075448519014, 1.705241236873, 0.650515929853),
    Eigen::Vector3d(9.488855372533, 9.656320330746, 8.083973481165),
    Eigen::Vector3d(3.046137691734, 0.976721140064, 6.842330265122),
    Eigen::Vector3d(4.401524937396, 1.220382348448, 4.951769101113),
    Eigen::Vector3d(0.343885211152, 9.093204020788, 2.587799816000),
    Eigen::Vector3d(6.625222843540, 3.117110760894, 5.200680211778),
    Eigen::Vector3d(5.467102793433, 1.848544555255, 9.695846277646),
    Eigen::Vector3d(7.751328233611, 9.394989415642, 8.948273504276),
    Eigen::Vector3d(5.978999788111, 9.218742350231, 0.884925020519),
    Eigen::Vector3d(1.959828624191, 0.452272889105, 3.253303307633)};

}  // namespace robot_3d_localization
