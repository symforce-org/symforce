// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>
#include <Eigen/Sparse>

namespace codegen_sparse_matrix_test {

/**
 * This function was autogenerated. Do not modify by hand.
 *
 * Args:
 *     matrix_in: Matrix100_100
 *
 * Outputs:
 *     matrix_out: Matrix100_100
 */
template <typename Scalar>
Eigen::SparseMatrix<Scalar> GetDiagonalSparse(const Eigen::Matrix<Scalar, 100, 100>& matrix_in) {
  // Total ops: 0

  // Input arrays

  // Intermediate terms (0)

  // Output terms (1)
  static constexpr int kRows_matrix_out = 100;
  static constexpr int kCols_matrix_out = 100;
  static constexpr int kNumNonZero_matrix_out = 100;
  static constexpr int kColPtrs_matrix_out[] = {
      0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
      21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
      42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
      63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
      84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100};
  static constexpr int kRowIndices_matrix_out[] = {
      0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
      20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
      40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
      60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
      80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99};
  Scalar matrix_out_empty_value_ptr[100];
  Eigen::SparseMatrix<Scalar> matrix_out = Eigen::Map<const Eigen::SparseMatrix<Scalar>>(
      kRows_matrix_out, kCols_matrix_out, kNumNonZero_matrix_out, kColPtrs_matrix_out,
      kRowIndices_matrix_out, matrix_out_empty_value_ptr);
  Scalar* matrix_out_value_ptr = matrix_out.valuePtr();

  matrix_out_value_ptr[0] = matrix_in(0, 0);
  matrix_out_value_ptr[1] = matrix_in(1, 1);
  matrix_out_value_ptr[2] = matrix_in(2, 2);
  matrix_out_value_ptr[3] = matrix_in(3, 3);
  matrix_out_value_ptr[4] = matrix_in(4, 4);
  matrix_out_value_ptr[5] = matrix_in(5, 5);
  matrix_out_value_ptr[6] = matrix_in(6, 6);
  matrix_out_value_ptr[7] = matrix_in(7, 7);
  matrix_out_value_ptr[8] = matrix_in(8, 8);
  matrix_out_value_ptr[9] = matrix_in(9, 9);
  matrix_out_value_ptr[10] = matrix_in(10, 10);
  matrix_out_value_ptr[11] = matrix_in(11, 11);
  matrix_out_value_ptr[12] = matrix_in(12, 12);
  matrix_out_value_ptr[13] = matrix_in(13, 13);
  matrix_out_value_ptr[14] = matrix_in(14, 14);
  matrix_out_value_ptr[15] = matrix_in(15, 15);
  matrix_out_value_ptr[16] = matrix_in(16, 16);
  matrix_out_value_ptr[17] = matrix_in(17, 17);
  matrix_out_value_ptr[18] = matrix_in(18, 18);
  matrix_out_value_ptr[19] = matrix_in(19, 19);
  matrix_out_value_ptr[20] = matrix_in(20, 20);
  matrix_out_value_ptr[21] = matrix_in(21, 21);
  matrix_out_value_ptr[22] = matrix_in(22, 22);
  matrix_out_value_ptr[23] = matrix_in(23, 23);
  matrix_out_value_ptr[24] = matrix_in(24, 24);
  matrix_out_value_ptr[25] = matrix_in(25, 25);
  matrix_out_value_ptr[26] = matrix_in(26, 26);
  matrix_out_value_ptr[27] = matrix_in(27, 27);
  matrix_out_value_ptr[28] = matrix_in(28, 28);
  matrix_out_value_ptr[29] = matrix_in(29, 29);
  matrix_out_value_ptr[30] = matrix_in(30, 30);
  matrix_out_value_ptr[31] = matrix_in(31, 31);
  matrix_out_value_ptr[32] = matrix_in(32, 32);
  matrix_out_value_ptr[33] = matrix_in(33, 33);
  matrix_out_value_ptr[34] = matrix_in(34, 34);
  matrix_out_value_ptr[35] = matrix_in(35, 35);
  matrix_out_value_ptr[36] = matrix_in(36, 36);
  matrix_out_value_ptr[37] = matrix_in(37, 37);
  matrix_out_value_ptr[38] = matrix_in(38, 38);
  matrix_out_value_ptr[39] = matrix_in(39, 39);
  matrix_out_value_ptr[40] = matrix_in(40, 40);
  matrix_out_value_ptr[41] = matrix_in(41, 41);
  matrix_out_value_ptr[42] = matrix_in(42, 42);
  matrix_out_value_ptr[43] = matrix_in(43, 43);
  matrix_out_value_ptr[44] = matrix_in(44, 44);
  matrix_out_value_ptr[45] = matrix_in(45, 45);
  matrix_out_value_ptr[46] = matrix_in(46, 46);
  matrix_out_value_ptr[47] = matrix_in(47, 47);
  matrix_out_value_ptr[48] = matrix_in(48, 48);
  matrix_out_value_ptr[49] = matrix_in(49, 49);
  matrix_out_value_ptr[50] = matrix_in(50, 50);
  matrix_out_value_ptr[51] = matrix_in(51, 51);
  matrix_out_value_ptr[52] = matrix_in(52, 52);
  matrix_out_value_ptr[53] = matrix_in(53, 53);
  matrix_out_value_ptr[54] = matrix_in(54, 54);
  matrix_out_value_ptr[55] = matrix_in(55, 55);
  matrix_out_value_ptr[56] = matrix_in(56, 56);
  matrix_out_value_ptr[57] = matrix_in(57, 57);
  matrix_out_value_ptr[58] = matrix_in(58, 58);
  matrix_out_value_ptr[59] = matrix_in(59, 59);
  matrix_out_value_ptr[60] = matrix_in(60, 60);
  matrix_out_value_ptr[61] = matrix_in(61, 61);
  matrix_out_value_ptr[62] = matrix_in(62, 62);
  matrix_out_value_ptr[63] = matrix_in(63, 63);
  matrix_out_value_ptr[64] = matrix_in(64, 64);
  matrix_out_value_ptr[65] = matrix_in(65, 65);
  matrix_out_value_ptr[66] = matrix_in(66, 66);
  matrix_out_value_ptr[67] = matrix_in(67, 67);
  matrix_out_value_ptr[68] = matrix_in(68, 68);
  matrix_out_value_ptr[69] = matrix_in(69, 69);
  matrix_out_value_ptr[70] = matrix_in(70, 70);
  matrix_out_value_ptr[71] = matrix_in(71, 71);
  matrix_out_value_ptr[72] = matrix_in(72, 72);
  matrix_out_value_ptr[73] = matrix_in(73, 73);
  matrix_out_value_ptr[74] = matrix_in(74, 74);
  matrix_out_value_ptr[75] = matrix_in(75, 75);
  matrix_out_value_ptr[76] = matrix_in(76, 76);
  matrix_out_value_ptr[77] = matrix_in(77, 77);
  matrix_out_value_ptr[78] = matrix_in(78, 78);
  matrix_out_value_ptr[79] = matrix_in(79, 79);
  matrix_out_value_ptr[80] = matrix_in(80, 80);
  matrix_out_value_ptr[81] = matrix_in(81, 81);
  matrix_out_value_ptr[82] = matrix_in(82, 82);
  matrix_out_value_ptr[83] = matrix_in(83, 83);
  matrix_out_value_ptr[84] = matrix_in(84, 84);
  matrix_out_value_ptr[85] = matrix_in(85, 85);
  matrix_out_value_ptr[86] = matrix_in(86, 86);
  matrix_out_value_ptr[87] = matrix_in(87, 87);
  matrix_out_value_ptr[88] = matrix_in(88, 88);
  matrix_out_value_ptr[89] = matrix_in(89, 89);
  matrix_out_value_ptr[90] = matrix_in(90, 90);
  matrix_out_value_ptr[91] = matrix_in(91, 91);
  matrix_out_value_ptr[92] = matrix_in(92, 92);
  matrix_out_value_ptr[93] = matrix_in(93, 93);
  matrix_out_value_ptr[94] = matrix_in(94, 94);
  matrix_out_value_ptr[95] = matrix_in(95, 95);
  matrix_out_value_ptr[96] = matrix_in(96, 96);
  matrix_out_value_ptr[97] = matrix_in(97, 97);
  matrix_out_value_ptr[98] = matrix_in(98, 98);
  matrix_out_value_ptr[99] = matrix_in(99, 99);

  return matrix_out;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace codegen_sparse_matrix_test
